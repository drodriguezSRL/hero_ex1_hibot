   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 23, 1
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.thumb
  12              		.file	"misc.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.NVIC_PriorityGroupConfig,"ax",%progbits
  17              		.align	2
  18              		.global	NVIC_PriorityGroupConfig
  19              		.thumb
  20              		.thumb_func
  22              	NVIC_PriorityGroupConfig:
  23              	.LFB110:
  24              		.file 1 "../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c"
   1:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
   2:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
   3:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @file    misc.c
   4:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @author  MCD Application Team
   5:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @version V1.0.2
   6:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @date    05-March-2012
   7:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief   This file provides all the miscellaneous firmware functions (add-on
   8:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          to CMSIS functions).
   9:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          
  10:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  @verbatim   
  11:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                               
  12:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          ===================================================================      
  13:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                        How to configure Interrupts using driver 
  14:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          ===================================================================      
  15:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * 
  16:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            This section provide functions allowing to configure the NVIC interrupts (IRQ).
  17:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            The Cortex-M4 exceptions are managed by CMSIS functions.
  18:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  19:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            1. Configure the NVIC Priority Grouping using NVIC_PriorityGroupConfig()
  20:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                function according to the following table.
  21:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****  
  22:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  The table below gives the allowed values of the pre-emption priority and subpriority according
  23:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  to the Priority Grouping configuration performed by NVIC_PriorityGroupConfig function
  24:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    ============================================================================================
  25:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *      NVIC_PriorityGroup   | NVIC_IRQChannelPreemptionPriority | NVIC_IRQChannelSubPriority  |  
  26:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    ============================================================================================
  27:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_0  |                0                  |            0-15             | 0
  28:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 4
  29:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  30:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_1  |                0-1                |            0-7              | 1
  31:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 3
  32:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  33:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_2  |                0-3                |            0-3              | 2
  34:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 2
  35:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  36:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_3  |                0-7                |            0-1              | 3
  37:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 1
  38:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  39:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_4  |                0-15               |            0                | 4
  40:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 0
  41:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    ============================================================================================
  42:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  43:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            2. Enable and Configure the priority of the selected IRQ Channels using NVIC_Init() 
  44:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  45:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note  When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible. 
  46:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *        The pending IRQ priority will be managed only by the subpriority.
  47:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  48:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note  IRQ priority order (sorted by highest to lowest priority):
  49:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         - Lowest pre-emption priority
  50:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         - Lowest subpriority
  51:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         - Lowest hardware priority (IRQ number)
  52:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  53:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  @endverbatim
  54:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  55:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
  56:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @attention
  57:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  58:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  59:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  60:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  61:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * You may not use this file except in compliance with the License.
  62:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * You may obtain a copy of the License at:
  63:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  64:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  65:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  66:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * Unless required by applicable law or agreed to in writing, software 
  67:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  68:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  69:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * See the License for the specific language governing permissions and
  70:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * limitations under the License.
  71:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  72:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
  73:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  74:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  75:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Includes ------------------------------------------------------------------*/
  76:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** #include "misc.h"
  77:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  78:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  79:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @{
  80:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  81:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  82:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** /** @defgroup MISC 
  83:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief MISC driver modules
  84:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @{
  85:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  86:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  87:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private typedef -----------------------------------------------------------*/
  88:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private define ------------------------------------------------------------*/
  89:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** #define AIRCR_VECTKEY_MASK    ((uint32_t)0x05FA0000)
  90:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  91:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private macro -------------------------------------------------------------*/
  92:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private variables ---------------------------------------------------------*/
  93:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private function prototypes -----------------------------------------------*/
  94:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private functions ---------------------------------------------------------*/
  95:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  96:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** /** @defgroup MISC_Private_Functions
  97:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @{
  98:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  99:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 100:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 101:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Configures the priority grouping: pre-emption priority and subpriority.
 102:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_PriorityGroup: specifies the priority grouping bits length. 
 103:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 104:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_0: 0 bits for pre-emption priority
 105:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                4 bits for subpriority
 106:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_1: 1 bits for pre-emption priority
 107:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                3 bits for subpriority
 108:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_2: 2 bits for pre-emption priority
 109:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                2 bits for subpriority
 110:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_3: 3 bits for pre-emption priority
 111:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                1 bits for subpriority
 112:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_4: 4 bits for pre-emption priority
 113:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                0 bits for subpriority
 114:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible. 
 115:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         The pending IRQ priority will be managed only by the subpriority. 
 116:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 117:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 118:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
 119:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** {
  25              		.loc 1 119 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
 120:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 121:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
 122:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   
 123:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
 124:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
  31              		.loc 1 124 0
  32 0000 40F0BF60 		orr	r0, r0, #100139008
  33              	.LVL1:
  34 0004 40F40030 		orr	r0, r0, #131072
  35 0008 014B     		ldr	r3, .L2
  36 000a D860     		str	r0, [r3, #12]
  37 000c 7047     		bx	lr
  38              	.L3:
  39 000e 00BF     		.align	2
  40              	.L2:
  41 0010 00ED00E0 		.word	-536810240
  42              		.cfi_endproc
  43              	.LFE110:
  45              		.section	.text.NVIC_Init,"ax",%progbits
  46              		.align	2
  47              		.global	NVIC_Init
  48              		.thumb
  49              		.thumb_func
  51              	NVIC_Init:
  52              	.LFB111:
 125:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** }
 126:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 127:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 128:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Initializes the NVIC peripheral according to the specified
 129:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         parameters in the NVIC_InitStruct.
 130:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 131:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         function should be called before. 
 132:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
 133:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         the configuration information for the specified NVIC peripheral.
 134:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 135:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 136:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
 137:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** {
  53              		.loc 1 137 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.LVL2:
  59 0000 30B4     		push	{r4, r5}
  60              	.LCFI0:
  61              		.cfi_def_cfa_offset 8
  62              		.cfi_offset 4, -8
  63              		.cfi_offset 5, -4
  64              	.LVL3:
 138:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   uint8_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
 139:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   
 140:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 141:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
 142:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
 143:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
 144:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     
 145:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
  65              		.loc 1 145 0
  66 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
  67 0004 63B9     		cbnz	r3, .L8
 146:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 147:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     /* Compute the Corresponding IRQ Priority --------------------------------*/    
 148:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
 149:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppre = (0x4 - tmppriority);
 150:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmpsub = tmpsub >> tmppriority;
 151:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 152:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
 153:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority |=  (uint8_t)(NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub);
 154:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****         
 155:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = tmppriority << 0x04;
 156:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****         
 157:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
 158:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     
 159:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     /* Enable the Selected IRQ Channels --------------------------------------*/
 160:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 161:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 162:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 163:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   else
 164:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 165:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     /* Disable the Selected IRQ Channels -------------------------------------*/
 166:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
  68              		.loc 1 166 0
  69 0006 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
  70 0008 5909     		lsrs	r1, r3, #5
 167:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
  71              		.loc 1 167 0
  72 000a 03F01F03 		and	r3, r3, #31
 166:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
  73              		.loc 1 166 0
  74 000e 2031     		adds	r1, r1, #32
  75              		.loc 1 167 0
  76 0010 0122     		movs	r2, #1
  77 0012 02FA03F3 		lsl	r3, r2, r3
 166:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
  78              		.loc 1 166 0
  79 0016 154A     		ldr	r2, .L9
  80 0018 42F82130 		str	r3, [r2, r1, lsl #2]
  81              	.LVL4:
  82              	.L4:
 168:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 169:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** }
  83              		.loc 1 169 0
  84 001c 30BC     		pop	{r4, r5}
  85 001e 7047     		bx	lr
  86              	.LVL5:
  87              	.L8:
 152:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
  88              		.loc 1 152 0
  89 0020 4578     		ldrb	r5, [r0, #1]	@ zero_extendqisi2
 148:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
  90              		.loc 1 148 0
  91 0022 134B     		ldr	r3, .L9+4
  92 0024 DA68     		ldr	r2, [r3, #12]
 153:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority |=  (uint8_t)(NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub);
  93              		.loc 1 153 0
  94 0026 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 157:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
  95              		.loc 1 157 0
  96 0028 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 148:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
  97              		.loc 1 148 0
  98 002a D243     		mvns	r2, r2
  99 002c C2F30222 		ubfx	r2, r2, #8, #3
 100              	.LVL6:
 149:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppre = (0x4 - tmppriority);
 101              		.loc 1 149 0
 102 0030 C2F10401 		rsb	r1, r2, #4
 152:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
 103              		.loc 1 152 0
 104 0034 C9B2     		uxtb	r1, r1
 105 0036 05FA01F1 		lsl	r1, r5, r1
 150:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmpsub = tmpsub >> tmppriority;
 106              		.loc 1 150 0
 107 003a 0F25     		movs	r5, #15
 108 003c 45FA02F2 		asr	r2, r5, r2
 109              	.LVL7:
 152:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
 110              		.loc 1 152 0
 111 0040 C9B2     		uxtb	r1, r1
 112              	.LVL8:
 153:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority |=  (uint8_t)(NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub);
 113              		.loc 1 153 0
 114 0042 2240     		ands	r2, r2, r4
 115 0044 0A43     		orrs	r2, r2, r1
 116              	.LVL9:
 157:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
 117              		.loc 1 157 0
 118 0046 03F16043 		add	r3, r3, #-536870912
 155:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = tmppriority << 0x04;
 119              		.loc 1 155 0
 120 004a 1201     		lsls	r2, r2, #4
 121              	.LVL10:
 157:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
 122              		.loc 1 157 0
 123 004c 03F56143 		add	r3, r3, #57600
 124              	.LVL11:
 125 0050 83F80023 		strb	r2, [r3, #768]
 160:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 126              		.loc 1 160 0
 127 0054 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 128 0056 5909     		lsrs	r1, r3, #5
 161:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 129              		.loc 1 161 0
 130 0058 03F01F03 		and	r3, r3, #31
 131 005c 0122     		movs	r2, #1
 132              	.LVL12:
 133 005e 02FA03F3 		lsl	r3, r2, r3
 160:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 134              		.loc 1 160 0
 135 0062 024A     		ldr	r2, .L9
 136 0064 42F82130 		str	r3, [r2, r1, lsl #2]
 137 0068 D8E7     		b	.L4
 138              	.L10:
 139 006a 00BF     		.align	2
 140              	.L9:
 141 006c 00E100E0 		.word	-536813312
 142 0070 00ED00E0 		.word	-536810240
 143              		.cfi_endproc
 144              	.LFE111:
 146              		.section	.text.NVIC_SetVectorTable,"ax",%progbits
 147              		.align	2
 148              		.global	NVIC_SetVectorTable
 149              		.thumb
 150              		.thumb_func
 152              	NVIC_SetVectorTable:
 153              	.LFB112:
 170:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 171:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 172:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Sets the vector table location and Offset.
 173:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_VectTab: specifies if the vector table is in RAM or FLASH memory.
 174:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 175:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_VectTab_RAM: Vector Table in internal SRAM.
 176:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_VectTab_FLASH: Vector Table in internal FLASH.
 177:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  Offset: Vector Table base offset field. This value must be a multiple of 0x200.
 178:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 179:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 180:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
 181:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** { 
 154              		.loc 1 181 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              	.LVL13:
 182:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 183:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
 184:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_OFFSET(Offset));  
 185:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****    
 186:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
 160              		.loc 1 186 0
 161 0000 21F06041 		bic	r1, r1, #-536870912
 162              	.LVL14:
 163 0004 21F07F01 		bic	r1, r1, #127
 164 0008 0843     		orrs	r0, r0, r1
 165              	.LVL15:
 166 000a 014B     		ldr	r3, .L12
 167 000c 9860     		str	r0, [r3, #8]
 168 000e 7047     		bx	lr
 169              	.L13:
 170              		.align	2
 171              	.L12:
 172 0010 00ED00E0 		.word	-536810240
 173              		.cfi_endproc
 174              	.LFE112:
 176              		.section	.text.NVIC_SystemLPConfig,"ax",%progbits
 177              		.align	2
 178              		.global	NVIC_SystemLPConfig
 179              		.thumb
 180              		.thumb_func
 182              	NVIC_SystemLPConfig:
 183              	.LFB113:
 187:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** }
 188:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 189:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 190:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Selects the condition for the system to enter low power mode.
 191:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  LowPowerMode: Specifies the new mode for the system to enter low power mode.
 192:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 193:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SEVONPEND: Low Power SEV on Pend.
 194:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SLEEPDEEP: Low Power DEEPSLEEP request.
 195:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SLEEPONEXIT: Low Power Sleep on Exit.
 196:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NewState: new state of LP condition. This parameter can be: ENABLE or DISABLE.
 197:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 198:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 199:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)
 200:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** {
 184              		.loc 1 200 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189              	.LVL16:
 201:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 202:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_LP(LowPowerMode));
 203:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));  
 204:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   
 205:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   if (NewState != DISABLE)
 206:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 207:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     SCB->SCR |= LowPowerMode;
 190              		.loc 1 207 0
 191 0000 044B     		ldr	r3, .L18
 192 0002 1A69     		ldr	r2, [r3, #16]
 205:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   if (NewState != DISABLE)
 193              		.loc 1 205 0
 194 0004 19B9     		cbnz	r1, .L17
 208:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 209:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   else
 210:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 211:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
 195              		.loc 1 211 0
 196 0006 22EA0000 		bic	r0, r2, r0
 197              	.LVL17:
 198 000a 1861     		str	r0, [r3, #16]
 199 000c 7047     		bx	lr
 200              	.LVL18:
 201              	.L17:
 207:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     SCB->SCR |= LowPowerMode;
 202              		.loc 1 207 0
 203 000e 1043     		orrs	r0, r0, r2
 204              	.LVL19:
 205 0010 1861     		str	r0, [r3, #16]
 206 0012 7047     		bx	lr
 207              	.L19:
 208              		.align	2
 209              	.L18:
 210 0014 00ED00E0 		.word	-536810240
 211              		.cfi_endproc
 212              	.LFE113:
 214              		.section	.text.SysTick_CLKSourceConfig,"ax",%progbits
 215              		.align	2
 216              		.global	SysTick_CLKSourceConfig
 217              		.thumb
 218              		.thumb_func
 220              	SysTick_CLKSourceConfig:
 221              	.LFB114:
 212:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 213:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** }
 214:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 215:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 216:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Configures the SysTick clock source.
 217:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  SysTick_CLKSource: specifies the SysTick clock source.
 218:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 219:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg SysTick_CLKSource_HCLK_Div8: AHB clock divided by 8 selected as SysTick clock source.
 220:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg SysTick_CLKSource_HCLK: AHB clock selected as SysTick clock source.
 221:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 222:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 223:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)
 224:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c **** {
 222              		.loc 1 224 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 227              	.LVL20:
 225:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 226:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
 227:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
 228:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 229:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     SysTick->CTRL |= SysTick_CLKSource_HCLK;
 228              		.loc 1 229 0
 229 0000 044B     		ldr	r3, .L23
 230 0002 1A68     		ldr	r2, [r3, #0]
 227:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
 231              		.loc 1 227 0
 232 0004 0428     		cmp	r0, #4
 233              		.loc 1 229 0
 234 0006 0CBF     		ite	eq
 235 0008 42F00402 		orreq	r2, r2, #4
 230:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 231:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   else
 232:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 233:../../lib/STM32F4xx_StdPeriph_Driver/src/misc.c ****     SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
 236              		.loc 1 233 0
 237 000c 22F00402 		bicne	r2, r2, #4
 238 0010 1A60     		str	r2, [r3, #0]
 239 0012 7047     		bx	lr
 240              	.L24:
 241              		.align	2
 242              	.L23:
 243 0014 10E000E0 		.word	-536813552
 244              		.cfi_endproc
 245              	.LFE114:
 247              		.text
 248              	.Letext0:
 249              		.file 2 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 250              		.file 3 "../../lib/CMSIS/Include/core_cm4.h"
 251              		.file 4 "../../lib/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 252              		.file 5 "../../lib/STM32F4xx_StdPeriph_Driver/inc/misc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 misc.c
C:\Users\root\AppData\Local\Temp\ccA8PlvD.s:17     .text.NVIC_PriorityGroupConfig:00000000 $t
C:\Users\root\AppData\Local\Temp\ccA8PlvD.s:22     .text.NVIC_PriorityGroupConfig:00000000 NVIC_PriorityGroupConfig
C:\Users\root\AppData\Local\Temp\ccA8PlvD.s:41     .text.NVIC_PriorityGroupConfig:00000010 $d
C:\Users\root\AppData\Local\Temp\ccA8PlvD.s:46     .text.NVIC_Init:00000000 $t
C:\Users\root\AppData\Local\Temp\ccA8PlvD.s:51     .text.NVIC_Init:00000000 NVIC_Init
C:\Users\root\AppData\Local\Temp\ccA8PlvD.s:141    .text.NVIC_Init:0000006c $d
C:\Users\root\AppData\Local\Temp\ccA8PlvD.s:147    .text.NVIC_SetVectorTable:00000000 $t
C:\Users\root\AppData\Local\Temp\ccA8PlvD.s:152    .text.NVIC_SetVectorTable:00000000 NVIC_SetVectorTable
C:\Users\root\AppData\Local\Temp\ccA8PlvD.s:172    .text.NVIC_SetVectorTable:00000010 $d
C:\Users\root\AppData\Local\Temp\ccA8PlvD.s:177    .text.NVIC_SystemLPConfig:00000000 $t
C:\Users\root\AppData\Local\Temp\ccA8PlvD.s:182    .text.NVIC_SystemLPConfig:00000000 NVIC_SystemLPConfig
C:\Users\root\AppData\Local\Temp\ccA8PlvD.s:210    .text.NVIC_SystemLPConfig:00000014 $d
C:\Users\root\AppData\Local\Temp\ccA8PlvD.s:215    .text.SysTick_CLKSourceConfig:00000000 $t
C:\Users\root\AppData\Local\Temp\ccA8PlvD.s:220    .text.SysTick_CLKSourceConfig:00000000 SysTick_CLKSourceConfig
C:\Users\root\AppData\Local\Temp\ccA8PlvD.s:243    .text.SysTick_CLKSourceConfig:00000014 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
