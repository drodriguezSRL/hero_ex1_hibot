   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 23, 1
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.thumb
  12              		.file	"stm32f4xx_sdio.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.SDIO_DeInit,"ax",%progbits
  17              		.align	2
  18              		.global	SDIO_DeInit
  19              		.thumb
  20              		.thumb_func
  22              	SDIO_DeInit:
  23              	.LFB110:
  24              		.file 1 "../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c"
   1:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
   2:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
   3:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @file    stm32f4xx_sdio.c
   4:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @author  MCD Application Team
   5:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @version V1.0.2
   6:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @date    05-March-2012
   7:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          functionalities of the Secure digital input/output interface (SDIO) 
   9:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          peripheral:
  10:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Initialization and Configuration
  11:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Command path state machine (CPSM) management
  12:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Data path state machine (DPSM) management
  13:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - SDIO IO Cards mode management
  14:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - CE-ATA mode management
  15:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - DMA transfers management
  16:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Interrupts and flags management
  17:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  18:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *  @verbatim
  19:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  20:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  21:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          ===================================================================
  22:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                 How to use this driver
  23:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          ===================================================================
  24:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          1. The SDIO clock (SDIOCLK = 48 MHz) is coming from a specific output
  25:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             of PLL (PLL48CLK). Before to start working with SDIO peripheral
  26:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             make sure that the PLL is well configured.
  27:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          The SDIO peripheral uses two clock signals:
  28:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              - SDIO adapter clock (SDIOCLK = 48 MHz)
  29:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              - APB2 bus clock (PCLK2)
  30:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          PCLK2 and SDIO_CK clock frequencies must respect the following condition:
  31:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   Frequenc(PCLK2) >= (3 / 8 x Frequency(SDIO_CK))
  32:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  33:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          2. Enable peripheral clock using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SDIO, ENABLE).
  34:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  35:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          3.  According to the SDIO mode, enable the GPIO clocks using 
  36:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              RCC_AHB1PeriphClockCmd() function. 
  37:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              The I/O can be one of the following configurations:
  38:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 1-bit data length: SDIO_CMD, SDIO_CK and D0.
  39:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 4-bit data length: SDIO_CMD, SDIO_CK and D[3:0].
  40:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 8-bit data length: SDIO_CMD, SDIO_CK and D[7:0].      
  41:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  42:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          4. Peripheral's alternate function: 
  43:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  44:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  45:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Configure the desired pin in alternate function by:
  46:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  47:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  48:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  49:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Call GPIO_Init() function
  50:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  51:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          5. Program the Clock Edge, Clock Bypass, Clock Power Save, Bus Wide, 
  52:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             hardware, flow control and the Clock Divider using the SDIO_Init()
  53:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             function.
  54:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  55:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          6. Enable the Power ON State using the SDIO_SetPowerState(SDIO_PowerState_ON) 
  56:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             function.
  57:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              
  58:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          7. Enable the clock using the SDIO_ClockCmd() function.
  59:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  60:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          8. Enable the NVIC and the corresponding interrupt using the function 
  61:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             SDIO_ITConfig() if you need to use interrupt mode. 
  62:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  63:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          9. When using the DMA mode 
  64:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Configure the DMA using DMA_Init() function
  65:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Active the needed channel Request using SDIO_DMACmd() function
  66:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  67:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          10. Enable the DMA using the DMA_Cmd() function, when using DMA mode. 
  68:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  69:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          11. To control the CPSM (Command Path State Machine) and send 
  70:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              commands to the card use the SDIO_SendCommand(), 
  71:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_GetCommandResponse() and SDIO_GetResponse() functions.     
  72:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              First, user has to fill the command structure (pointer to
  73:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_CmdInitTypeDef) according to the selected command to be sent.
  74:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
  75:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Argument
  76:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Index
  77:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Response type
  78:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Wait
  79:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - CPSM Status (Enable or Disable)
  80:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  81:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              To check if the command is well received, read the SDIO_CMDRESP
  82:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              register using the SDIO_GetCommandResponse().
  83:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              The SDIO responses registers (SDIO_RESP1 to SDIO_RESP2), use the
  84:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_GetResponse() function.
  85:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  86:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          12. To control the DPSM (Data Path State Machine) and send/receive 
  87:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              data to/from the card use the SDIO_DataConfig(), SDIO_GetDataCounter(), 
  88:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_ReadData(), SDIO_WriteData() and SDIO_GetFIFOCount() functions.
  89:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  90:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              Read Operations
  91:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              ---------------
  92:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
  93:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
  94:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 be received.
  95:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
  96:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data TimeOut
  97:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Length
  98:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Block size
  99:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer direction: should be from card (To SDIO)
 100:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer mode
 101:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 102:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   
 103:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              b) Configure the SDIO resources to receive the data from the card
 104:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 105:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 106:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              c) Send the selected Read command (refer to step 11).
 107:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                  
 108:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 109:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 110:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              Write Operations
 111:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              ---------------
 112:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
 113:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
 114:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 be received.
 115:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
 116:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data TimeOut
 117:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Length
 118:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Block size
 119:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer direction:  should be to card (To CARD)
 120:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer mode
 121:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 122:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 123:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              b) Configure the SDIO resources to send the data to the card
 124:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 125:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   
 126:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              c) Send the selected Write command (refer to step 11).
 127:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                  
 128:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 129:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 130:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 131:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *  @endverbatim
 132:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 133:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 134:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
 135:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @attention
 136:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 137:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
 138:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 139:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 140:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * You may not use this file except in compliance with the License.
 141:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * You may obtain a copy of the License at:
 142:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 143:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 144:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 145:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * Unless required by applicable law or agreed to in writing, software 
 146:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 147:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 148:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * See the License for the specific language governing permissions and
 149:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * limitations under the License.
 150:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 151:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
 152:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 153:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 154:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Includes ------------------------------------------------------------------*/
 155:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #include "stm32f4xx_sdio.h"
 156:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #include "stm32f4xx_rcc.h"
 157:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 158:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 159:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 160:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 161:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 162:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO 
 163:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief SDIO driver modules
 164:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 165:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */ 
 166:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 167:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private typedef -----------------------------------------------------------*/
 168:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private define ------------------------------------------------------------*/
 169:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 170:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* ------------ SDIO registers bit address in the alias region ----------- */
 171:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIO_OFFSET                (SDIO_BASE - PERIPH_BASE)
 172:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 173:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 174:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of CLKEN bit */
 175:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_OFFSET              (SDIO_OFFSET + 0x04)
 176:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKEN_BitNumber           0x08
 177:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_CLKEN_BB            (PERIPH_BB_BASE + (CLKCR_OFFSET * 32) + (CLKEN_BitNumber * 4))
 178:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 179:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 180:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOSUSPEND bit */
 181:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_OFFSET                (SDIO_OFFSET + 0x0C)
 182:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIOSUSPEND_BitNumber     0x0B
 183:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_SDIOSUSPEND_BB        (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (SDIOSUSPEND_BitNumber * 4)
 184:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 185:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of ENCMDCOMPL bit */
 186:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define ENCMDCOMPL_BitNumber      0x0C
 187:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_ENCMDCOMPL_BB         (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ENCMDCOMPL_BitNumber * 4))
 188:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 189:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of NIEN bit */
 190:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define NIEN_BitNumber            0x0D
 191:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_NIEN_BB               (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (NIEN_BitNumber * 4))
 192:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 193:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of ATACMD bit */
 194:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define ATACMD_BitNumber          0x0E
 195:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_ATACMD_BB             (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ATACMD_BitNumber * 4))
 196:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 197:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 198:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of DMAEN bit */
 199:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_OFFSET              (SDIO_OFFSET + 0x2C)
 200:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DMAEN_BitNumber           0x03
 201:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_DMAEN_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (DMAEN_BitNumber * 4))
 202:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 203:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTART bit */
 204:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWSTART_BitNumber         0x08
 205:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTART_BB          (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTART_BitNumber * 4))
 206:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 207:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTOP bit */
 208:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWSTOP_BitNumber          0x09
 209:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTOP_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTOP_BitNumber * 4))
 210:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 211:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWMOD bit */
 212:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWMOD_BitNumber           0x0A
 213:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWMOD_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWMOD_BitNumber * 4))
 214:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 215:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOEN bit */
 216:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIOEN_BitNumber          0x0B
 217:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_SDIOEN_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (SDIOEN_BitNumber * 4))
 218:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 219:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* ---------------------- SDIO registers bit mask ------------------------ */
 220:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 221:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* CLKCR register clear mask */
 222:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_CLEAR_MASK         ((uint32_t)0xFFFF8100) 
 223:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 224:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- PWRCTRL Register ---*/
 225:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO PWRCTRL Mask */
 226:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define PWR_PWRCTRL_MASK         ((uint32_t)0xFFFFFFFC)
 227:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 228:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 229:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO DCTRL Clear Mask */
 230:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_CLEAR_MASK         ((uint32_t)0xFFFFFF08)
 231:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 232:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 233:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* CMD Register clear mask */
 234:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_CLEAR_MASK           ((uint32_t)0xFFFFF800)
 235:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 236:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO RESP Registers Address */
 237:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIO_RESP_ADDR           ((uint32_t)(SDIO_BASE + 0x14))
 238:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 239:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private macro -------------------------------------------------------------*/
 240:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private variables ---------------------------------------------------------*/
 241:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private function prototypes -----------------------------------------------*/
 242:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private functions ---------------------------------------------------------*/
 243:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 244:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Private_Functions
 245:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 246:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 247:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 248:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group1 Initialization and Configuration functions
 249:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Initialization and Configuration functions 
 250:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 251:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 252:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 253:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****                  Initialization and Configuration functions
 254:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 255:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 256:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 257:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 258:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 259:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 260:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 261:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Deinitializes the SDIO peripheral registers to their default reset values.
 262:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 263:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 264:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 265:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DeInit(void)
 266:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
  25              		.loc 1 266 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29 0000 08B5     		push	{r3, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 3, -8
  33              		.cfi_offset 14, -4
 267:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, ENABLE);
  34              		.loc 1 267 0
  35 0002 4FF40060 		mov	r0, #2048
  36 0006 0121     		movs	r1, #1
  37 0008 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  38              	.LVL0:
 268:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, DISABLE);
  39              		.loc 1 268 0
  40 000c 4FF40060 		mov	r0, #2048
  41 0010 0021     		movs	r1, #0
 269:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
  42              		.loc 1 269 0
  43 0012 BDE80840 		pop	{r3, lr}
 268:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, DISABLE);
  44              		.loc 1 268 0
  45 0016 FFF7FEBF 		b	RCC_APB2PeriphResetCmd
  46              	.LVL1:
  47              		.cfi_endproc
  48              	.LFE110:
  50 001a 00BF     		.section	.text.SDIO_Init,"ax",%progbits
  51              		.align	2
  52              		.global	SDIO_Init
  53              		.thumb
  54              		.thumb_func
  56              	SDIO_Init:
  57              	.LFB111:
 270:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 271:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 272:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO peripheral according to the specified 
 273:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_InitStruct.
 274:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct : pointer to a SDIO_InitTypeDef structure 
 275:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO peripheral.
 276:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 277:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 278:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct)
 279:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
  58              		.loc 1 279 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63              	.LVL2:
  64 0000 F0B4     		push	{r4, r5, r6, r7}
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 16
  67              		.cfi_offset 4, -16
  68              		.cfi_offset 5, -12
  69              		.cfi_offset 6, -8
  70              		.cfi_offset 7, -4
  71              	.LVL3:
 280:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 281:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     
 282:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 283:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_EDGE(SDIO_InitStruct->SDIO_ClockEdge));
 284:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_BYPASS(SDIO_InitStruct->SDIO_ClockBypass));
 285:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_POWER_SAVE(SDIO_InitStruct->SDIO_ClockPowerSave));
 286:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BUS_WIDE(SDIO_InitStruct->SDIO_BusWide));
 287:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(SDIO_InitStruct->SDIO_HardwareFlowControl)); 
 288:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 289:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CLKCR Configuration ------------------------*/  
 290:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO CLKCR value */
 291:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CLKCR;
  72              		.loc 1 291 0
  73 0002 0B4B     		ldr	r3, .L3
 292:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 293:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear CLKDIV, PWRSAV, BYPASS, WIDBUS, NEGEDGE, HWFC_EN bits */
 294:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CLKCR_CLEAR_MASK;
 295:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 296:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CLKDIV bits according to SDIO_ClockDiv value */
 297:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set PWRSAV bit according to SDIO_ClockPowerSave value */
 298:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set BYPASS bit according to SDIO_ClockBypass value */
 299:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WIDBUS bits according to SDIO_BusWide value */
 300:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set NEGEDGE bits according to SDIO_ClockEdge value */
 301:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set HWFC_EN bits according to SDIO_HardwareFlowControl value */
 302:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
  74              		.loc 1 302 0
  75 0004 D0F804C0 		ldr	ip, [r0, #4]
  76 0008 8268     		ldr	r2, [r0, #8]
  77 000a C768     		ldr	r7, [r0, #12]
 291:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CLKCR;
  78              		.loc 1 291 0
  79 000c 5D68     		ldr	r5, [r3, #4]
  80              	.LVL4:
 303:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
  81              		.loc 1 303 0
  82 000e 0668     		ldr	r6, [r0, #0]
  83 0010 0469     		ldr	r4, [r0, #16]
 302:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
  84              		.loc 1 302 0
  85 0012 017D     		ldrb	r1, [r0, #20]	@ zero_extendqisi2
  86 0014 4CEA0202 		orr	r2, ip, r2
  87 0018 3A43     		orrs	r2, r2, r7
  88              		.loc 1 303 0
  89 001a 3243     		orrs	r2, r2, r6
 294:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CLKCR_CLEAR_MASK;
  90              		.loc 1 294 0
  91 001c 25F4FD40 		bic	r0, r5, #32384
  92              	.LVL5:
  93              		.loc 1 303 0
  94 0020 2243     		orrs	r2, r2, r4
 294:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CLKCR_CLEAR_MASK;
  95              		.loc 1 294 0
  96 0022 20F07F00 		bic	r0, r0, #127
 304:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockEdge | SDIO_InitStruct->SDIO_HardwareFlowControl); 
  97              		.loc 1 304 0
  98 0026 0243     		orrs	r2, r2, r0
 302:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
  99              		.loc 1 302 0
 100 0028 0A43     		orrs	r2, r2, r1
 101              	.LVL6:
 305:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 306:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO CLKCR */
 307:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->CLKCR = tmpreg;
 102              		.loc 1 307 0
 103 002a 5A60     		str	r2, [r3, #4]
 308:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 104              		.loc 1 308 0
 105 002c F0BC     		pop	{r4, r5, r6, r7}
 106 002e 7047     		bx	lr
 107              	.L4:
 108              		.align	2
 109              	.L3:
 110 0030 002C0140 		.word	1073818624
 111              		.cfi_endproc
 112              	.LFE111:
 114              		.section	.text.SDIO_StructInit,"ax",%progbits
 115              		.align	2
 116              		.global	SDIO_StructInit
 117              		.thumb
 118              		.thumb_func
 120              	SDIO_StructInit:
 121              	.LFB112:
 309:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 310:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 311:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_InitStruct member with its default value.
 312:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct: pointer to an SDIO_InitTypeDef structure which 
 313:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         will be initialized.
 314:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 315:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 316:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct)
 317:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 122              		.loc 1 317 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.LVL7:
 318:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_InitStruct members default value */
 319:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockDiv = 0x00;
 128              		.loc 1 319 0
 129 0000 0023     		movs	r3, #0
 130 0002 0375     		strb	r3, [r0, #20]
 320:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 131              		.loc 1 320 0
 132 0004 0360     		str	r3, [r0, #0]
 321:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 133              		.loc 1 321 0
 134 0006 4360     		str	r3, [r0, #4]
 322:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 135              		.loc 1 322 0
 136 0008 8360     		str	r3, [r0, #8]
 323:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_BusWide = SDIO_BusWide_1b;
 137              		.loc 1 323 0
 138 000a C360     		str	r3, [r0, #12]
 324:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 139              		.loc 1 324 0
 140 000c 0361     		str	r3, [r0, #16]
 141 000e 7047     		bx	lr
 142              		.cfi_endproc
 143              	.LFE112:
 145              		.section	.text.SDIO_ClockCmd,"ax",%progbits
 146              		.align	2
 147              		.global	SDIO_ClockCmd
 148              		.thumb
 149              		.thumb_func
 151              	SDIO_ClockCmd:
 152              	.LFB113:
 325:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 326:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 327:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 328:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO Clock.
 329:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SDIO Clock. 
 330:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 331:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 332:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 333:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClockCmd(FunctionalState NewState)
 334:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 153              		.loc 1 334 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158              	.LVL8:
 335:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 336:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 337:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 338:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CLKCR_CLKEN_BB = (uint32_t)NewState;
 159              		.loc 1 338 0
 160 0000 014B     		ldr	r3, .L7
 161 0002 1860     		str	r0, [r3, #0]
 162 0004 7047     		bx	lr
 163              	.L8:
 164 0006 00BF     		.align	2
 165              	.L7:
 166 0008 A0802542 		.word	1109754016
 167              		.cfi_endproc
 168              	.LFE113:
 170              		.section	.text.SDIO_SetPowerState,"ax",%progbits
 171              		.align	2
 172              		.global	SDIO_SetPowerState
 173              		.thumb
 174              		.thumb_func
 176              	SDIO_SetPowerState:
 177              	.LFB114:
 339:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 340:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 341:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 342:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sets the power status of the controller.
 343:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_PowerState: new state of the Power state. 
 344:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 345:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_OFF: SDIO Power OFF
 346:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_ON: SDIO Power ON
 347:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 348:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 349:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetPowerState(uint32_t SDIO_PowerState)
 350:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 178              		.loc 1 350 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 183              	.LVL9:
 351:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 352:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_POWER_STATE(SDIO_PowerState));
 353:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 354:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->POWER = SDIO_PowerState;
 184              		.loc 1 354 0
 185 0000 014B     		ldr	r3, .L10
 186 0002 1860     		str	r0, [r3, #0]
 187 0004 7047     		bx	lr
 188              	.L11:
 189 0006 00BF     		.align	2
 190              	.L10:
 191 0008 002C0140 		.word	1073818624
 192              		.cfi_endproc
 193              	.LFE114:
 195              		.section	.text.SDIO_GetPowerState,"ax",%progbits
 196              		.align	2
 197              		.global	SDIO_GetPowerState
 198              		.thumb
 199              		.thumb_func
 201              	SDIO_GetPowerState:
 202              	.LFB115:
 355:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 356:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 357:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 358:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Gets the power status of the controller.
 359:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 360:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Power status of the controller. The returned value can be one of the 
 361:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         following values:
 362:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x00: Power OFF
 363:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x02: Power UP
 364:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x03: Power ON 
 365:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 366:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetPowerState(void)
 367:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 203              		.loc 1 367 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 368:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (SDIO->POWER & (~PWR_PWRCTRL_MASK));
 208              		.loc 1 368 0
 209 0000 024B     		ldr	r3, .L13
 210 0002 1868     		ldr	r0, [r3, #0]
 369:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 211              		.loc 1 369 0
 212 0004 00F00300 		and	r0, r0, #3
 213 0008 7047     		bx	lr
 214              	.L14:
 215 000a 00BF     		.align	2
 216              	.L13:
 217 000c 002C0140 		.word	1073818624
 218              		.cfi_endproc
 219              	.LFE115:
 221              		.section	.text.SDIO_SendCommand,"ax",%progbits
 222              		.align	2
 223              		.global	SDIO_SendCommand
 224              		.thumb
 225              		.thumb_func
 227              	SDIO_SendCommand:
 228              	.LFB116:
 370:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 371:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 372:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 373:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 374:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 375:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group2 Command path state machine (CPSM) management functions
 376:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Command path state machine (CPSM) management functions 
 377:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 378:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 379:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 380:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               Command path state machine (CPSM) management functions
 381:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 382:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 383:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Command path 
 384:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   state machine (CPSM).
 385:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 386:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 387:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 388:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 389:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 390:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 391:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO Command according to the specified 
 392:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_CmdInitStruct and send the command.
 393:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct : pointer to a SDIO_CmdInitTypeDef 
 394:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         structure that contains the configuration information for the SDIO 
 395:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         command.
 396:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 397:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 398:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
 399:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 229              		.loc 1 399 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              	.LVL10:
 235 0000 30B4     		push	{r4, r5}
 236              	.LCFI2:
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 4, -8
 239              		.cfi_offset 5, -4
 240              	.LVL11:
 400:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 401:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 402:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 403:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CMD_INDEX(SDIO_CmdInitStruct->SDIO_CmdIndex));
 404:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESPONSE(SDIO_CmdInitStruct->SDIO_Response));
 405:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_WAIT(SDIO_CmdInitStruct->SDIO_Wait));
 406:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CPSM(SDIO_CmdInitStruct->SDIO_CPSM));
 407:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 408:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO ARG Configuration ------------------------*/
 409:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO Argument value */
 410:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ARG = SDIO_CmdInitStruct->SDIO_Argument;
 241              		.loc 1 410 0
 242 0002 094B     		ldr	r3, .L16
 243 0004 0268     		ldr	r2, [r0, #0]
 244 0006 9A60     		str	r2, [r3, #8]
 411:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 412:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CMD Configuration ------------------------*/  
 413:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO CMD value */
 414:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CMD;
 415:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear CMDINDEX, WAITRESP, WAITINT, WAITPEND, CPSMEN bits */
 416:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CMD_CLEAR_MASK;
 417:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CMDINDEX bits according to SDIO_CmdIndex value */
 418:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WAITRESP bits according to SDIO_Response value */
 419:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WAITINT and WAITPEND bits according to SDIO_Wait value */
 420:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CPSMEN bits according to SDIO_CPSM value */
 421:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 245              		.loc 1 421 0
 246 0008 8568     		ldr	r5, [r0, #8]
 247 000a 4268     		ldr	r2, [r0, #4]
 414:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CMD;
 248              		.loc 1 414 0
 249 000c D968     		ldr	r1, [r3, #12]
 250              	.LVL12:
 422:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
 251              		.loc 1 422 0
 252 000e C468     		ldr	r4, [r0, #12]
 253 0010 0069     		ldr	r0, [r0, #16]
 254              	.LVL13:
 421:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 255              		.loc 1 421 0
 256 0012 2A43     		orrs	r2, r2, r5
 416:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CMD_CLEAR_MASK;
 257              		.loc 1 416 0
 258 0014 21F4FF61 		bic	r1, r1, #2040
 259              	.LVL14:
 260              		.loc 1 422 0
 261 0018 2243     		orrs	r2, r2, r4
 416:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CMD_CLEAR_MASK;
 262              		.loc 1 416 0
 263 001a 21F00701 		bic	r1, r1, #7
 264              	.LVL15:
 265              		.loc 1 422 0
 266 001e 0243     		orrs	r2, r2, r0
 421:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 267              		.loc 1 421 0
 268 0020 0A43     		orrs	r2, r2, r1
 269              	.LVL16:
 423:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 424:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO CMD */
 425:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->CMD = tmpreg;
 270              		.loc 1 425 0
 271 0022 DA60     		str	r2, [r3, #12]
 426:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 272              		.loc 1 426 0
 273 0024 30BC     		pop	{r4, r5}
 274 0026 7047     		bx	lr
 275              	.L17:
 276              		.align	2
 277              	.L16:
 278 0028 002C0140 		.word	1073818624
 279              		.cfi_endproc
 280              	.LFE116:
 282              		.section	.text.SDIO_CmdStructInit,"ax",%progbits
 283              		.align	2
 284              		.global	SDIO_CmdStructInit
 285              		.thumb
 286              		.thumb_func
 288              	SDIO_CmdStructInit:
 289              	.LFB117:
 427:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 428:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 429:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_CmdInitStruct member with its default value.
 430:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct: pointer to an SDIO_CmdInitTypeDef 
 431:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         structure which will be initialized.
 432:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 433:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 434:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
 435:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 290              		.loc 1 435 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294              		@ link register save eliminated.
 295              	.LVL17:
 436:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_CmdInitStruct members default value */
 437:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Argument = 0x00;
 296              		.loc 1 437 0
 297 0000 0023     		movs	r3, #0
 298 0002 0360     		str	r3, [r0, #0]
 438:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CmdIndex = 0x00;
 299              		.loc 1 438 0
 300 0004 4360     		str	r3, [r0, #4]
 439:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Response = SDIO_Response_No;
 301              		.loc 1 439 0
 302 0006 8360     		str	r3, [r0, #8]
 440:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Wait = SDIO_Wait_No;
 303              		.loc 1 440 0
 304 0008 C360     		str	r3, [r0, #12]
 441:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CPSM = SDIO_CPSM_Disable;
 305              		.loc 1 441 0
 306 000a 0361     		str	r3, [r0, #16]
 307 000c 7047     		bx	lr
 308              		.cfi_endproc
 309              	.LFE117:
 311 000e 00BF     		.section	.text.SDIO_GetCommandResponse,"ax",%progbits
 312              		.align	2
 313              		.global	SDIO_GetCommandResponse
 314              		.thumb
 315              		.thumb_func
 317              	SDIO_GetCommandResponse:
 318              	.LFB118:
 442:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 443:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 444:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 445:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns command index of last command for which response received.
 446:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 447:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Returns the command index of the last command response received.
 448:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 449:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint8_t SDIO_GetCommandResponse(void)
 450:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 319              		.loc 1 450 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              		@ link register save eliminated.
 451:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (uint8_t)(SDIO->RESPCMD);
 324              		.loc 1 451 0
 325 0000 014B     		ldr	r3, .L20
 326 0002 1869     		ldr	r0, [r3, #16]
 452:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 327              		.loc 1 452 0
 328 0004 C0B2     		uxtb	r0, r0
 329 0006 7047     		bx	lr
 330              	.L21:
 331              		.align	2
 332              	.L20:
 333 0008 002C0140 		.word	1073818624
 334              		.cfi_endproc
 335              	.LFE118:
 337              		.section	.text.SDIO_GetResponse,"ax",%progbits
 338              		.align	2
 339              		.global	SDIO_GetResponse
 340              		.thumb
 341              		.thumb_func
 343              	SDIO_GetResponse:
 344              	.LFB119:
 453:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 454:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 455:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns response received from the card for the last command.
 456:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_RESP: Specifies the SDIO response register. 
 457:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 458:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP1: Response Register 1
 459:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP2: Response Register 2
 460:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP3: Response Register 3
 461:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP4: Response Register 4
 462:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The Corresponding response register value.
 463:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 464:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetResponse(uint32_t SDIO_RESP)
 465:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 345              		.loc 1 465 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 8
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 350              	.LVL18:
 351 0000 82B0     		sub	sp, sp, #8
 352              	.LCFI3:
 353              		.cfi_def_cfa_offset 8
 466:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   __IO uint32_t tmp = 0;
 467:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 468:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 469:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESP(SDIO_RESP));
 470:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 471:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmp = SDIO_RESP_ADDR + SDIO_RESP;
 354              		.loc 1 471 0
 355 0002 044B     		ldr	r3, .L23
 356              	.LVL19:
 357 0004 C318     		adds	r3, r0, r3
 358              	.LVL20:
 466:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   __IO uint32_t tmp = 0;
 359              		.loc 1 466 0
 360 0006 0022     		movs	r2, #0
 361 0008 0192     		str	r2, [sp, #4]
 362              	.LVL21:
 363              		.loc 1 471 0
 364 000a 0193     		str	r3, [sp, #4]
 472:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 473:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (*(__IO uint32_t *) tmp); 
 365              		.loc 1 473 0
 366 000c 019B     		ldr	r3, [sp, #4]
 367 000e 1868     		ldr	r0, [r3, #0]
 368              	.LVL22:
 474:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 369              		.loc 1 474 0
 370 0010 02B0     		add	sp, sp, #8
 371 0012 7047     		bx	lr
 372              	.L24:
 373              		.align	2
 374              	.L23:
 375 0014 142C0140 		.word	1073818644
 376              		.cfi_endproc
 377              	.LFE119:
 379              		.section	.text.SDIO_DataConfig,"ax",%progbits
 380              		.align	2
 381              		.global	SDIO_DataConfig
 382              		.thumb
 383              		.thumb_func
 385              	SDIO_DataConfig:
 386              	.LFB120:
 475:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 476:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 477:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 478:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 479:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 480:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group3 Data path state machine (DPSM) management functions
 481:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Data path state machine (DPSM) management functions
 482:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 483:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 484:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 485:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               Data path state machine (DPSM) management functions
 486:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 487:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 488:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Data path 
 489:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   state machine (DPSM).
 490:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 491:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 492:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 493:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 494:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 495:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 496:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO data path according to the specified 
 497:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_DataInitStruct.
 498:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct : pointer to a SDIO_DataInitTypeDef structure 
 499:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO command.
 500:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 501:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 502:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 503:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 387              		.loc 1 503 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 392              	.LVL23:
 393 0000 30B4     		push	{r4, r5}
 394              	.LCFI4:
 395              		.cfi_def_cfa_offset 8
 396              		.cfi_offset 4, -8
 397              		.cfi_offset 5, -4
 398              	.LVL24:
 504:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 505:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 506:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 507:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DATA_LENGTH(SDIO_DataInitStruct->SDIO_DataLength));
 508:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BLOCK_SIZE(SDIO_DataInitStruct->SDIO_DataBlockSize));
 509:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_DIR(SDIO_DataInitStruct->SDIO_TransferDir));
 510:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_MODE(SDIO_DataInitStruct->SDIO_TransferMode));
 511:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DPSM(SDIO_DataInitStruct->SDIO_DPSM));
 512:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 513:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DTIMER Configuration ---------------------*/
 514:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO Data TimeOut value */
 515:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DTIMER = SDIO_DataInitStruct->SDIO_DataTimeOut;
 399              		.loc 1 515 0
 400 0002 094B     		ldr	r3, .L26
 401 0004 0268     		ldr	r2, [r0, #0]
 402 0006 5A62     		str	r2, [r3, #36]
 516:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 517:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DLEN Configuration -----------------------*/
 518:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO DataLength value */
 519:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DLEN = SDIO_DataInitStruct->SDIO_DataLength;
 403              		.loc 1 519 0
 404 0008 4268     		ldr	r2, [r0, #4]
 405 000a 9A62     		str	r2, [r3, #40]
 520:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 521:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DCTRL Configuration ----------------------*/  
 522:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO DCTRL value */
 523:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->DCTRL;
 524:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear DEN, DTMODE, DTDIR and DBCKSIZE bits */
 525:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= DCTRL_CLEAR_MASK;
 526:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DEN bit according to SDIO_DPSM value */
 527:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DTMODE bit according to SDIO_TransferMode value */
 528:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DTDIR bit according to SDIO_TransferDir value */
 529:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DBCKSIZE bits according to SDIO_DataBlockSize value */
 530:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 406              		.loc 1 530 0
 407 000c C568     		ldr	r5, [r0, #12]
 408 000e 8268     		ldr	r2, [r0, #8]
 531:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
 409              		.loc 1 531 0
 410 0010 0469     		ldr	r4, [r0, #16]
 523:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->DCTRL;
 411              		.loc 1 523 0
 412 0012 D96A     		ldr	r1, [r3, #44]
 413              	.LVL25:
 414              		.loc 1 531 0
 415 0014 4069     		ldr	r0, [r0, #20]
 416              	.LVL26:
 530:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 417              		.loc 1 530 0
 418 0016 2A43     		orrs	r2, r2, r5
 419              		.loc 1 531 0
 420 0018 2243     		orrs	r2, r2, r4
 525:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= DCTRL_CLEAR_MASK;
 421              		.loc 1 525 0
 422 001a 21F0F701 		bic	r1, r1, #247
 423              	.LVL27:
 424              		.loc 1 531 0
 425 001e 0243     		orrs	r2, r2, r0
 530:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 426              		.loc 1 530 0
 427 0020 0A43     		orrs	r2, r2, r1
 428              	.LVL28:
 532:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 533:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO DCTRL */
 534:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DCTRL = tmpreg;
 429              		.loc 1 534 0
 430 0022 DA62     		str	r2, [r3, #44]
 535:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 431              		.loc 1 535 0
 432 0024 30BC     		pop	{r4, r5}
 433 0026 7047     		bx	lr
 434              	.L27:
 435              		.align	2
 436              	.L26:
 437 0028 002C0140 		.word	1073818624
 438              		.cfi_endproc
 439              	.LFE120:
 441              		.section	.text.SDIO_DataStructInit,"ax",%progbits
 442              		.align	2
 443              		.global	SDIO_DataStructInit
 444              		.thumb
 445              		.thumb_func
 447              	SDIO_DataStructInit:
 448              	.LFB121:
 536:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 537:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 538:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_DataInitStruct member with its default value.
 539:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct: pointer to an SDIO_DataInitTypeDef structure 
 540:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         which will be initialized.
 541:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 542:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 543:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 544:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 449              		.loc 1 544 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              		@ link register save eliminated.
 454              	.LVL29:
 545:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_DataInitStruct members default value */
 546:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
 547:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataLength = 0x00;
 455              		.loc 1 547 0
 456 0000 0023     		movs	r3, #0
 546:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
 457              		.loc 1 546 0
 458 0002 4FF0FF32 		mov	r2, #-1
 459              		.loc 1 547 0
 460 0006 80E80C00 		stmia	r0, {r2, r3}
 548:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 461              		.loc 1 548 0
 462 000a 8360     		str	r3, [r0, #8]
 549:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferDir = SDIO_TransferDir_ToCard;
 463              		.loc 1 549 0
 464 000c C360     		str	r3, [r0, #12]
 550:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferMode = SDIO_TransferMode_Block;  
 465              		.loc 1 550 0
 466 000e 0361     		str	r3, [r0, #16]
 551:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DPSM = SDIO_DPSM_Disable;
 467              		.loc 1 551 0
 468 0010 4361     		str	r3, [r0, #20]
 469 0012 7047     		bx	lr
 470              		.cfi_endproc
 471              	.LFE121:
 473              		.section	.text.SDIO_GetDataCounter,"ax",%progbits
 474              		.align	2
 475              		.global	SDIO_GetDataCounter
 476              		.thumb
 477              		.thumb_func
 479              	SDIO_GetDataCounter:
 480              	.LFB122:
 552:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 553:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 554:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 555:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns number of remaining data bytes to be transferred.
 556:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 557:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Number of remaining data bytes to be transferred
 558:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 559:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetDataCounter(void)
 560:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 481              		.loc 1 560 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 561:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->DCOUNT;
 486              		.loc 1 561 0
 487 0000 014B     		ldr	r3, .L30
 488 0002 186B     		ldr	r0, [r3, #48]
 562:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 489              		.loc 1 562 0
 490 0004 7047     		bx	lr
 491              	.L31:
 492 0006 00BF     		.align	2
 493              	.L30:
 494 0008 002C0140 		.word	1073818624
 495              		.cfi_endproc
 496              	.LFE122:
 498              		.section	.text.SDIO_ReadData,"ax",%progbits
 499              		.align	2
 500              		.global	SDIO_ReadData
 501              		.thumb
 502              		.thumb_func
 504              	SDIO_ReadData:
 505              	.LFB123:
 563:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 564:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 565:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Read one data word from Rx FIFO.
 566:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 567:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Data received
 568:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 569:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_ReadData(void)
 570:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 506              		.loc 1 570 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 571:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->FIFO;
 511              		.loc 1 571 0
 512 0000 014B     		ldr	r3, .L33
 513 0002 D3F88000 		ldr	r0, [r3, #128]
 572:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 514              		.loc 1 572 0
 515 0006 7047     		bx	lr
 516              	.L34:
 517              		.align	2
 518              	.L33:
 519 0008 002C0140 		.word	1073818624
 520              		.cfi_endproc
 521              	.LFE123:
 523              		.section	.text.SDIO_WriteData,"ax",%progbits
 524              		.align	2
 525              		.global	SDIO_WriteData
 526              		.thumb
 527              		.thumb_func
 529              	SDIO_WriteData:
 530              	.LFB124:
 573:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 574:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 575:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Write one data word to Tx FIFO.
 576:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  Data: 32-bit data word to write.
 577:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 578:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 579:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_WriteData(uint32_t Data)
 580:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 531              		.loc 1 580 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 536              	.LVL30:
 581:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->FIFO = Data;
 537              		.loc 1 581 0
 538 0000 014B     		ldr	r3, .L36
 539 0002 C3F88000 		str	r0, [r3, #128]
 540 0006 7047     		bx	lr
 541              	.L37:
 542              		.align	2
 543              	.L36:
 544 0008 002C0140 		.word	1073818624
 545              		.cfi_endproc
 546              	.LFE124:
 548              		.section	.text.SDIO_GetFIFOCount,"ax",%progbits
 549              		.align	2
 550              		.global	SDIO_GetFIFOCount
 551              		.thumb
 552              		.thumb_func
 554              	SDIO_GetFIFOCount:
 555              	.LFB125:
 582:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 583:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 584:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 585:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns the number of words left to be written to or read from FIFO.	
 586:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 587:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Remaining number of words.
 588:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 589:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetFIFOCount(void)
 590:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 556              		.loc 1 590 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560              		@ link register save eliminated.
 591:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->FIFOCNT;
 561              		.loc 1 591 0
 562 0000 014B     		ldr	r3, .L39
 563 0002 986C     		ldr	r0, [r3, #72]
 592:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 564              		.loc 1 592 0
 565 0004 7047     		bx	lr
 566              	.L40:
 567 0006 00BF     		.align	2
 568              	.L39:
 569 0008 002C0140 		.word	1073818624
 570              		.cfi_endproc
 571              	.LFE125:
 573              		.section	.text.SDIO_StartSDIOReadWait,"ax",%progbits
 574              		.align	2
 575              		.global	SDIO_StartSDIOReadWait
 576              		.thumb
 577              		.thumb_func
 579              	SDIO_StartSDIOReadWait:
 580              	.LFB126:
 593:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 594:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 595:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 596:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 597:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 598:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group4 SDIO IO Cards mode management functions
 599:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   SDIO IO Cards mode management functions
 600:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 601:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 602:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 603:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               SDIO IO Cards mode management functions
 604:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 605:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 606:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the SDIO IO Cards.
 607:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 608:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 609:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 610:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 611:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 612:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 613:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Starts the SD I/O Read Wait operation.	
 614:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Start SDIO Read Wait operation. 
 615:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 616:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 617:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 618:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StartSDIOReadWait(FunctionalState NewState)
 619:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 581              		.loc 1 619 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586              	.LVL31:
 620:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 621:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 622:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 623:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTART_BB = (uint32_t) NewState;
 587              		.loc 1 623 0
 588 0000 014B     		ldr	r3, .L42
 589 0002 1860     		str	r0, [r3, #0]
 590 0004 7047     		bx	lr
 591              	.L43:
 592 0006 00BF     		.align	2
 593              	.L42:
 594 0008 A0852542 		.word	1109755296
 595              		.cfi_endproc
 596              	.LFE126:
 598              		.section	.text.SDIO_StopSDIOReadWait,"ax",%progbits
 599              		.align	2
 600              		.global	SDIO_StopSDIOReadWait
 601              		.thumb
 602              		.thumb_func
 604              	SDIO_StopSDIOReadWait:
 605              	.LFB127:
 624:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 625:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 626:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 627:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Stops the SD I/O Read Wait operation.	
 628:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Stop SDIO Read Wait operation. 
 629:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 630:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 631:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 632:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StopSDIOReadWait(FunctionalState NewState)
 633:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 606              		.loc 1 633 0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 0
 609              		@ frame_needed = 0, uses_anonymous_args = 0
 610              		@ link register save eliminated.
 611              	.LVL32:
 634:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 635:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 636:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 637:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTOP_BB = (uint32_t) NewState;
 612              		.loc 1 637 0
 613 0000 014B     		ldr	r3, .L45
 614 0002 1860     		str	r0, [r3, #0]
 615 0004 7047     		bx	lr
 616              	.L46:
 617 0006 00BF     		.align	2
 618              	.L45:
 619 0008 A4852542 		.word	1109755300
 620              		.cfi_endproc
 621              	.LFE127:
 623              		.section	.text.SDIO_SetSDIOReadWaitMode,"ax",%progbits
 624              		.align	2
 625              		.global	SDIO_SetSDIOReadWaitMode
 626              		.thumb
 627              		.thumb_func
 629              	SDIO_SetSDIOReadWaitMode:
 630              	.LFB128:
 638:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 639:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 640:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 641:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sets one of the two options of inserting read wait interval.
 642:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_ReadWaitMode: SD I/O Read Wait operation mode.
 643:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be:
 644:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_CLK: Read Wait control by stopping SDIOCLK
 645:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_DATA2: Read Wait control using SDIO_DATA2
 646:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 647:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 648:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode)
 649:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 631              		.loc 1 649 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635              		@ link register save eliminated.
 636              	.LVL33:
 650:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 651:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_READWAIT_MODE(SDIO_ReadWaitMode));
 652:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 653:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWMOD_BB = SDIO_ReadWaitMode;
 637              		.loc 1 653 0
 638 0000 014B     		ldr	r3, .L48
 639 0002 1860     		str	r0, [r3, #0]
 640 0004 7047     		bx	lr
 641              	.L49:
 642 0006 00BF     		.align	2
 643              	.L48:
 644 0008 A8852542 		.word	1109755304
 645              		.cfi_endproc
 646              	.LFE128:
 648              		.section	.text.SDIO_SetSDIOOperation,"ax",%progbits
 649              		.align	2
 650              		.global	SDIO_SetSDIOOperation
 651              		.thumb
 652              		.thumb_func
 654              	SDIO_SetSDIOOperation:
 655              	.LFB129:
 654:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 655:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 656:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 657:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode Operation.
 658:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of SDIO specific operation. 
 659:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 660:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 661:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 662:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOOperation(FunctionalState NewState)
 663:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 656              		.loc 1 663 0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              		@ link register save eliminated.
 661              	.LVL34:
 664:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 665:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 666:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 667:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_SDIOEN_BB = (uint32_t)NewState;
 662              		.loc 1 667 0
 663 0000 014B     		ldr	r3, .L51
 664 0002 1860     		str	r0, [r3, #0]
 665 0004 7047     		bx	lr
 666              	.L52:
 667 0006 00BF     		.align	2
 668              	.L51:
 669 0008 AC852542 		.word	1109755308
 670              		.cfi_endproc
 671              	.LFE129:
 673              		.section	.text.SDIO_SendSDIOSuspendCmd,"ax",%progbits
 674              		.align	2
 675              		.global	SDIO_SendSDIOSuspendCmd
 676              		.thumb
 677              		.thumb_func
 679              	SDIO_SendSDIOSuspendCmd:
 680              	.LFB130:
 668:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 669:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 670:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 671:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode suspend command sending.
 672:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SD I/O Mode suspend command.
 673:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 674:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 675:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 676:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendSDIOSuspendCmd(FunctionalState NewState)
 677:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 681              		.loc 1 677 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685              		@ link register save eliminated.
 686              	.LVL35:
 678:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 679:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 680:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 681:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_SDIOSUSPEND_BB = (uint32_t)NewState;
 687              		.loc 1 681 0
 688 0000 014B     		ldr	r3, .L54
 689 0002 1860     		str	r0, [r3, #0]
 690 0004 7047     		bx	lr
 691              	.L55:
 692 0006 00BF     		.align	2
 693              	.L54:
 694 0008 AC812542 		.word	1109754284
 695              		.cfi_endproc
 696              	.LFE130:
 698              		.section	.text.SDIO_CommandCompletionCmd,"ax",%progbits
 699              		.align	2
 700              		.global	SDIO_CommandCompletionCmd
 701              		.thumb
 702              		.thumb_func
 704              	SDIO_CommandCompletionCmd:
 705              	.LFB131:
 682:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 683:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 684:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 685:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 686:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 687:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 688:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group5 CE-ATA mode management functions
 689:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   CE-ATA mode management functions
 690:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 691:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 692:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 693:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               CE-ATA mode management functions
 694:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 695:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 696:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the CE-ATA card.
 697:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 698:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 699:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 700:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 701:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 702:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 703:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the command completion signal.
 704:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of command completion signal. 
 705:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 706:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 707:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 708:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CommandCompletionCmd(FunctionalState NewState)
 709:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 706              		.loc 1 709 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 0, uses_anonymous_args = 0
 710              		@ link register save eliminated.
 711              	.LVL36:
 710:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 711:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 712:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 713:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ENCMDCOMPL_BB = (uint32_t)NewState;
 712              		.loc 1 713 0
 713 0000 014B     		ldr	r3, .L57
 714 0002 1860     		str	r0, [r3, #0]
 715 0004 7047     		bx	lr
 716              	.L58:
 717 0006 00BF     		.align	2
 718              	.L57:
 719 0008 B0812542 		.word	1109754288
 720              		.cfi_endproc
 721              	.LFE131:
 723              		.section	.text.SDIO_CEATAITCmd,"ax",%progbits
 724              		.align	2
 725              		.global	SDIO_CEATAITCmd
 726              		.thumb
 727              		.thumb_func
 729              	SDIO_CEATAITCmd:
 730              	.LFB132:
 714:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 715:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 716:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 717:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the CE-ATA interrupt.
 718:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA interrupt. 
 719:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 720:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 721:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 722:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CEATAITCmd(FunctionalState NewState)
 723:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 731              		.loc 1 723 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735              		@ link register save eliminated.
 736              	.LVL37:
 724:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 725:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 726:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 727:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_NIEN_BB = (uint32_t)((~((uint32_t)NewState)) & ((uint32_t)0x1));
 737              		.loc 1 727 0
 738 0000 00F00100 		and	r0, r0, #1
 739              	.LVL38:
 740 0004 80F00100 		eor	r0, r0, #1
 741 0008 014B     		ldr	r3, .L60
 742 000a 1860     		str	r0, [r3, #0]
 743 000c 7047     		bx	lr
 744              	.L61:
 745 000e 00BF     		.align	2
 746              	.L60:
 747 0010 B4812542 		.word	1109754292
 748              		.cfi_endproc
 749              	.LFE132:
 751              		.section	.text.SDIO_SendCEATACmd,"ax",%progbits
 752              		.align	2
 753              		.global	SDIO_SendCEATACmd
 754              		.thumb
 755              		.thumb_func
 757              	SDIO_SendCEATACmd:
 758              	.LFB133:
 728:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 729:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 730:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 731:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sends CE-ATA command (CMD61).
 732:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA command. 
 733:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 734:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 735:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 736:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendCEATACmd(FunctionalState NewState)
 737:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 759              		.loc 1 737 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 0
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 763              		@ link register save eliminated.
 764              	.LVL39:
 738:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 739:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 740:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 741:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ATACMD_BB = (uint32_t)NewState;
 765              		.loc 1 741 0
 766 0000 014B     		ldr	r3, .L63
 767 0002 1860     		str	r0, [r3, #0]
 768 0004 7047     		bx	lr
 769              	.L64:
 770 0006 00BF     		.align	2
 771              	.L63:
 772 0008 B8812542 		.word	1109754296
 773              		.cfi_endproc
 774              	.LFE133:
 776              		.section	.text.SDIO_DMACmd,"ax",%progbits
 777              		.align	2
 778              		.global	SDIO_DMACmd
 779              		.thumb
 780              		.thumb_func
 782              	SDIO_DMACmd:
 783              	.LFB134:
 742:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 743:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 744:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 745:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 746:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 747:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 748:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group6 DMA transfers management functions
 749:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   DMA transfers management functions
 750:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 751:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 752:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 753:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               DMA transfers management functions
 754:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 755:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 756:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program SDIO DMA transfer.
 757:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 758:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 759:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 760:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 761:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 762:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 763:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO DMA request.
 764:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the selected SDIO DMA request.
 765:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 766:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 767:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 768:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DMACmd(FunctionalState NewState)
 769:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 784              		.loc 1 769 0
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 0
 787              		@ frame_needed = 0, uses_anonymous_args = 0
 788              		@ link register save eliminated.
 789              	.LVL40:
 770:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 771:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 772:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 773:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_DMAEN_BB = (uint32_t)NewState;
 790              		.loc 1 773 0
 791 0000 014B     		ldr	r3, .L66
 792 0002 1860     		str	r0, [r3, #0]
 793 0004 7047     		bx	lr
 794              	.L67:
 795 0006 00BF     		.align	2
 796              	.L66:
 797 0008 8C852542 		.word	1109755276
 798              		.cfi_endproc
 799              	.LFE134:
 801              		.section	.text.SDIO_ITConfig,"ax",%progbits
 802              		.align	2
 803              		.global	SDIO_ITConfig
 804              		.thumb
 805              		.thumb_func
 807              	SDIO_ITConfig:
 808              	.LFB135:
 774:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 775:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 776:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 777:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 778:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 779:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 780:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group7 Interrupts and flags management functions
 781:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Interrupts and flags management functions  
 782:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 783:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 784:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 785:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****                        Interrupts and flags management functions
 786:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 787:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 788:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 789:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 790:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 791:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 792:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 793:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 794:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO interrupts.
 795:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt sources to be enabled or disabled.
 796:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 797:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 798:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 799:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 800:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 801:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 802:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 803:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 804:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 805:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 806:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 807:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 808:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 809:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 810:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 811:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 812:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 813:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 814:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 815:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 816:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 817:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 818:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 819:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 820:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 821:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 822:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the specified SDIO interrupts.
 823:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 824:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None 
 825:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 826:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState)
 827:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 809              		.loc 1 827 0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814              	.LVL41:
 828:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 829:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_IT(SDIO_IT));
 830:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 831:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 832:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if (NewState != DISABLE)
 833:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 834:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     /* Enable the SDIO interrupts */
 835:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     SDIO->MASK |= SDIO_IT;
 815              		.loc 1 835 0
 816 0000 044B     		ldr	r3, .L73
 817 0002 DA6B     		ldr	r2, [r3, #60]
 832:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if (NewState != DISABLE)
 818              		.loc 1 832 0
 819 0004 19B9     		cbnz	r1, .L72
 836:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 837:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 838:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 839:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     /* Disable the SDIO interrupts */
 840:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     SDIO->MASK &= ~SDIO_IT;
 820              		.loc 1 840 0
 821 0006 22EA0000 		bic	r0, r2, r0
 822              	.LVL42:
 823 000a D863     		str	r0, [r3, #60]
 824 000c 7047     		bx	lr
 825              	.LVL43:
 826              	.L72:
 835:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     SDIO->MASK |= SDIO_IT;
 827              		.loc 1 835 0
 828 000e 1043     		orrs	r0, r0, r2
 829              	.LVL44:
 830 0010 D863     		str	r0, [r3, #60]
 831 0012 7047     		bx	lr
 832              	.L74:
 833              		.align	2
 834              	.L73:
 835 0014 002C0140 		.word	1073818624
 836              		.cfi_endproc
 837              	.LFE135:
 839              		.section	.text.SDIO_GetFlagStatus,"ax",%progbits
 840              		.align	2
 841              		.global	SDIO_GetFlagStatus
 842              		.thumb
 843              		.thumb_func
 845              	SDIO_GetFlagStatus:
 846              	.LFB136:
 841:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   } 
 842:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 843:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 844:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 845:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO flag is set or not.
 846:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to check. 
 847:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 848:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 849:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 850:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 851:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 852:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 853:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 854:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 855:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 856:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 857:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 858:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 859:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDACT:   Command transfer in progress
 860:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXACT:    Data transmit in progress
 861:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXACT:    Data receive in progress
 862:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOHE: Transmit FIFO Half Empty
 863:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOHF: Receive FIFO Half Full
 864:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOF:  Transmit FIFO full
 865:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOF:  Receive FIFO full
 866:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOE:  Transmit FIFO empty
 867:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOE:  Receive FIFO empty
 868:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXDAVL:   Data available in transmit FIFO
 869:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXDAVL:   Data available in receive FIFO
 870:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 871:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 872:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_FLAG (SET or RESET).
 873:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 874:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG)
 875:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 847              		.loc 1 875 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              		@ link register save eliminated.
 852              	.LVL45:
 853              	.LVL46:
 876:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   FlagStatus bitstatus = RESET;
 877:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 878:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 879:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_FLAG(SDIO_FLAG));
 880:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 881:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_FLAG) != (uint32_t)RESET)
 854              		.loc 1 881 0
 855 0000 034B     		ldr	r3, .L76
 856 0002 5B6B     		ldr	r3, [r3, #52]
 857              	.LVL47:
 858 0004 1842     		tst	r0, r3
 882:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 883:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 884:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 885:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 886:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 887:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 888:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 889:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return bitstatus;
 890:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 859              		.loc 1 890 0
 860 0006 0CBF     		ite	eq
 861 0008 0020     		moveq	r0, #0
 862 000a 0120     		movne	r0, #1
 863              	.LVL48:
 864 000c 7047     		bx	lr
 865              	.L77:
 866 000e 00BF     		.align	2
 867              	.L76:
 868 0010 002C0140 		.word	1073818624
 869              		.cfi_endproc
 870              	.LFE136:
 872              		.section	.text.SDIO_ClearFlag,"ax",%progbits
 873              		.align	2
 874              		.global	SDIO_ClearFlag
 875              		.thumb
 876              		.thumb_func
 878              	SDIO_ClearFlag:
 879              	.LFB137:
 891:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 892:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 893:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's pending flags.
 894:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to clear.  
 895:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 896:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 897:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 898:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 899:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 900:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 901:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 902:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 903:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 904:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 905:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 906:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 907:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 908:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 909:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 910:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 911:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClearFlag(uint32_t SDIO_FLAG)
 912:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 880              		.loc 1 912 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 884              		@ link register save eliminated.
 885              	.LVL49:
 913:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 914:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_FLAG(SDIO_FLAG));
 915:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 916:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_FLAG;
 886              		.loc 1 916 0
 887 0000 014B     		ldr	r3, .L79
 888 0002 9863     		str	r0, [r3, #56]
 889 0004 7047     		bx	lr
 890              	.L80:
 891 0006 00BF     		.align	2
 892              	.L79:
 893 0008 002C0140 		.word	1073818624
 894              		.cfi_endproc
 895              	.LFE137:
 897              		.section	.text.SDIO_GetITStatus,"ax",%progbits
 898              		.align	2
 899              		.global	SDIO_GetITStatus
 900              		.thumb
 901              		.thumb_func
 903              	SDIO_GetITStatus:
 904              	.LFB138:
 917:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 918:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 919:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 920:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO interrupt has occurred or not.
 921:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt source to check. 
 922:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 923:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 924:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 925:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 926:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 927:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 928:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 929:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 930:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 931:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 932:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 933:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 934:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 935:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 936:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 937:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 938:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 939:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 940:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 941:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 942:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 943:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 944:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 945:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 946:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 947:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 948:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_IT (SET or RESET).
 949:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 950:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** ITStatus SDIO_GetITStatus(uint32_t SDIO_IT)
 951:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 905              		.loc 1 951 0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 0
 908              		@ frame_needed = 0, uses_anonymous_args = 0
 909              		@ link register save eliminated.
 910              	.LVL50:
 911              	.LVL51:
 952:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ITStatus bitstatus = RESET;
 953:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 954:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 955:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_GET_IT(SDIO_IT));
 956:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_IT) != (uint32_t)RESET)  
 912              		.loc 1 956 0
 913 0000 034B     		ldr	r3, .L82
 914 0002 5B6B     		ldr	r3, [r3, #52]
 915              	.LVL52:
 916 0004 1842     		tst	r0, r3
 957:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 958:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 959:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 960:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 961:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 962:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 963:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 964:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return bitstatus;
 965:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 917              		.loc 1 965 0
 918 0006 0CBF     		ite	eq
 919 0008 0020     		moveq	r0, #0
 920 000a 0120     		movne	r0, #1
 921              	.LVL53:
 922 000c 7047     		bx	lr
 923              	.L83:
 924 000e 00BF     		.align	2
 925              	.L82:
 926 0010 002C0140 		.word	1073818624
 927              		.cfi_endproc
 928              	.LFE138:
 930              		.section	.text.SDIO_ClearITPendingBit,"ax",%progbits
 931              		.align	2
 932              		.global	SDIO_ClearITPendingBit
 933              		.thumb
 934              		.thumb_func
 936              	SDIO_ClearITPendingBit:
 937              	.LFB139:
 966:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 967:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 968:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's interrupt pending bits.
 969:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the interrupt pending bit to clear. 
 970:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 971:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 972:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 973:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 974:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 975:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 976:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 977:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 978:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 979:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIO_DCOUNT, is zero) interrupt
 980:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 981:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 982:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 983:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61
 984:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 985:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 986:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClearITPendingBit(uint32_t SDIO_IT)
 987:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 938              		.loc 1 987 0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 0
 941              		@ frame_needed = 0, uses_anonymous_args = 0
 942              		@ link register save eliminated.
 943              	.LVL54:
 988:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 989:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_IT(SDIO_IT));
 990:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 991:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_IT;
 944              		.loc 1 991 0
 945 0000 014B     		ldr	r3, .L85
 946 0002 9863     		str	r0, [r3, #56]
 947 0004 7047     		bx	lr
 948              	.L86:
 949 0006 00BF     		.align	2
 950              	.L85:
 951 0008 002C0140 		.word	1073818624
 952              		.cfi_endproc
 953              	.LFE139:
 955              		.text
 956              	.Letext0:
 957              		.file 2 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 958              		.file 3 "../../lib/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 959              		.file 4 "../../lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
 960              		.file 5 "../../lib/CMSIS/Include/core_cm4.h"
 961              		.file 6 "../../lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_sdio.c
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:17     .text.SDIO_DeInit:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:22     .text.SDIO_DeInit:00000000 SDIO_DeInit
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:51     .text.SDIO_Init:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:56     .text.SDIO_Init:00000000 SDIO_Init
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:110    .text.SDIO_Init:00000030 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:115    .text.SDIO_StructInit:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:120    .text.SDIO_StructInit:00000000 SDIO_StructInit
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:146    .text.SDIO_ClockCmd:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:151    .text.SDIO_ClockCmd:00000000 SDIO_ClockCmd
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:166    .text.SDIO_ClockCmd:00000008 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:171    .text.SDIO_SetPowerState:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:176    .text.SDIO_SetPowerState:00000000 SDIO_SetPowerState
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:191    .text.SDIO_SetPowerState:00000008 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:196    .text.SDIO_GetPowerState:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:201    .text.SDIO_GetPowerState:00000000 SDIO_GetPowerState
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:217    .text.SDIO_GetPowerState:0000000c $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:222    .text.SDIO_SendCommand:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:227    .text.SDIO_SendCommand:00000000 SDIO_SendCommand
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:278    .text.SDIO_SendCommand:00000028 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:283    .text.SDIO_CmdStructInit:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:288    .text.SDIO_CmdStructInit:00000000 SDIO_CmdStructInit
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:312    .text.SDIO_GetCommandResponse:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:317    .text.SDIO_GetCommandResponse:00000000 SDIO_GetCommandResponse
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:333    .text.SDIO_GetCommandResponse:00000008 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:338    .text.SDIO_GetResponse:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:343    .text.SDIO_GetResponse:00000000 SDIO_GetResponse
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:375    .text.SDIO_GetResponse:00000014 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:380    .text.SDIO_DataConfig:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:385    .text.SDIO_DataConfig:00000000 SDIO_DataConfig
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:437    .text.SDIO_DataConfig:00000028 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:442    .text.SDIO_DataStructInit:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:447    .text.SDIO_DataStructInit:00000000 SDIO_DataStructInit
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:474    .text.SDIO_GetDataCounter:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:479    .text.SDIO_GetDataCounter:00000000 SDIO_GetDataCounter
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:494    .text.SDIO_GetDataCounter:00000008 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:499    .text.SDIO_ReadData:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:504    .text.SDIO_ReadData:00000000 SDIO_ReadData
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:519    .text.SDIO_ReadData:00000008 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:524    .text.SDIO_WriteData:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:529    .text.SDIO_WriteData:00000000 SDIO_WriteData
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:544    .text.SDIO_WriteData:00000008 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:549    .text.SDIO_GetFIFOCount:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:554    .text.SDIO_GetFIFOCount:00000000 SDIO_GetFIFOCount
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:569    .text.SDIO_GetFIFOCount:00000008 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:574    .text.SDIO_StartSDIOReadWait:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:579    .text.SDIO_StartSDIOReadWait:00000000 SDIO_StartSDIOReadWait
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:594    .text.SDIO_StartSDIOReadWait:00000008 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:599    .text.SDIO_StopSDIOReadWait:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:604    .text.SDIO_StopSDIOReadWait:00000000 SDIO_StopSDIOReadWait
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:619    .text.SDIO_StopSDIOReadWait:00000008 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:624    .text.SDIO_SetSDIOReadWaitMode:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:629    .text.SDIO_SetSDIOReadWaitMode:00000000 SDIO_SetSDIOReadWaitMode
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:644    .text.SDIO_SetSDIOReadWaitMode:00000008 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:649    .text.SDIO_SetSDIOOperation:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:654    .text.SDIO_SetSDIOOperation:00000000 SDIO_SetSDIOOperation
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:669    .text.SDIO_SetSDIOOperation:00000008 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:674    .text.SDIO_SendSDIOSuspendCmd:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:679    .text.SDIO_SendSDIOSuspendCmd:00000000 SDIO_SendSDIOSuspendCmd
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:694    .text.SDIO_SendSDIOSuspendCmd:00000008 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:699    .text.SDIO_CommandCompletionCmd:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:704    .text.SDIO_CommandCompletionCmd:00000000 SDIO_CommandCompletionCmd
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:719    .text.SDIO_CommandCompletionCmd:00000008 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:724    .text.SDIO_CEATAITCmd:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:729    .text.SDIO_CEATAITCmd:00000000 SDIO_CEATAITCmd
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:747    .text.SDIO_CEATAITCmd:00000010 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:752    .text.SDIO_SendCEATACmd:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:757    .text.SDIO_SendCEATACmd:00000000 SDIO_SendCEATACmd
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:772    .text.SDIO_SendCEATACmd:00000008 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:777    .text.SDIO_DMACmd:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:782    .text.SDIO_DMACmd:00000000 SDIO_DMACmd
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:797    .text.SDIO_DMACmd:00000008 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:802    .text.SDIO_ITConfig:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:807    .text.SDIO_ITConfig:00000000 SDIO_ITConfig
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:835    .text.SDIO_ITConfig:00000014 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:840    .text.SDIO_GetFlagStatus:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:845    .text.SDIO_GetFlagStatus:00000000 SDIO_GetFlagStatus
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:868    .text.SDIO_GetFlagStatus:00000010 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:873    .text.SDIO_ClearFlag:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:878    .text.SDIO_ClearFlag:00000000 SDIO_ClearFlag
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:893    .text.SDIO_ClearFlag:00000008 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:898    .text.SDIO_GetITStatus:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:903    .text.SDIO_GetITStatus:00000000 SDIO_GetITStatus
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:926    .text.SDIO_GetITStatus:00000010 $d
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:931    .text.SDIO_ClearITPendingBit:00000000 $t
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:936    .text.SDIO_ClearITPendingBit:00000000 SDIO_ClearITPendingBit
C:\Users\root\AppData\Local\Temp\cc75VgZa.s:951    .text.SDIO_ClearITPendingBit:00000008 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
