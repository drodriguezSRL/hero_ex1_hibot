   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 23, 1
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.thumb
  12              		.file	"stm32f4xx_gpio.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.GPIO_DeInit,"ax",%progbits
  17              		.align	2
  18              		.global	GPIO_DeInit
  19              		.thumb
  20              		.thumb_func
  22              	GPIO_DeInit:
  23              	.LFB110:
  24              		.file 1 "../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c"
   1:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
   2:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
   3:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @file    stm32f4xx_gpio.c
   4:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @author  MCD Application Team
   5:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @version V1.0.2
   6:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @date    05-March-2012
   7:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          functionalities of the GPIO peripheral:           
   9:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - Initialization and Configuration
  10:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - GPIO Read and Write
  11:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - GPIO Alternate functions configuration
  12:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * 
  13:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *  @verbatim
  14:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  15:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          ===================================================================
  16:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                                 How to use this driver
  17:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          ===================================================================       
  18:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           1. Enable the GPIO AHB clock using the following function
  19:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
  20:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             
  21:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           2. Configure the GPIO pin(s) using GPIO_Init()
  22:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              Four possible configuration are available for each pin:
  23:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Input: Floating, Pull-up, Pull-down.
  24:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Output: Push-Pull (Pull-up, Pull-down or no Pull)
  25:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                          Open Drain (Pull-up, Pull-down or no Pull).
  26:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  In output mode, the speed is configurable: 2 MHz, 25 MHz,
  27:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  50 MHz or 100 MHz.
  28:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Alternate Function: Push-Pull (Pull-up, Pull-down or no Pull)
  29:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                                      Open Drain (Pull-up, Pull-down or no Pull).
  30:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Analog: required mode when a pin is to be used as ADC channel
  31:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                          or DAC output.
  32:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * 
  33:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          3- Peripherals alternate function:
  34:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              - For ADC and DAC, configure the desired pin in analog mode using 
  35:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AN;
  36:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              - For other peripherals (TIM, USART...):
  37:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  38:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  39:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Configure the desired pin in alternate function mode using
  40:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  41:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  42:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  43:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Call GPIO_Init() function
  44:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *        
  45:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          4. To get the level of a pin configured in input mode use GPIO_ReadInputDataBit()
  46:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          
  47:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          5. To set/reset the level of a pin configured in output mode use
  48:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             GPIO_SetBits()/GPIO_ResetBits()
  49:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *               
  50:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          6. During and just after reset, the alternate functions are not 
  51:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             active and the GPIO pins are configured in input floating mode
  52:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             (except JTAG pins).
  53:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  54:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          7. The LSE oscillator pins OSC32_IN and OSC32_OUT can be used as 
  55:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             general-purpose (PC14 and PC15, respectively) when the LSE
  56:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             oscillator is off. The LSE has priority over the GPIO function.
  57:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  58:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          8. The HSE oscillator pins OSC_IN/OSC_OUT can be used as 
  59:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             general-purpose PH0 and PH1, respectively, when the HSE 
  60:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             oscillator is off. The HSE has priority over the GPIO function.
  61:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             
  62:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *  @endverbatim        
  63:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  64:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
  65:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @attention
  66:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  67:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  68:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  69:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  70:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * You may not use this file except in compliance with the License.
  71:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * You may obtain a copy of the License at:
  72:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  73:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  74:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  75:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * Unless required by applicable law or agreed to in writing, software 
  76:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  77:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  78:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * See the License for the specific language governing permissions and
  79:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * limitations under the License.
  80:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  81:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
  82:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
  83:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  84:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Includes ------------------------------------------------------------------*/
  85:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** #include "stm32f4xx_gpio.h"
  86:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** #include "stm32f4xx_rcc.h"
  87:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  88:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  89:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
  90:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
  91:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  92:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO 
  93:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief GPIO driver modules
  94:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
  95:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */ 
  96:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  97:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private typedef -----------------------------------------------------------*/
  98:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private define ------------------------------------------------------------*/
  99:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private macro -------------------------------------------------------------*/
 100:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private variables ---------------------------------------------------------*/
 101:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private function prototypes -----------------------------------------------*/
 102:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private functions ---------------------------------------------------------*/
 103:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 104:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Private_Functions
 105:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 106:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */ 
 107:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 108:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group1 Initialization and Configuration
 109:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   Initialization and Configuration
 110:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 111:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 112:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 113:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                         Initialization and Configuration
 114:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 115:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 116:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 117:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 118:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 119:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 120:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 121:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Deinitializes the GPIOx peripheral registers to their default reset values.
 122:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   By default, The GPIO pins are configured in input floating mode (except JTAG pins).
 123:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 124:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 125:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 126:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_DeInit(GPIO_TypeDef* GPIOx)
 127:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
  25              		.loc 1 127 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              	.LVL0:
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 128:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 129:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 130:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 131:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if (GPIOx == GPIOA)
  35              		.loc 1 131 0
  36 0002 3C4B     		ldr	r3, .L21
  37 0004 9842     		cmp	r0, r3
  38 0006 24D0     		beq	.L12
 132:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 133:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, ENABLE);
 134:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, DISABLE);
 135:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 136:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOB)
  39              		.loc 1 136 0
  40 0008 3B4B     		ldr	r3, .L21+4
  41 000a 9842     		cmp	r0, r3
  42 000c 2BD0     		beq	.L13
 137:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 138:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, ENABLE);
 139:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, DISABLE);
 140:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 141:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOC)
  43              		.loc 1 141 0
  44 000e 3B4B     		ldr	r3, .L21+8
  45 0010 9842     		cmp	r0, r3
  46 0012 32D0     		beq	.L14
 142:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 143:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, ENABLE);
 144:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, DISABLE);
 145:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 146:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOD)
  47              		.loc 1 146 0
  48 0014 3A4B     		ldr	r3, .L21+12
  49 0016 9842     		cmp	r0, r3
  50 0018 39D0     		beq	.L15
 147:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 148:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, ENABLE);
 149:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, DISABLE);
 150:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 151:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOE)
  51              		.loc 1 151 0
  52 001a 3A4B     		ldr	r3, .L21+16
  53 001c 9842     		cmp	r0, r3
  54 001e 40D0     		beq	.L16
 152:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 153:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, ENABLE);
 154:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, DISABLE);
 155:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 156:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOF)
  55              		.loc 1 156 0
  56 0020 394B     		ldr	r3, .L21+20
  57 0022 9842     		cmp	r0, r3
  58 0024 47D0     		beq	.L17
 157:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 158:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, ENABLE);
 159:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, DISABLE);
 160:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 161:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOG)
  59              		.loc 1 161 0
  60 0026 394B     		ldr	r3, .L21+24
  61 0028 9842     		cmp	r0, r3
  62 002a 4ED0     		beq	.L18
 162:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 163:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, ENABLE);
 164:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, DISABLE);
 165:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 166:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOH)
  63              		.loc 1 166 0
  64 002c 384B     		ldr	r3, .L21+28
  65 002e 9842     		cmp	r0, r3
  66 0030 55D0     		beq	.L19
 167:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 168:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, ENABLE);
 169:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, DISABLE);
 170:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 171:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 172:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 173:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     if (GPIOx == GPIOI)
  67              		.loc 1 173 0
  68 0032 384B     		ldr	r3, .L21+32
  69 0034 9842     		cmp	r0, r3
  70 0036 00D0     		beq	.L20
  71 0038 08BD     		pop	{r3, pc}
  72              	.L20:
 174:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     {
 175:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, ENABLE);
  73              		.loc 1 175 0
  74 003a 4FF48070 		mov	r0, #256
  75              	.LVL1:
  76 003e 0121     		movs	r1, #1
  77 0040 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  78              	.LVL2:
 176:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, DISABLE);
  79              		.loc 1 176 0
  80 0044 4FF48070 		mov	r0, #256
  81 0048 0021     		movs	r1, #0
 177:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     }
 178:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 179:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
  82              		.loc 1 179 0
  83 004a BDE80840 		pop	{r3, lr}
 176:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, DISABLE);
  84              		.loc 1 176 0
  85 004e FFF7FEBF 		b	RCC_AHB1PeriphResetCmd
  86              	.LVL3:
  87              	.L12:
 133:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, ENABLE);
  88              		.loc 1 133 0
  89 0052 0120     		movs	r0, #1
  90              	.LVL4:
  91 0054 0146     		mov	r1, r0
  92 0056 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  93              	.LVL5:
 134:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, DISABLE);
  94              		.loc 1 134 0
  95 005a 0120     		movs	r0, #1
  96 005c 0021     		movs	r1, #0
  97              		.loc 1 179 0
  98 005e BDE80840 		pop	{r3, lr}
 134:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, DISABLE);
  99              		.loc 1 134 0
 100 0062 FFF7FEBF 		b	RCC_AHB1PeriphResetCmd
 101              	.LVL6:
 102              	.L13:
 138:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, ENABLE);
 103              		.loc 1 138 0
 104 0066 0220     		movs	r0, #2
 105              	.LVL7:
 106 0068 0121     		movs	r1, #1
 107 006a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 108              	.LVL8:
 139:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, DISABLE);
 109              		.loc 1 139 0
 110 006e 0220     		movs	r0, #2
 111 0070 0021     		movs	r1, #0
 112              		.loc 1 179 0
 113 0072 BDE80840 		pop	{r3, lr}
 139:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, DISABLE);
 114              		.loc 1 139 0
 115 0076 FFF7FEBF 		b	RCC_AHB1PeriphResetCmd
 116              	.LVL9:
 117              	.L14:
 143:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, ENABLE);
 118              		.loc 1 143 0
 119 007a 0420     		movs	r0, #4
 120              	.LVL10:
 121 007c 0121     		movs	r1, #1
 122 007e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 123              	.LVL11:
 144:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, DISABLE);
 124              		.loc 1 144 0
 125 0082 0420     		movs	r0, #4
 126 0084 0021     		movs	r1, #0
 127              		.loc 1 179 0
 128 0086 BDE80840 		pop	{r3, lr}
 144:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, DISABLE);
 129              		.loc 1 144 0
 130 008a FFF7FEBF 		b	RCC_AHB1PeriphResetCmd
 131              	.LVL12:
 132              	.L15:
 148:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, ENABLE);
 133              		.loc 1 148 0
 134 008e 0820     		movs	r0, #8
 135              	.LVL13:
 136 0090 0121     		movs	r1, #1
 137 0092 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 138              	.LVL14:
 149:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, DISABLE);
 139              		.loc 1 149 0
 140 0096 0820     		movs	r0, #8
 141 0098 0021     		movs	r1, #0
 142              		.loc 1 179 0
 143 009a BDE80840 		pop	{r3, lr}
 149:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, DISABLE);
 144              		.loc 1 149 0
 145 009e FFF7FEBF 		b	RCC_AHB1PeriphResetCmd
 146              	.LVL15:
 147              	.L16:
 153:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, ENABLE);
 148              		.loc 1 153 0
 149 00a2 1020     		movs	r0, #16
 150              	.LVL16:
 151 00a4 0121     		movs	r1, #1
 152 00a6 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 153              	.LVL17:
 154:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, DISABLE);
 154              		.loc 1 154 0
 155 00aa 1020     		movs	r0, #16
 156 00ac 0021     		movs	r1, #0
 157              		.loc 1 179 0
 158 00ae BDE80840 		pop	{r3, lr}
 154:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, DISABLE);
 159              		.loc 1 154 0
 160 00b2 FFF7FEBF 		b	RCC_AHB1PeriphResetCmd
 161              	.LVL18:
 162              	.L17:
 158:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, ENABLE);
 163              		.loc 1 158 0
 164 00b6 2020     		movs	r0, #32
 165              	.LVL19:
 166 00b8 0121     		movs	r1, #1
 167 00ba FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 168              	.LVL20:
 159:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, DISABLE);
 169              		.loc 1 159 0
 170 00be 2020     		movs	r0, #32
 171 00c0 0021     		movs	r1, #0
 172              		.loc 1 179 0
 173 00c2 BDE80840 		pop	{r3, lr}
 159:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, DISABLE);
 174              		.loc 1 159 0
 175 00c6 FFF7FEBF 		b	RCC_AHB1PeriphResetCmd
 176              	.LVL21:
 177              	.L18:
 163:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, ENABLE);
 178              		.loc 1 163 0
 179 00ca 4020     		movs	r0, #64
 180              	.LVL22:
 181 00cc 0121     		movs	r1, #1
 182 00ce FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 183              	.LVL23:
 164:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, DISABLE);
 184              		.loc 1 164 0
 185 00d2 4020     		movs	r0, #64
 186 00d4 0021     		movs	r1, #0
 187              		.loc 1 179 0
 188 00d6 BDE80840 		pop	{r3, lr}
 164:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, DISABLE);
 189              		.loc 1 164 0
 190 00da FFF7FEBF 		b	RCC_AHB1PeriphResetCmd
 191              	.LVL24:
 192              	.L19:
 168:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, ENABLE);
 193              		.loc 1 168 0
 194 00de 8020     		movs	r0, #128
 195              	.LVL25:
 196 00e0 0121     		movs	r1, #1
 197 00e2 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 198              	.LVL26:
 169:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, DISABLE);
 199              		.loc 1 169 0
 200 00e6 8020     		movs	r0, #128
 201 00e8 0021     		movs	r1, #0
 202              		.loc 1 179 0
 203 00ea BDE80840 		pop	{r3, lr}
 169:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, DISABLE);
 204              		.loc 1 169 0
 205 00ee FFF7FEBF 		b	RCC_AHB1PeriphResetCmd
 206              	.LVL27:
 207              	.L22:
 208 00f2 00BF     		.align	2
 209              	.L21:
 210 00f4 00000240 		.word	1073872896
 211 00f8 00040240 		.word	1073873920
 212 00fc 00080240 		.word	1073874944
 213 0100 000C0240 		.word	1073875968
 214 0104 00100240 		.word	1073876992
 215 0108 00140240 		.word	1073878016
 216 010c 00180240 		.word	1073879040
 217 0110 001C0240 		.word	1073880064
 218 0114 00200240 		.word	1073881088
 219              		.cfi_endproc
 220              	.LFE110:
 222              		.section	.text.GPIO_Init,"ax",%progbits
 223              		.align	2
 224              		.global	GPIO_Init
 225              		.thumb
 226              		.thumb_func
 228              	GPIO_Init:
 229              	.LFB111:
 180:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 181:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 182:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Initializes the GPIOx peripheral according to the specified parameters in the GPIO_Init
 183:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 184:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that contains
 185:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the configuration information for the specified GPIO peripheral.
 186:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 187:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 188:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
 189:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 230              		.loc 1 189 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235              	.LVL28:
 236 0000 2DE9F001 		push	{r4, r5, r6, r7, r8}
 237              	.LCFI1:
 238              		.cfi_def_cfa_offset 20
 239              		.cfi_offset 4, -20
 240              		.cfi_offset 5, -16
 241              		.cfi_offset 6, -12
 242              		.cfi_offset 7, -8
 243              		.cfi_offset 8, -4
 244              	.LVL29:
 245              		.loc 1 189 0
 246 0004 0022     		movs	r2, #0
 190:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
 191:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 192:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 193:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 194:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));
 195:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
 196:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PUPD(GPIO_InitStruct->GPIO_PuPd));
 197:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 198:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* -------------------------Configure the port pins---------------- */
 199:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /*-- GPIO Mode Configuration --*/
 200:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 247              		.loc 1 200 0
 248 0006 1346     		mov	r3, r2
 201:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 202:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     pos = ((uint32_t)0x01) << pinpos;
 249              		.loc 1 202 0
 250 0008 0126     		movs	r6, #1
 203:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     /* Get the port pins position */
 204:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 205:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 206:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     if (currentpin == pos)
 207:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     {
 208:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->MODER  &= ~(GPIO_MODER_MODER0 << (pinpos * 2));
 251              		.loc 1 208 0
 252 000a 0327     		movs	r7, #3
 253 000c 03E0     		b	.L26
 254              	.LVL30:
 255              	.L24:
 200:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 256              		.loc 1 200 0
 257 000e 0133     		adds	r3, r3, #1
 258              	.LVL31:
 259 0010 0232     		adds	r2, r2, #2
 260 0012 102B     		cmp	r3, #16
 261 0014 2CD0     		beq	.L28
 262              	.LVL32:
 263              	.L26:
 204:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 264              		.loc 1 204 0
 265 0016 0D68     		ldr	r5, [r1, #0]
 202:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     pos = ((uint32_t)0x01) << pinpos;
 266              		.loc 1 202 0
 267 0018 06FA03F4 		lsl	r4, r6, r3
 268              	.LVL33:
 204:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 269              		.loc 1 204 0
 270 001c 2540     		ands	r5, r5, r4
 271              	.LVL34:
 206:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     if (currentpin == pos)
 272              		.loc 1 206 0
 273 001e A542     		cmp	r5, r4
 274 0020 F5D1     		bne	.L24
 275              		.loc 1 208 0
 276 0022 D0F800C0 		ldr	ip, [r0, #0]
 277 0026 07FA02F4 		lsl	r4, r7, r2
 278              	.LVL35:
 279 002a E443     		mvns	r4, r4
 280 002c 04EA0C0C 		and	ip, r4, ip
 281 0030 C0F800C0 		str	ip, [r0, #0]
 209:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
 282              		.loc 1 209 0
 283 0034 91F804C0 		ldrb	ip, [r1, #4]	@ zero_extendqisi2
 284 0038 D0F80080 		ldr	r8, [r0, #0]
 285 003c 0CFA02FC 		lsl	ip, ip, r2
 286 0040 4CEA080C 		orr	ip, ip, r8
 287 0044 C0F800C0 		str	ip, [r0, #0]
 210:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 211:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       if ((GPIO_InitStruct->GPIO_Mode == GPIO_Mode_OUT) || (GPIO_InitStruct->GPIO_Mode == GPIO_Mode
 288              		.loc 1 211 0
 289 0048 91F804C0 		ldrb	ip, [r1, #4]	@ zero_extendqisi2
 290 004c 0CF1FF3C 		add	ip, ip, #-1
 291 0050 BCF1010F 		cmp	ip, #1
 292 0054 0FD9     		bls	.L29
 293              	.LVL36:
 294              	.L25:
 212:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       {
 213:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Check Speed mode parameters */
 214:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 215:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 216:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Speed mode configuration */
 217:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinpos * 2));
 218:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
 219:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 220:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Check Output mode parameters */
 221:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_OTYPE(GPIO_InitStruct->GPIO_OType));
 222:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 223:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Output mode configuration*/
 224:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER  &= ~((GPIO_OTYPER_OT_0) << ((uint16_t)pinpos)) ;
 225:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
 226:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       }
 227:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 228:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       /* Pull-up Pull down resistor configuration*/
 229:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((uint16_t)pinpos * 2));
 295              		.loc 1 229 0
 296 0056 C568     		ldr	r5, [r0, #12]
 297 0058 2C40     		ands	r4, r4, r5
 298 005a C460     		str	r4, [r0, #12]
 230:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->PUPDR |= (((uint32_t)GPIO_InitStruct->GPIO_PuPd) << (pinpos * 2));
 299              		.loc 1 230 0
 300 005c CC79     		ldrb	r4, [r1, #7]	@ zero_extendqisi2
 301 005e C568     		ldr	r5, [r0, #12]
 302 0060 04FA02F4 		lsl	r4, r4, r2
 303 0064 2C43     		orrs	r4, r4, r5
 304 0066 C460     		str	r4, [r0, #12]
 200:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 305              		.loc 1 200 0
 306 0068 0133     		adds	r3, r3, #1
 307              	.LVL37:
 308 006a 0232     		adds	r2, r2, #2
 309 006c 102B     		cmp	r3, #16
 310 006e D2D1     		bne	.L26
 311              	.LVL38:
 312              	.L28:
 231:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     }
 232:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 233:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 313              		.loc 1 233 0
 314 0070 BDE8F001 		pop	{r4, r5, r6, r7, r8}
 315 0074 7047     		bx	lr
 316              	.LVL39:
 317              	.L29:
 217:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinpos * 2));
 318              		.loc 1 217 0
 319 0076 D0F808C0 		ldr	ip, [r0, #8]
 320 007a 04EA0C0C 		and	ip, r4, ip
 321 007e C0F808C0 		str	ip, [r0, #8]
 218:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
 322              		.loc 1 218 0
 323 0082 91F805C0 		ldrb	ip, [r1, #5]	@ zero_extendqisi2
 324 0086 D0F80880 		ldr	r8, [r0, #8]
 325 008a 0CFA02FC 		lsl	ip, ip, r2
 326 008e 4CEA080C 		orr	ip, ip, r8
 327 0092 C0F808C0 		str	ip, [r0, #8]
 224:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER  &= ~((GPIO_OTYPER_OT_0) << ((uint16_t)pinpos)) ;
 328              		.loc 1 224 0
 329 0096 D0F804C0 		ldr	ip, [r0, #4]
 330 009a 2CEA0505 		bic	r5, ip, r5
 331              	.LVL40:
 332 009e 4560     		str	r5, [r0, #4]
 225:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
 333              		.loc 1 225 0
 334 00a0 91F806C0 		ldrb	ip, [r1, #6]	@ zero_extendqisi2
 335 00a4 4568     		ldr	r5, [r0, #4]
 336 00a6 0CFA03FC 		lsl	ip, ip, r3
 234:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 235:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 236:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Fills each GPIO_InitStruct member with its default value.
 237:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct : pointer to a GPIO_InitTypeDef structure which will be initialized.
 238:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 239:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 240:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
 241:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 242:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Reset GPIO init structure parameters values */
 243:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
 244:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN;
 245:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
 246:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_OType = GPIO_OType_PP;
 247:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_PuPd = GPIO_PuPd_NOPULL;
 248:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 249:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 250:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 251:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Locks GPIO Pins configuration registers.
 252:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   The locked registers are GPIOx_MODER, GPIOx_OTYPER, GPIOx_OSPEEDR,
 253:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         GPIOx_PUPDR, GPIOx_AFRL and GPIOx_AFRH.
 254:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   The configuration of the locked GPIO pins can no longer be modified
 255:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         until the next reset.
 256:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 257:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be locked.
 258:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 259:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 260:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 261:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 262:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 263:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   __IO uint32_t tmp = 0x00010000;
 264:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 265:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 266:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 267:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 268:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 269:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp |= GPIO_Pin;
 270:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 271:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 272:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Reset LCKK bit */
 273:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR =  GPIO_Pin;
 274:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 275:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 276:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 277:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 278:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 279:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 280:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 281:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 282:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 283:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @}
 284:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 285:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 286:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group2 GPIO Read and Write
 287:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   GPIO Read and Write
 288:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 289:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 290:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 291:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                               GPIO Read and Write
 292:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 293:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 294:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 295:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 296:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 297:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 298:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 299:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified input port pin.
 300:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 301:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 302:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_Pin_x where x can be (0..15).
 303:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval The input port pin value.
 304:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 305:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 306:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 307:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 308:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 309:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 310:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 311:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 312:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 313:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)Bit_RESET)
 314:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 315:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 316:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 317:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 318:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 319:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 320:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 321:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return bitstatus;
 322:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 323:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 324:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 325:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO input data port.
 326:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 327:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval GPIO input data port value.
 328:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 329:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
 330:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 331:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 332:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 333:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 334:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->IDR);
 335:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 336:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 337:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 338:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified output data port bit.
 339:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 340:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 341:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be GPIO_Pin_x where x can be (0..15).
 342:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval The output port pin value.
 343:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 344:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 345:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 346:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 347:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 348:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 349:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 350:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 351:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 352:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if ((GPIOx->ODR & GPIO_Pin) != (uint32_t)Bit_RESET)
 353:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 354:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 355:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 356:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 357:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 358:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 359:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 360:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return bitstatus;
 361:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 362:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 363:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 364:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO output data port.
 365:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 366:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval GPIO output data port value.
 367:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 368:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
 369:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 370:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 371:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 372:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 373:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->ODR);
 374:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 375:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 376:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 377:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Sets the selected data port bits.
 378:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 379:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 380:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 381:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 382:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 383:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 384:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 385:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 386:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 387:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 388:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 389:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 390:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 391:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 392:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->BSRRL = GPIO_Pin;
 393:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 394:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 395:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 396:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Clears the selected data port bits.
 397:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 398:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 399:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 400:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 401:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 402:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 403:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 404:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 405:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 406:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 407:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 408:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 409:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 410:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 411:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->BSRRH = GPIO_Pin;
 412:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 413:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 414:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 415:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Sets or clears the selected data port bit.
 416:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 417:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 418:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of GPIO_Pin_x where x can be (0..15).
 419:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  BitVal: specifies the value to be written to the selected bit.
 420:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of the BitAction enum values:
 421:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg Bit_RESET: to clear the port pin
 422:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg Bit_SET: to set the port pin
 423:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 424:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 425:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
 426:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 427:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 428:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 429:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 430:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_BIT_ACTION(BitVal));
 431:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 432:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if (BitVal != Bit_RESET)
 433:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 434:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     GPIOx->BSRRL = GPIO_Pin;
 435:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 436:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 437:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 438:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     GPIOx->BSRRH = GPIO_Pin ;
 439:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 440:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 441:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 442:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 443:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Writes data to the specified GPIO data port.
 444:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 445:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  PortVal: specifies the value to be written to the port output data register.
 446:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 447:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 448:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal)
 449:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 450:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 451:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 452:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 453:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->ODR = PortVal;
 454:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 455:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 456:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 457:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Toggles the specified GPIO pins..
 458:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 459:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: Specifies the pins to be toggled.
 460:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 461:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 462:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_ToggleBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 463:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 464:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 465:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 466:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 467:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->ODR ^= GPIO_Pin;
 468:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 469:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 470:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 471:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @}
 472:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 473:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 474:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group3 GPIO Alternate functions configuration function
 475:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   GPIO Alternate functions configuration function
 476:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 477:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 478:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 479:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                GPIO Alternate functions configuration function
 480:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 481:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 482:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 483:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 484:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 485:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 486:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 487:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Changes the mapping of the specified pin.
 488:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 489:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_PinSource: specifies the pin for the Alternate function.
 490:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_PinSourcex where x can be (0..15).
 491:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_AFSelection: selects the pin to used as Alternate function.
 492:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of the following values:
 493:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_RTC_50Hz: Connect RTC_50Hz pin to AF0 (default after reset) 
 494:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_MCO: Connect MCO pin (MCO1 and MCO2) to AF0 (default after reset) 
 495:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TAMPER: Connect TAMPER pins (TAMPER_1 and TAMPER_2) to AF0 (default aft
 496:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SWJ: Connect SWJ pins (SWD and JTAG)to AF0 (default after reset) 
 497:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TRACE: Connect TRACE pins to AF0 (default after reset)
 498:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM1: Connect TIM1 pins to AF1
 499:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM2: Connect TIM2 pins to AF1
 500:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM3: Connect TIM3 pins to AF2
 501:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM4: Connect TIM4 pins to AF2
 502:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM5: Connect TIM5 pins to AF2
 503:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM8: Connect TIM8 pins to AF3
 504:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM9: Connect TIM9 pins to AF3
 505:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM10: Connect TIM10 pins to AF3
 506:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM11: Connect TIM11 pins to AF3
 507:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C1: Connect I2C1 pins to AF4
 508:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C2: Connect I2C2 pins to AF4
 509:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C3: Connect I2C3 pins to AF4
 510:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI1: Connect SPI1 pins to AF5
 511:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI2: Connect SPI2/I2S2 pins to AF5
 512:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI3: Connect SPI3/I2S3 pins to AF6
 513:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2S3ext: Connect I2S3ext pins to AF7
 514:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART1: Connect USART1 pins to AF7
 515:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART2: Connect USART2 pins to AF7
 516:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART3: Connect USART3 pins to AF7
 517:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART4: Connect UART4 pins to AF8
 518:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART5: Connect UART5 pins to AF8
 519:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART6: Connect USART6 pins to AF8
 520:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN1: Connect CAN1 pins to AF9
 521:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN2: Connect CAN2 pins to AF9
 522:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM12: Connect TIM12 pins to AF9
 523:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM13: Connect TIM13 pins to AF9
 524:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM14: Connect TIM14 pins to AF9
 525:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_FS: Connect OTG_FS pins to AF10
 526:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS: Connect OTG_HS pins to AF10
 527:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_ETH: Connect ETHERNET pins to AF11
 528:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_FSMC: Connect FSMC pins to AF12
 529:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS_FS: Connect OTG HS (configured in FS) pins to AF12
 530:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SDIO: Connect SDIO pins to AF12
 531:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_DCMI: Connect DCMI pins to AF13
 532:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_EVENTOUT: Connect EVENTOUT pins to AF15
 533:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 534:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 535:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_PinAFConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)
 536:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 537:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t temp = 0x00;
 538:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t temp_2 = 0x00;
 539:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   
 540:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 541:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 542:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
 543:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_AF(GPIO_AF));
 544:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   
 545:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
 546:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] &= ~((uint32_t)0xF << ((uint32_t)((uint32_t)GPIO_PinSource & (
 547:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp_2 = GPIOx->AFR[GPIO_PinSource >> 0x03] | temp;
 548:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] = temp_2;
 549:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 337              		.loc 1 549 0
 338 00aa 1FFA8CFC 		uxth	ip, ip
 225:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
 339              		.loc 1 225 0
 340 00ae 4CEA0505 		orr	r5, ip, r5
 341 00b2 4560     		str	r5, [r0, #4]
 342 00b4 CFE7     		b	.L25
 343              		.cfi_endproc
 344              	.LFE111:
 346 00b6 00BF     		.section	.text.GPIO_StructInit,"ax",%progbits
 347              		.align	2
 348              		.global	GPIO_StructInit
 349              		.thumb
 350              		.thumb_func
 352              	GPIO_StructInit:
 353              	.LFB112:
 241:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 354              		.loc 1 241 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              		@ link register save eliminated.
 359              	.LVL41:
 244:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN;
 360              		.loc 1 244 0
 361 0000 0023     		movs	r3, #0
 243:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
 362              		.loc 1 243 0
 363 0002 4FF6FF72 		movw	r2, #65535
 364 0006 0260     		str	r2, [r0, #0]
 244:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN;
 365              		.loc 1 244 0
 366 0008 0371     		strb	r3, [r0, #4]
 245:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
 367              		.loc 1 245 0
 368 000a 4371     		strb	r3, [r0, #5]
 246:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_OType = GPIO_OType_PP;
 369              		.loc 1 246 0
 370 000c 8371     		strb	r3, [r0, #6]
 247:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_PuPd = GPIO_PuPd_NOPULL;
 371              		.loc 1 247 0
 372 000e C371     		strb	r3, [r0, #7]
 373 0010 7047     		bx	lr
 374              		.cfi_endproc
 375              	.LFE112:
 377 0012 00BF     		.section	.text.GPIO_PinLockConfig,"ax",%progbits
 378              		.align	2
 379              		.global	GPIO_PinLockConfig
 380              		.thumb
 381              		.thumb_func
 383              	GPIO_PinLockConfig:
 384              	.LFB113:
 262:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 385              		.loc 1 262 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 8
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              		@ link register save eliminated.
 390              	.LVL42:
 391 0000 82B0     		sub	sp, sp, #8
 392              	.LCFI2:
 393              		.cfi_def_cfa_offset 8
 263:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   __IO uint32_t tmp = 0x00010000;
 394              		.loc 1 263 0
 395 0002 4FF48033 		mov	r3, #65536
 396 0006 0193     		str	r3, [sp, #4]
 397              	.LVL43:
 269:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp |= GPIO_Pin;
 398              		.loc 1 269 0
 399 0008 019B     		ldr	r3, [sp, #4]
 400 000a 0B43     		orrs	r3, r3, r1
 401              	.LVL44:
 402 000c 0193     		str	r3, [sp, #4]
 403              	.LVL45:
 271:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 404              		.loc 1 271 0
 405 000e 019B     		ldr	r3, [sp, #4]
 406              	.LVL46:
 407 0010 C361     		str	r3, [r0, #28]
 273:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR =  GPIO_Pin;
 408              		.loc 1 273 0
 409 0012 C161     		str	r1, [r0, #28]
 275:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 410              		.loc 1 275 0
 411 0014 019B     		ldr	r3, [sp, #4]
 412 0016 C361     		str	r3, [r0, #28]
 277:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 413              		.loc 1 277 0
 414 0018 C369     		ldr	r3, [r0, #28]
 415              	.LVL47:
 416 001a 0193     		str	r3, [sp, #4]
 279:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 417              		.loc 1 279 0
 418 001c C369     		ldr	r3, [r0, #28]
 419 001e 0193     		str	r3, [sp, #4]
 280:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 420              		.loc 1 280 0
 421 0020 02B0     		add	sp, sp, #8
 422 0022 7047     		bx	lr
 423              		.cfi_endproc
 424              	.LFE113:
 426              		.section	.text.GPIO_ReadInputDataBit,"ax",%progbits
 427              		.align	2
 428              		.global	GPIO_ReadInputDataBit
 429              		.thumb
 430              		.thumb_func
 432              	GPIO_ReadInputDataBit:
 433              	.LFB114:
 306:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 434              		.loc 1 306 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 439              	.LVL48:
 440              	.LVL49:
 313:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)Bit_RESET)
 441              		.loc 1 313 0
 442 0000 0369     		ldr	r3, [r0, #16]
 443              	.LVL50:
 444 0002 1942     		tst	r1, r3
 322:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 445              		.loc 1 322 0
 446 0004 0CBF     		ite	eq
 447 0006 0020     		moveq	r0, #0
 448 0008 0120     		movne	r0, #1
 449              	.LVL51:
 450 000a 7047     		bx	lr
 451              		.cfi_endproc
 452              	.LFE114:
 454              		.section	.text.GPIO_ReadInputData,"ax",%progbits
 455              		.align	2
 456              		.global	GPIO_ReadInputData
 457              		.thumb
 458              		.thumb_func
 460              	GPIO_ReadInputData:
 461              	.LFB115:
 330:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 462              		.loc 1 330 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 466              		@ link register save eliminated.
 467              	.LVL52:
 334:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->IDR);
 468              		.loc 1 334 0
 469 0000 0069     		ldr	r0, [r0, #16]
 470              	.LVL53:
 335:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 471              		.loc 1 335 0
 472 0002 80B2     		uxth	r0, r0
 473 0004 7047     		bx	lr
 474              		.cfi_endproc
 475              	.LFE115:
 477 0006 00BF     		.section	.text.GPIO_ReadOutputDataBit,"ax",%progbits
 478              		.align	2
 479              		.global	GPIO_ReadOutputDataBit
 480              		.thumb
 481              		.thumb_func
 483              	GPIO_ReadOutputDataBit:
 484              	.LFB116:
 345:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 485              		.loc 1 345 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489              		@ link register save eliminated.
 490              	.LVL54:
 491              	.LVL55:
 352:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if ((GPIOx->ODR & GPIO_Pin) != (uint32_t)Bit_RESET)
 492              		.loc 1 352 0
 493 0000 4369     		ldr	r3, [r0, #20]
 494              	.LVL56:
 495 0002 1942     		tst	r1, r3
 361:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 496              		.loc 1 361 0
 497 0004 0CBF     		ite	eq
 498 0006 0020     		moveq	r0, #0
 499 0008 0120     		movne	r0, #1
 500              	.LVL57:
 501 000a 7047     		bx	lr
 502              		.cfi_endproc
 503              	.LFE116:
 505              		.section	.text.GPIO_ReadOutputData,"ax",%progbits
 506              		.align	2
 507              		.global	GPIO_ReadOutputData
 508              		.thumb
 509              		.thumb_func
 511              	GPIO_ReadOutputData:
 512              	.LFB117:
 369:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 513              		.loc 1 369 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517              		@ link register save eliminated.
 518              	.LVL58:
 373:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->ODR);
 519              		.loc 1 373 0
 520 0000 4069     		ldr	r0, [r0, #20]
 521              	.LVL59:
 374:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 522              		.loc 1 374 0
 523 0002 80B2     		uxth	r0, r0
 524 0004 7047     		bx	lr
 525              		.cfi_endproc
 526              	.LFE117:
 528 0006 00BF     		.section	.text.GPIO_SetBits,"ax",%progbits
 529              		.align	2
 530              		.global	GPIO_SetBits
 531              		.thumb
 532              		.thumb_func
 534              	GPIO_SetBits:
 535              	.LFB118:
 387:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 536              		.loc 1 387 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540              		@ link register save eliminated.
 541              	.LVL60:
 392:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->BSRRL = GPIO_Pin;
 542              		.loc 1 392 0
 543 0000 0183     		strh	r1, [r0, #24]	@ movhi
 544 0002 7047     		bx	lr
 545              		.cfi_endproc
 546              	.LFE118:
 548              		.section	.text.GPIO_ResetBits,"ax",%progbits
 549              		.align	2
 550              		.global	GPIO_ResetBits
 551              		.thumb
 552              		.thumb_func
 554              	GPIO_ResetBits:
 555              	.LFB119:
 406:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 556              		.loc 1 406 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560              		@ link register save eliminated.
 561              	.LVL61:
 411:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->BSRRH = GPIO_Pin;
 562              		.loc 1 411 0
 563 0000 4183     		strh	r1, [r0, #26]	@ movhi
 564 0002 7047     		bx	lr
 565              		.cfi_endproc
 566              	.LFE119:
 568              		.section	.text.GPIO_WriteBit,"ax",%progbits
 569              		.align	2
 570              		.global	GPIO_WriteBit
 571              		.thumb
 572              		.thumb_func
 574              	GPIO_WriteBit:
 575              	.LFB120:
 426:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 576              		.loc 1 426 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 0
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580              		@ link register save eliminated.
 581              	.LVL62:
 432:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if (BitVal != Bit_RESET)
 582              		.loc 1 432 0
 583 0000 0AB9     		cbnz	r2, .L41
 438:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     GPIOx->BSRRH = GPIO_Pin ;
 584              		.loc 1 438 0
 585 0002 4183     		strh	r1, [r0, #26]	@ movhi
 586 0004 7047     		bx	lr
 587              	.L41:
 434:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     GPIOx->BSRRL = GPIO_Pin;
 588              		.loc 1 434 0
 589 0006 0183     		strh	r1, [r0, #24]	@ movhi
 590 0008 7047     		bx	lr
 591              		.cfi_endproc
 592              	.LFE120:
 594 000a 00BF     		.section	.text.GPIO_Write,"ax",%progbits
 595              		.align	2
 596              		.global	GPIO_Write
 597              		.thumb
 598              		.thumb_func
 600              	GPIO_Write:
 601              	.LFB121:
 449:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 602              		.loc 1 449 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 0
 605              		@ frame_needed = 0, uses_anonymous_args = 0
 606              		@ link register save eliminated.
 607              	.LVL63:
 453:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->ODR = PortVal;
 608              		.loc 1 453 0
 609 0000 4161     		str	r1, [r0, #20]
 610 0002 7047     		bx	lr
 611              		.cfi_endproc
 612              	.LFE121:
 614              		.section	.text.GPIO_ToggleBits,"ax",%progbits
 615              		.align	2
 616              		.global	GPIO_ToggleBits
 617              		.thumb
 618              		.thumb_func
 620              	GPIO_ToggleBits:
 621              	.LFB122:
 463:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 622              		.loc 1 463 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 627              	.LVL64:
 467:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->ODR ^= GPIO_Pin;
 628              		.loc 1 467 0
 629 0000 4369     		ldr	r3, [r0, #20]
 630 0002 5940     		eors	r1, r1, r3
 631              	.LVL65:
 632 0004 4161     		str	r1, [r0, #20]
 633 0006 7047     		bx	lr
 634              		.cfi_endproc
 635              	.LFE122:
 637              		.section	.text.GPIO_PinAFConfig,"ax",%progbits
 638              		.align	2
 639              		.global	GPIO_PinAFConfig
 640              		.thumb
 641              		.thumb_func
 643              	GPIO_PinAFConfig:
 644              	.LFB123:
 536:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 645              		.loc 1 536 0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 650              	.LVL66:
 651 0000 30B4     		push	{r4, r5}
 652              	.LCFI3:
 653              		.cfi_def_cfa_offset 8
 654              		.cfi_offset 4, -8
 655              		.cfi_offset 5, -4
 656              	.LVL67:
 546:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] &= ~((uint32_t)0xF << ((uint32_t)((uint32_t)GPIO_PinSource & (
 657              		.loc 1 546 0
 658 0002 CB08     		lsrs	r3, r1, #3
 659 0004 0833     		adds	r3, r3, #8
 545:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
 660              		.loc 1 545 0
 661 0006 01F00701 		and	r1, r1, #7
 662              	.LVL68:
 546:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] &= ~((uint32_t)0xF << ((uint32_t)((uint32_t)GPIO_PinSource & (
 663              		.loc 1 546 0
 664 000a 50F82350 		ldr	r5, [r0, r3, lsl #2]
 545:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
 665              		.loc 1 545 0
 666 000e 8900     		lsls	r1, r1, #2
 667              	.LVL69:
 546:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] &= ~((uint32_t)0xF << ((uint32_t)((uint32_t)GPIO_PinSource & (
 668              		.loc 1 546 0
 669 0010 0F24     		movs	r4, #15
 670 0012 04FA01F4 		lsl	r4, r4, r1
 671 0016 25EA0404 		bic	r4, r5, r4
 672 001a 40F82340 		str	r4, [r0, r3, lsl #2]
 547:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp_2 = GPIOx->AFR[GPIO_PinSource >> 0x03] | temp;
 673              		.loc 1 547 0
 674 001e 50F82340 		ldr	r4, [r0, r3, lsl #2]
 545:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
 675              		.loc 1 545 0
 676 0022 02FA01F2 		lsl	r2, r2, r1
 677              	.LVL70:
 547:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp_2 = GPIOx->AFR[GPIO_PinSource >> 0x03] | temp;
 678              		.loc 1 547 0
 679 0026 1443     		orrs	r4, r4, r2
 680              	.LVL71:
 548:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] = temp_2;
 681              		.loc 1 548 0
 682 0028 40F82340 		str	r4, [r0, r3, lsl #2]
 683              		.loc 1 549 0
 684 002c 30BC     		pop	{r4, r5}
 685 002e 7047     		bx	lr
 686              		.cfi_endproc
 687              	.LFE123:
 689              		.text
 690              	.Letext0:
 691              		.file 2 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 692              		.file 3 "../../lib/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 693              		.file 4 "../../lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h"
 694              		.file 5 "../../lib/CMSIS/Include/core_cm4.h"
 695              		.file 6 "../../lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_gpio.c
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:17     .text.GPIO_DeInit:00000000 $t
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:22     .text.GPIO_DeInit:00000000 GPIO_DeInit
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:210    .text.GPIO_DeInit:000000f4 $d
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:223    .text.GPIO_Init:00000000 $t
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:228    .text.GPIO_Init:00000000 GPIO_Init
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:347    .text.GPIO_StructInit:00000000 $t
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:352    .text.GPIO_StructInit:00000000 GPIO_StructInit
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:378    .text.GPIO_PinLockConfig:00000000 $t
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:383    .text.GPIO_PinLockConfig:00000000 GPIO_PinLockConfig
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:427    .text.GPIO_ReadInputDataBit:00000000 $t
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:432    .text.GPIO_ReadInputDataBit:00000000 GPIO_ReadInputDataBit
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:455    .text.GPIO_ReadInputData:00000000 $t
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:460    .text.GPIO_ReadInputData:00000000 GPIO_ReadInputData
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:478    .text.GPIO_ReadOutputDataBit:00000000 $t
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:483    .text.GPIO_ReadOutputDataBit:00000000 GPIO_ReadOutputDataBit
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:506    .text.GPIO_ReadOutputData:00000000 $t
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:511    .text.GPIO_ReadOutputData:00000000 GPIO_ReadOutputData
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:529    .text.GPIO_SetBits:00000000 $t
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:534    .text.GPIO_SetBits:00000000 GPIO_SetBits
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:549    .text.GPIO_ResetBits:00000000 $t
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:554    .text.GPIO_ResetBits:00000000 GPIO_ResetBits
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:569    .text.GPIO_WriteBit:00000000 $t
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:574    .text.GPIO_WriteBit:00000000 GPIO_WriteBit
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:595    .text.GPIO_Write:00000000 $t
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:600    .text.GPIO_Write:00000000 GPIO_Write
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:615    .text.GPIO_ToggleBits:00000000 $t
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:620    .text.GPIO_ToggleBits:00000000 GPIO_ToggleBits
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:638    .text.GPIO_PinAFConfig:00000000 $t
C:\Users\root\AppData\Local\Temp\cc8GKSqL.s:643    .text.GPIO_PinAFConfig:00000000 GPIO_PinAFConfig
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_AHB1PeriphResetCmd
