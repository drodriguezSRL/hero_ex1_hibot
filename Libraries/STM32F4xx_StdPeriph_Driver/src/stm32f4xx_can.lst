   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 23, 1
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f4xx_can.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CAN_DeInit,"ax",%progbits
  18              		.align	2
  19              		.global	CAN_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	CAN_DeInit:
  24              	.LFB110:
  25              		.file 1 "../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c"
   1:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
   2:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
   3:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @file    stm32f4xx_can.c
   4:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @author  MCD Application Team
   5:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @version V1.0.2
   6:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @date    05-March-2012
   7:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          functionalities of the Controller area network (CAN) peripheral:           
   9:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Initialization and Configuration 
  10:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Transmission 
  11:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Reception    
  12:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Operation modes switch  
  13:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Error management          
  14:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Interrupts and flags        
  15:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  16:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @verbatim
  17:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                               
  18:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================      
  19:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                                   How to use this driver
  20:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================
  21:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
  22:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          1.  Enable the CAN controller interface clock using 
  23:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE); for CAN1 
  24:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              and RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN2, ENABLE); for CAN2
  25:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @note   In case you are using CAN2 only, you have to enable the CAN1 clock.
  26:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *     
  27:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          2. CAN pins configuration
  28:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Enable the clock for the CAN GPIOs using the following function:
  29:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
  30:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Connect the involved CAN pins to AF9 using the following function 
  31:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_CANx); 
  32:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                - Configure these CAN pins in alternate function mode by calling
  33:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  the function  GPIO_Init();
  34:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *    
  35:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          3.  Initialise and configure the CAN using CAN_Init() and 
  36:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               CAN_FilterInit() functions.   
  37:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  38:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          4.  Transmit the desired CAN frame using CAN_Transmit() function.
  39:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  40:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          5.  Check the transmission of a CAN frame using CAN_TransmitStatus()
  41:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.
  42:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  43:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          6.  Cancel the transmission of a CAN frame using CAN_CancelTransmit()
  44:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.  
  45:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            
  46:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          7.  Receive a CAN frame using CAN_Recieve() function.
  47:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  48:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          8.  Release the receive FIFOs using CAN_FIFORelease() function.
  49:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  50:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          9. Return the number of pending received frames using 
  51:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              CAN_MessagePending() function.            
  52:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   
  53:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          10. To control CAN events you can use one of the following two methods:
  54:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Check on CAN flags using the CAN_GetFlagStatus() function.  
  55:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Use CAN interrupts through the function CAN_ITConfig() at 
  56:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 initialization phase and CAN_GetITStatus() function into 
  57:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 interrupt routines to check if the event has occurred or not.
  58:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             After checking on a flag you should clear it using CAN_ClearFlag()
  59:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             function. And after checking on an interrupt event you should 
  60:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             clear it using CAN_ClearITPendingBit() function.            
  61:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  62:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              
  63:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @endverbatim
  64:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  65:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
  66:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @attention
  67:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  68:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  69:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  70:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  71:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * You may not use this file except in compliance with the License.
  72:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * You may obtain a copy of the License at:
  73:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  74:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  75:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  76:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * Unless required by applicable law or agreed to in writing, software 
  77:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  78:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  79:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * See the License for the specific language governing permissions and
  80:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * limitations under the License.
  81:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  82:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
  83:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  84:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  85:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Includes ------------------------------------------------------------------*/
  86:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_can.h"
  87:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_rcc.h"
  88:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  89:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  90:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  91:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  92:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  93:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN 
  94:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief CAN driver modules
  95:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  96:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
  97:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private typedef -----------------------------------------------------------*/
  98:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private define ------------------------------------------------------------*/
  99:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 100:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Master Control Register bits */
 101:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define MCR_DBF           ((uint32_t)0x00010000) /* software master reset */
 102:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 103:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Mailbox Transmit Request */
 104:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define TMIDxR_TXRQ       ((uint32_t)0x00000001) /* Transmit mailbox request */
 105:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 106:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Filter Master Register bits */
 107:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define FMR_FINIT         ((uint32_t)0x00000001) /* Filter init mode */
 108:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 109:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for INAK bit */
 110:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define INAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 111:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for SLAK bit */
 112:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define SLAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 113:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 114:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in TSR register */
 115:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_TSR     ((uint32_t)0x08000000) 
 116:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF1R register */
 117:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF1R    ((uint32_t)0x04000000) 
 118:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF0R register */
 119:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF0R    ((uint32_t)0x02000000) 
 120:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in MSR register */
 121:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_MSR     ((uint32_t)0x01000000) 
 122:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in ESR register */
 123:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_ESR     ((uint32_t)0x00F00000) 
 124:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 125:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Mailboxes definition */
 126:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_0   ((uint8_t)0x00)
 127:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_1   ((uint8_t)0x01)
 128:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_2   ((uint8_t)0x02) 
 129:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 130:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_MODE_MASK     ((uint32_t) 0x00000003)
 131:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 132:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private macro -------------------------------------------------------------*/
 133:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private variables ---------------------------------------------------------*/
 134:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private function prototypes -----------------------------------------------*/
 135:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private functions ---------------------------------------------------------*/
 136:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit);
 137:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 138:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Private_Functions
 139:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 140:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 141:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 142:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group1 Initialization and Configuration functions
 143:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    Initialization and Configuration functions 
 144:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 145:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 146:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 147:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       Initialization and Configuration functions
 148:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 149:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 150:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initialize the CAN peripherals : Prescaler, operating mode, the maximum number 
 151:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      of time quanta to perform resynchronization, the number of time quanta in
 152:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Bit Segment 1 and 2 and many other modes. 
 153:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Refer to  @ref CAN_InitTypeDef  for more details.
 154:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Configures the CAN reception filter.                                      
 155:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Select the start bank filter for slave CAN.
 156:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the Debug Freeze mode for CAN
 157:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the CAN Time Trigger Operation communication mode
 158:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 159:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 160:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 161:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 162:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 163:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 164:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default reset values.
 165:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 166:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None.
 167:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 168:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DeInit(CAN_TypeDef* CANx)
 169:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
  26              		.loc 1 169 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 3, -8
 170:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 171:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 172:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 173:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CANx == CAN1)
  36              		.loc 1 173 0
  37 0002 4FF4C843 		mov	r3, #25600
  38 0006 C4F20003 		movt	r3, 16384
  39 000a 9842     		cmp	r0, r3
  40 000c 0BD0     		beq	.L4
 174:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 175:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN1 reset state */
 176:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, ENABLE);
 177:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN1 from reset state */
 178:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, DISABLE);
 179:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 180:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 181:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {  
 182:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN2 reset state */
 183:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, ENABLE);
  41              		.loc 1 183 0
  42 000e 4FF08060 		mov	r0, #67108864
  43              	.LVL1:
  44 0012 0121     		movs	r1, #1
  45 0014 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 184:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN2 from reset state */
 185:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, DISABLE);
  46              		.loc 1 185 0
  47 0018 4FF08060 		mov	r0, #67108864
  48 001c 0021     		movs	r1, #0
 186:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 187:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
  49              		.loc 1 187 0
  50 001e BDE80840 		pop	{r3, lr}
 185:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, DISABLE);
  51              		.loc 1 185 0
  52 0022 FFF7FEBF 		b	RCC_APB1PeriphResetCmd
  53              	.LVL2:
  54              	.L4:
 176:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, ENABLE);
  55              		.loc 1 176 0
  56 0026 4FF00070 		mov	r0, #33554432
  57              	.LVL3:
  58 002a 0121     		movs	r1, #1
  59 002c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 178:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, DISABLE);
  60              		.loc 1 178 0
  61 0030 4FF00070 		mov	r0, #33554432
  62 0034 0021     		movs	r1, #0
  63              		.loc 1 187 0
  64 0036 BDE80840 		pop	{r3, lr}
 178:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, DISABLE);
  65              		.loc 1 178 0
  66 003a FFF7FEBF 		b	RCC_APB1PeriphResetCmd
  67              		.cfi_endproc
  68              	.LFE110:
  70 003e 00BF     		.section	.text.CAN_Init,"ax",%progbits
  71              		.align	2
  72              		.global	CAN_Init
  73              		.thumb
  74              		.thumb_func
  76              	CAN_Init:
  77              	.LFB111:
 188:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 189:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 190:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 191:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_InitStruct.
 192:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 193:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure that contains
 194:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         the configuration information for the CAN peripheral.
 195:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Constant indicates initialization succeed which will be 
 196:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_InitStatus_Failed or CAN_InitStatus_Success.
 197:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 198:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Init(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct)
 199:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
  78              		.loc 1 199 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.LVL4:
  84 0000 70B4     		push	{r4, r5, r6}
  85              	.LCFI1:
  86              		.cfi_def_cfa_offset 12
  87              		.cfi_offset 6, -4
  88              		.cfi_offset 5, -8
  89              		.cfi_offset 4, -12
  90              	.LVL5:
 200:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t InitStatus = CAN_InitStatus_Failed;
 201:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_ack = 0x00000000;
 202:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 203:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 204:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TTCM));
 205:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_ABOM));
 206:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_AWUM));
 207:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_NART));
 208:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_RFLM));
 209:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TXFP));
 210:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_MODE(CAN_InitStruct->CAN_Mode));
 211:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_SJW(CAN_InitStruct->CAN_SJW));
 212:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS1(CAN_InitStruct->CAN_BS1));
 213:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS2(CAN_InitStruct->CAN_BS2));
 214:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_PRESCALER(CAN_InitStruct->CAN_Prescaler));
 215:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 216:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Exit from sleep mode */
 217:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= (~(uint32_t)CAN_MCR_SLEEP);
  91              		.loc 1 217 0
  92 0002 0368     		ldr	r3, [r0, #0]
  93 0004 23F00202 		bic	r2, r3, #2
  94 0008 0260     		str	r2, [r0, #0]
 218:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 219:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request initialisation */
 220:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR |= CAN_MCR_INRQ ;
  95              		.loc 1 220 0
  96 000a 0368     		ldr	r3, [r0, #0]
  97 000c 43F00102 		orr	r2, r3, #1
  98 0010 0260     		str	r2, [r0, #0]
 221:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 222:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wait the acknowledge */
 223:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
  99              		.loc 1 223 0
 100 0012 4368     		ldr	r3, [r0, #4]
 101 0014 DB07     		lsls	r3, r3, #31
 102 0016 12D4     		bmi	.L6
 103 0018 4FF6FF73 		movw	r3, #65535
 104              	.LVL6:
 105              	.L7:
 106 001c 4268     		ldr	r2, [r0, #4]
 107 001e D207     		lsls	r2, r2, #31
 108 0020 0DD4     		bmi	.L6
 109              		.loc 1 223 0 is_stmt 0 discriminator 2
 110 0022 4268     		ldr	r2, [r0, #4]
 111 0024 D207     		lsls	r2, r2, #31
 112 0026 0AD4     		bmi	.L6
 113              		.loc 1 223 0
 114 0028 4268     		ldr	r2, [r0, #4]
 115 002a D207     		lsls	r2, r2, #31
 116 002c 07D4     		bmi	.L6
 117 002e 4268     		ldr	r2, [r0, #4]
 118 0030 D207     		lsls	r2, r2, #31
 119 0032 04D4     		bmi	.L6
 120 0034 4268     		ldr	r2, [r0, #4]
 121 0036 D207     		lsls	r2, r2, #31
 122 0038 01D4     		bmi	.L6
 123 003a 053B     		subs	r3, r3, #5
 124 003c EED1     		bne	.L7
 125              	.L6:
 224:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 225:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wait_ack++;
 226:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 227:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 228:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check acknowledge */
 229:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK)
 126              		.loc 1 229 0 is_stmt 1
 127 003e 4368     		ldr	r3, [r0, #4]
 128 0040 13F0010C 		ands	ip, r3, #1
 230:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 231:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     InitStatus = CAN_InitStatus_Failed;
 129              		.loc 1 231 0
 130 0044 08BF     		it	eq
 131 0046 6046     		moveq	r0, ip
 132              	.LVL7:
 229:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK)
 133              		.loc 1 229 0
 134 0048 67D0     		beq	.L8
 232:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 233:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else 
 234:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 235:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the time triggered communication mode */
 236:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TTCM == ENABLE)
 135              		.loc 1 236 0
 136 004a 8C79     		ldrb	r4, [r1, #6]	@ zero_extendqisi2
 137 004c 012C     		cmp	r4, #1
 237:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 238:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TTCM;
 138              		.loc 1 238 0
 139 004e 0368     		ldr	r3, [r0, #0]
 140 0050 0CBF     		ite	eq
 141 0052 43F08003 		orreq	r3, r3, #128
 239:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 240:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 241:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 242:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TTCM;
 142              		.loc 1 242 0
 143 0056 23F08003 		bicne	r3, r3, #128
 144 005a 0360     		str	r3, [r0, #0]
 243:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 244:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 245:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic bus-off management */
 246:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_ABOM == ENABLE)
 145              		.loc 1 246 0
 146 005c 91F807C0 		ldrb	ip, [r1, #7]	@ zero_extendqisi2
 147 0060 BCF1010F 		cmp	ip, #1
 247:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 248:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_ABOM;
 148              		.loc 1 248 0
 149 0064 0268     		ldr	r2, [r0, #0]
 150 0066 0CBF     		ite	eq
 151 0068 42F04002 		orreq	r2, r2, #64
 249:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 250:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 251:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 252:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_ABOM;
 152              		.loc 1 252 0
 153 006c 22F04002 		bicne	r2, r2, #64
 154 0070 0260     		str	r2, [r0, #0]
 253:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 254:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 255:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic wake-up mode */
 256:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_AWUM == ENABLE)
 155              		.loc 1 256 0
 156 0072 0E7A     		ldrb	r6, [r1, #8]	@ zero_extendqisi2
 157 0074 012E     		cmp	r6, #1
 257:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 258:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_AWUM;
 158              		.loc 1 258 0
 159 0076 0568     		ldr	r5, [r0, #0]
 160 0078 0CBF     		ite	eq
 161 007a 45F02005 		orreq	r5, r5, #32
 259:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 260:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 261:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 262:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_AWUM;
 162              		.loc 1 262 0
 163 007e 25F02005 		bicne	r5, r5, #32
 164 0082 0560     		str	r5, [r0, #0]
 263:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 264:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 265:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the no automatic retransmission */
 266:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_NART == ENABLE)
 165              		.loc 1 266 0
 166 0084 4C7A     		ldrb	r4, [r1, #9]	@ zero_extendqisi2
 167 0086 012C     		cmp	r4, #1
 267:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 268:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_NART;
 168              		.loc 1 268 0
 169 0088 0368     		ldr	r3, [r0, #0]
 170 008a 0CBF     		ite	eq
 171 008c 43F01003 		orreq	r3, r3, #16
 269:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 270:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 271:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 272:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_NART;
 172              		.loc 1 272 0
 173 0090 23F01003 		bicne	r3, r3, #16
 174 0094 0360     		str	r3, [r0, #0]
 273:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 274:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 275:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the receive FIFO locked mode */
 276:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_RFLM == ENABLE)
 175              		.loc 1 276 0
 176 0096 8A7A     		ldrb	r2, [r1, #10]	@ zero_extendqisi2
 177 0098 012A     		cmp	r2, #1
 277:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 278:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_RFLM;
 178              		.loc 1 278 0
 179 009a 0668     		ldr	r6, [r0, #0]
 180 009c 0CBF     		ite	eq
 181 009e 46F00806 		orreq	r6, r6, #8
 279:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 280:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 281:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 282:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_RFLM;
 182              		.loc 1 282 0
 183 00a2 26F00806 		bicne	r6, r6, #8
 184 00a6 0660     		str	r6, [r0, #0]
 283:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 284:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 285:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the transmit FIFO priority */
 286:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TXFP == ENABLE)
 185              		.loc 1 286 0
 186 00a8 CD7A     		ldrb	r5, [r1, #11]	@ zero_extendqisi2
 187 00aa 012D     		cmp	r5, #1
 287:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 288:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TXFP;
 188              		.loc 1 288 0
 189 00ac 0468     		ldr	r4, [r0, #0]
 190 00ae 0CBF     		ite	eq
 191 00b0 44F00404 		orreq	r4, r4, #4
 289:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 290:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 291:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 292:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TXFP;
 192              		.loc 1 292 0
 193 00b4 24F00404 		bicne	r4, r4, #4
 194 00b8 0460     		str	r4, [r0, #0]
 293:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 294:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 295:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the bit timing register */
 296:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 195              		.loc 1 296 0
 196 00ba 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 297:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 197              		.loc 1 297 0
 198 00bc CE78     		ldrb	r6, [r1, #3]	@ zero_extendqisi2
 298:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 199              		.loc 1 298 0
 200 00be 0D79     		ldrb	r5, [r1, #4]	@ zero_extendqisi2
 299:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 201              		.loc 1 299 0
 202 00c0 4C79     		ldrb	r4, [r1, #5]	@ zero_extendqisi2
 300:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
 203              		.loc 1 300 0
 204 00c2 0988     		ldrh	r1, [r1, #0]
 205              	.LVL8:
 296:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 206              		.loc 1 296 0
 207 00c4 9A07     		lsls	r2, r3, #30
 208 00c6 42EA0663 		orr	r3, r2, r6, lsl #24
 297:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 209              		.loc 1 297 0
 210 00ca 43EA0542 		orr	r2, r3, r5, lsl #16
 298:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 211              		.loc 1 298 0
 212 00ce 42EA045C 		orr	ip, r2, r4, lsl #20
 213              		.loc 1 300 0
 214 00d2 4B1E     		subs	r3, r1, #1
 299:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 215              		.loc 1 299 0
 216 00d4 4CEA0301 		orr	r1, ip, r3
 296:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 217              		.loc 1 296 0
 218 00d8 C161     		str	r1, [r0, #28]
 301:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 302:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation */
 303:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~(uint32_t)CAN_MCR_INRQ;
 219              		.loc 1 303 0
 220 00da 0368     		ldr	r3, [r0, #0]
 221 00dc 23F00102 		bic	r2, r3, #1
 222 00e0 0260     		str	r2, [r0, #0]
 223              	.LVL9:
 304:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 305:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* Wait the acknowledge */
 306:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_ack = 0;
 307:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 308:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 224              		.loc 1 308 0
 225 00e2 4168     		ldr	r1, [r0, #4]
 226 00e4 CB07     		lsls	r3, r1, #31
 227 00e6 12D5     		bpl	.L21
 228 00e8 4FF6FF73 		movw	r3, #65535
 229              	.LVL10:
 230              	.L22:
 231 00ec 4168     		ldr	r1, [r0, #4]
 232 00ee C907     		lsls	r1, r1, #31
 233 00f0 0DD5     		bpl	.L21
 234              		.loc 1 308 0 is_stmt 0 discriminator 2
 235 00f2 4268     		ldr	r2, [r0, #4]
 236 00f4 D207     		lsls	r2, r2, #31
 237 00f6 0AD5     		bpl	.L21
 238              		.loc 1 308 0
 239 00f8 4168     		ldr	r1, [r0, #4]
 240 00fa C907     		lsls	r1, r1, #31
 241 00fc 07D5     		bpl	.L21
 242 00fe 4268     		ldr	r2, [r0, #4]
 243 0100 D207     		lsls	r2, r2, #31
 244 0102 04D5     		bpl	.L21
 245 0104 4168     		ldr	r1, [r0, #4]
 246 0106 C907     		lsls	r1, r1, #31
 247 0108 01D5     		bpl	.L21
 248 010a 053B     		subs	r3, r3, #5
 249 010c EED1     		bne	.L22
 250              	.L21:
 309:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    {
 310:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      wait_ack++;
 311:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
 312:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 313:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* ...and check acknowledged */
 314:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK)
 251              		.loc 1 314 0 is_stmt 1
 252 010e 4068     		ldr	r0, [r0, #4]
 231:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     InitStatus = CAN_InitStatus_Failed;
 253              		.loc 1 231 0
 254 0110 10F0010F 		tst	r0, #1
 255 0114 14BF     		ite	ne
 256 0116 0020     		movne	r0, #0
 257 0118 0120     		moveq	r0, #1
 258              	.L8:
 259              	.LVL11:
 315:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 316:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Failed;
 317:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 318:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 319:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 320:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Success ;
 321:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 322:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 323:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 324:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* At this step, return the status of initialization */
 325:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return InitStatus;
 326:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 260              		.loc 1 326 0
 261 011a 70BC     		pop	{r4, r5, r6}
 262 011c 7047     		bx	lr
 263              		.cfi_endproc
 264              	.LFE111:
 266 011e 00BF     		.section	.text.CAN_FilterInit,"ax",%progbits
 267              		.align	2
 268              		.global	CAN_FilterInit
 269              		.thumb
 270              		.thumb_func
 272              	CAN_FilterInit:
 273              	.LFB112:
 327:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 328:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 329:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 330:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_FilterInitStruct.
 331:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FilterInitStruct: pointer to a CAN_FilterInitTypeDef structure that
 332:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         contains the configuration information.
 333:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 334:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 335:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct)
 336:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 274              		.loc 1 336 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 279              	.LVL12:
 280 0000 F0B4     		push	{r4, r5, r6, r7}
 281              	.LCFI2:
 282              		.cfi_def_cfa_offset 16
 283              		.cfi_offset 7, -4
 284              		.cfi_offset 6, -8
 285              		.cfi_offset 5, -12
 286              		.cfi_offset 4, -16
 287              	.LVL13:
 337:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 338:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 339:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(CAN_FilterInitStruct->CAN_FilterNumber));
 340:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_MODE(CAN_FilterInitStruct->CAN_FilterMode));
 341:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
 342:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
 343:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));
 344:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 345:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   filter_number_bit_pos = ((uint32_t)1) << CAN_FilterInitStruct->CAN_FilterNumber;
 346:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 347:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialisation mode for the filter */
 348:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 288              		.loc 1 348 0
 289 0002 4FF4C843 		mov	r3, #25600
 290 0006 C4F20003 		movt	r3, 16384
 291 000a D3F80042 		ldr	r4, [r3, #512]
 345:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   filter_number_bit_pos = ((uint32_t)1) << CAN_FilterInitStruct->CAN_FilterNumber;
 292              		.loc 1 345 0
 293 000e 827A     		ldrb	r2, [r0, #10]	@ zero_extendqisi2
 294              		.loc 1 348 0
 295 0010 44F00101 		orr	r1, r4, #1
 296 0014 C3F80012 		str	r1, [r3, #512]
 349:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 350:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Deactivation */
 351:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FA1R &= ~(uint32_t)filter_number_bit_pos;
 297              		.loc 1 351 0
 298 0018 D3F81C12 		ldr	r1, [r3, #540]
 345:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   filter_number_bit_pos = ((uint32_t)1) << CAN_FilterInitStruct->CAN_FilterNumber;
 299              		.loc 1 345 0
 300 001c 0124     		movs	r4, #1
 301 001e 9440     		lsls	r4, r4, r2
 302              	.LVL14:
 303              		.loc 1 351 0
 304 0020 E243     		mvns	r2, r4
 305 0022 1140     		ands	r1, r1, r2
 306 0024 C3F81C12 		str	r1, [r3, #540]
 352:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 353:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Scale */
 354:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_16bit)
 307              		.loc 1 354 0
 308 0028 017B     		ldrb	r1, [r0, #12]	@ zero_extendqisi2
 309 002a E1B9     		cbnz	r1, .L37
 355:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 356:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 16-bit scale for the filter */
 357:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R &= ~(uint32_t)filter_number_bit_pos;
 310              		.loc 1 357 0
 311 002c D3F80C52 		ldr	r5, [r3, #524]
 312 0030 02EA0501 		and	r1, r2, r5
 313 0034 C3F80C12 		str	r1, [r3, #524]
 358:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 359:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 360:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 361:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 314              		.loc 1 361 0
 315 0038 817A     		ldrb	r1, [r0, #10]	@ zero_extendqisi2
 362:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 316              		.loc 1 362 0
 317 003a C688     		ldrh	r6, [r0, #6]
 363:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 318              		.loc 1 363 0
 319 003c B0F802C0 		ldrh	ip, [r0, #2]
 361:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 320              		.loc 1 361 0
 321 0040 4831     		adds	r1, r1, #72
 362:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 322              		.loc 1 362 0
 323 0042 4CEA0645 		orr	r5, ip, r6, lsl #16
 361:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 324              		.loc 1 361 0
 325 0046 43F83150 		str	r5, [r3, r1, lsl #3]
 364:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 365:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 366:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 367:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 326              		.loc 1 367 0
 327 004a 867A     		ldrb	r6, [r0, #10]	@ zero_extendqisi2
 368:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 328              		.loc 1 368 0
 329 004c 8588     		ldrh	r5, [r0, #4]
 369:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 330              		.loc 1 369 0
 331 004e B0F800C0 		ldrh	ip, [r0, #0]
 367:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 332              		.loc 1 367 0
 333 0052 46F24061 		movw	r1, #26176
 334 0056 F600     		lsls	r6, r6, #3
 335 0058 C4F20001 		movt	r1, 16384
 336 005c 7318     		adds	r3, r6, r1
 368:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 337              		.loc 1 368 0
 338 005e 4CEA0541 		orr	r1, ip, r5, lsl #16
 367:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 339              		.loc 1 367 0
 340 0062 5960     		str	r1, [r3, #4]
 341 0064 017B     		ldrb	r1, [r0, #12]	@ zero_extendqisi2
 342              	.L37:
 370:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 371:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 372:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_32bit)
 343              		.loc 1 372 0
 344 0066 0129     		cmp	r1, #1
 345 0068 4AD0     		beq	.L44
 346              	.L38:
 373:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 374:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit scale for the filter */
 375:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R |= filter_number_bit_pos;
 376:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 377:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 378:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 379:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 380:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 381:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 382:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 383:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 384:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 385:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 386:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Mode */
 387:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdMask)
 347              		.loc 1 387 0
 348 006a C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 349 006c 002B     		cmp	r3, #0
 350 006e 3CD1     		bne	.L39
 388:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 389:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Id/Mask mode for the filter*/
 390:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R &= ~(uint32_t)filter_number_bit_pos;
 351              		.loc 1 390 0
 352 0070 4FF4C84C 		mov	ip, #25600
 353 0074 C4F2000C 		movt	ip, 16384
 354 0078 DCF80432 		ldr	r3, [ip, #516]
 355 007c 02EA0301 		and	r1, r2, r3
 356 0080 CCF80412 		str	r1, [ip, #516]
 357              	.L40:
 391:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 392:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 393:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 394:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Identifier list mode for the filter*/
 395:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R |= (uint32_t)filter_number_bit_pos;
 396:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 397:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 398:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter FIFO assignment */
 399:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO0)
 358              		.loc 1 399 0
 359 0084 0389     		ldrh	r3, [r0, #8]
 360 0086 4BB9     		cbnz	r3, .L41
 400:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 401:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 0 assignation for the filter */
 402:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R &= ~(uint32_t)filter_number_bit_pos;
 361              		.loc 1 402 0
 362 0088 4FF4C84C 		mov	ip, #25600
 363 008c C4F2000C 		movt	ip, 16384
 364 0090 DCF81412 		ldr	r1, [ip, #532]
 365 0094 0A40     		ands	r2, r2, r1
 366 0096 CCF81422 		str	r2, [ip, #532]
 367 009a 0389     		ldrh	r3, [r0, #8]
 368              	.L41:
 403:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 404:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 405:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO1)
 369              		.loc 1 405 0
 370 009c 012B     		cmp	r3, #1
 406:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 407:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 1 assignation for the filter */
 408:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R |= (uint32_t)filter_number_bit_pos;
 371              		.loc 1 408 0
 372 009e 01BF     		itttt	eq
 373 00a0 4FF4C843 		moveq	r3, #25600
 374 00a4 C4F20003 		movteq	r3, 16384
 375 00a8 D3F81422 		ldreq	r2, [r3, #532]
 376 00ac 2243     		orreq	r2, r4, r2
 377 00ae 08BF     		it	eq
 378 00b0 C3F81422 		streq	r2, [r3, #532]
 409:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 410:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 411:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter activation */
 412:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterActivation == ENABLE)
 379              		.loc 1 412 0
 380 00b4 90F80DC0 		ldrb	ip, [r0, #13]	@ zero_extendqisi2
 381 00b8 BCF1010F 		cmp	ip, #1
 413:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 414:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FA1R |= filter_number_bit_pos;
 382              		.loc 1 414 0
 383 00bc 01BF     		itttt	eq
 384 00be 4FF4C84C 		moveq	ip, #25600
 385 00c2 C4F2000C 		movteq	ip, 16384
 386 00c6 DCF81C22 		ldreq	r2, [ip, #540]
 387 00ca 1443     		orreq	r4, r4, r2
 388              	.LVL15:
 389 00cc 08BF     		it	eq
 390 00ce CCF81C42 		streq	r4, [ip, #540]
 415:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 416:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 417:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave the initialisation mode for the filter */
 418:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 391              		.loc 1 418 0
 392 00d2 4FF4C843 		mov	r3, #25600
 393 00d6 C4F20003 		movt	r3, 16384
 394 00da D3F80022 		ldr	r2, [r3, #512]
 395 00de 22F00100 		bic	r0, r2, #1
 396              	.LVL16:
 397 00e2 C3F80002 		str	r0, [r3, #512]
 419:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 398              		.loc 1 419 0
 399 00e6 F0BC     		pop	{r4, r5, r6, r7}
 400 00e8 7047     		bx	lr
 401              	.LVL17:
 402              	.L39:
 395:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R |= (uint32_t)filter_number_bit_pos;
 403              		.loc 1 395 0
 404 00ea 4FF4C84C 		mov	ip, #25600
 405 00ee C4F2000C 		movt	ip, 16384
 406 00f2 DCF80432 		ldr	r3, [ip, #516]
 407 00f6 44EA0301 		orr	r1, r4, r3
 408 00fa CCF80412 		str	r1, [ip, #516]
 409 00fe C1E7     		b	.L40
 410              	.L44:
 375:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R |= filter_number_bit_pos;
 411              		.loc 1 375 0
 412 0100 4FF4C841 		mov	r1, #25600
 413 0104 C4F20001 		movt	r1, 16384
 381:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 414              		.loc 1 381 0
 415 0108 46F24063 		movw	r3, #26176
 375:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R |= filter_number_bit_pos;
 416              		.loc 1 375 0
 417 010c D1F80C52 		ldr	r5, [r1, #524]
 418 0110 44EA0507 		orr	r7, r4, r5
 419 0114 C1F80C72 		str	r7, [r1, #524]
 377:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 420              		.loc 1 377 0
 421 0118 857A     		ldrb	r5, [r0, #10]	@ zero_extendqisi2
 378:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 422              		.loc 1 378 0
 423 011a 0788     		ldrh	r7, [r0, #0]
 379:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 424              		.loc 1 379 0
 425 011c B0F802C0 		ldrh	ip, [r0, #2]
 377:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 426              		.loc 1 377 0
 427 0120 4835     		adds	r5, r5, #72
 378:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 428              		.loc 1 378 0
 429 0122 4CEA0746 		orr	r6, ip, r7, lsl #16
 377:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 430              		.loc 1 377 0
 431 0126 41F83560 		str	r6, [r1, r5, lsl #3]
 381:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 432              		.loc 1 381 0
 433 012a 867A     		ldrb	r6, [r0, #10]	@ zero_extendqisi2
 382:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 434              		.loc 1 382 0
 435 012c 8588     		ldrh	r5, [r0, #4]
 383:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 436              		.loc 1 383 0
 437 012e B0F806C0 		ldrh	ip, [r0, #6]
 381:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 438              		.loc 1 381 0
 439 0132 F600     		lsls	r6, r6, #3
 440 0134 C4F20003 		movt	r3, 16384
 441 0138 F318     		adds	r3, r6, r3
 382:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 442              		.loc 1 382 0
 443 013a 4CEA0541 		orr	r1, ip, r5, lsl #16
 381:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 444              		.loc 1 381 0
 445 013e 5960     		str	r1, [r3, #4]
 446 0140 93E7     		b	.L38
 447              		.cfi_endproc
 448              	.LFE112:
 450 0142 00BF     		.section	.text.CAN_StructInit,"ax",%progbits
 451              		.align	2
 452              		.global	CAN_StructInit
 453              		.thumb
 454              		.thumb_func
 456              	CAN_StructInit:
 457              	.LFB113:
 420:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 421:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 422:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Fills each CAN_InitStruct member with its default value.
 423:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure which ill be initialized.
 424:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 425:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 426:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct)
 427:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 458              		.loc 1 427 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              		@ link register save eliminated.
 463              	.LVL18:
 428:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Reset CAN init structure parameters values */
 429:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 430:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the time triggered communication mode */
 431:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TTCM = DISABLE;
 464              		.loc 1 431 0
 465 0000 0023     		movs	r3, #0
 466 0002 8371     		strb	r3, [r0, #6]
 432:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 433:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic bus-off management */
 434:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_ABOM = DISABLE;
 467              		.loc 1 434 0
 468 0004 C371     		strb	r3, [r0, #7]
 435:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 436:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic wake-up mode */
 437:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_AWUM = DISABLE;
 469              		.loc 1 437 0
 470 0006 0372     		strb	r3, [r0, #8]
 438:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 439:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the no automatic retransmission */
 440:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_NART = DISABLE;
 471              		.loc 1 440 0
 472 0008 4372     		strb	r3, [r0, #9]
 441:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 442:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the receive FIFO locked mode */
 443:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_RFLM = DISABLE;
 473              		.loc 1 443 0
 474 000a 8372     		strb	r3, [r0, #10]
 444:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 445:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the transmit FIFO priority */
 446:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TXFP = DISABLE;
 475              		.loc 1 446 0
 476 000c C372     		strb	r3, [r0, #11]
 447:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 448:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Mode member */
 449:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Mode = CAN_Mode_Normal;
 477              		.loc 1 449 0
 478 000e 8370     		strb	r3, [r0, #2]
 450:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 451:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_SJW member */
 452:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_SJW = CAN_SJW_1tq;
 479              		.loc 1 452 0
 480 0010 C370     		strb	r3, [r0, #3]
 453:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 454:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS1 member */
 455:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS1 = CAN_BS1_4tq;
 481              		.loc 1 455 0
 482 0012 0322     		movs	r2, #3
 483 0014 0271     		strb	r2, [r0, #4]
 456:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 457:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS2 member */
 458:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS2 = CAN_BS2_3tq;
 484              		.loc 1 458 0
 485 0016 0221     		movs	r1, #2
 486 0018 4171     		strb	r1, [r0, #5]
 459:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 460:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Prescaler member */
 461:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Prescaler = 1;
 487              		.loc 1 461 0
 488 001a 0123     		movs	r3, #1
 489 001c 0380     		strh	r3, [r0, #0]	@ movhi
 462:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 490              		.loc 1 462 0
 491 001e 7047     		bx	lr
 492              		.cfi_endproc
 493              	.LFE113:
 495              		.section	.text.CAN_SlaveStartBank,"ax",%progbits
 496              		.align	2
 497              		.global	CAN_SlaveStartBank
 498              		.thumb
 499              		.thumb_func
 501              	CAN_SlaveStartBank:
 502              	.LFB114:
 463:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 464:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 465:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Select the start bank filter for slave CAN.
 466:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_BankNumber: Select the start slave bank filter from 1..27.
 467:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 468:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 469:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_SlaveStartBank(uint8_t CAN_BankNumber) 
 470:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 503              		.loc 1 470 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 508              	.LVL19:
 471:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 472:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BANKNUMBER(CAN_BankNumber));
 473:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 474:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Enter Initialisation mode for the filter */
 475:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 509              		.loc 1 475 0
 510 0000 4FF4C843 		mov	r3, #25600
 511 0004 C4F20003 		movt	r3, 16384
 512 0008 D3F80022 		ldr	r2, [r3, #512]
 513 000c 42F00101 		orr	r1, r2, #1
 514 0010 C3F80012 		str	r1, [r3, #512]
 476:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 477:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select the start slave bank */
 478:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= (uint32_t)0xFFFFC0F1 ;
 515              		.loc 1 478 0
 516 0014 D3F80022 		ldr	r2, [r3, #512]
 517 0018 22F47C5C 		bic	ip, r2, #16128
 518 001c 2CF00E01 		bic	r1, ip, #14
 519 0020 C3F80012 		str	r1, [r3, #512]
 479:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 520              		.loc 1 479 0
 521 0024 D3F80022 		ldr	r2, [r3, #512]
 522 0028 42EA0021 		orr	r1, r2, r0, lsl #8
 523 002c C3F80012 		str	r1, [r3, #512]
 480:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 481:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave Initialisation mode for the filter */
 482:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 524              		.loc 1 482 0
 525 0030 D3F80002 		ldr	r0, [r3, #512]
 526              	.LVL20:
 527 0034 20F00102 		bic	r2, r0, #1
 528 0038 C3F80022 		str	r2, [r3, #512]
 483:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 529              		.loc 1 483 0
 530 003c 7047     		bx	lr
 531              		.cfi_endproc
 532              	.LFE114:
 534 003e 00BF     		.section	.text.CAN_DBGFreeze,"ax",%progbits
 535              		.align	2
 536              		.global	CAN_DBGFreeze
 537              		.thumb
 538              		.thumb_func
 540              	CAN_DBGFreeze:
 541              	.LFB115:
 484:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 485:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 486:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the DBG Freeze for CAN.
 487:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 488:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN peripheral. 
 489:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE (CAN reception/transmission is frozen
 490:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          during debug. Reception FIFOs can still be accessed/controlled normally) 
 491:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          or DISABLE (CAN is working during debug).
 492:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 493:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 494:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DBGFreeze(CAN_TypeDef* CANx, FunctionalState NewState)
 495:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 542              		.loc 1 495 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              		@ link register save eliminated.
 547              	.LVL21:
 496:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 497:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 498:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 499:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 500:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 501:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 502:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable Debug Freeze  */
 503:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= MCR_DBF;
 548              		.loc 1 503 0
 549 0000 0368     		ldr	r3, [r0, #0]
 500:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 550              		.loc 1 500 0
 551 0002 19B9     		cbnz	r1, .L50
 504:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 505:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 506:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 507:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable Debug Freeze */
 508:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~MCR_DBF;
 552              		.loc 1 508 0
 553 0004 23F48031 		bic	r1, r3, #65536
 554              	.LVL22:
 555 0008 0160     		str	r1, [r0, #0]
 556 000a 7047     		bx	lr
 557              	.LVL23:
 558              	.L50:
 503:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= MCR_DBF;
 559              		.loc 1 503 0
 560 000c 43F48033 		orr	r3, r3, #65536
 561 0010 0360     		str	r3, [r0, #0]
 562 0012 7047     		bx	lr
 563              		.cfi_endproc
 564              	.LFE115:
 566              		.section	.text.CAN_TTComModeCmd,"ax",%progbits
 567              		.align	2
 568              		.global	CAN_TTComModeCmd
 569              		.thumb
 570              		.thumb_func
 572              	CAN_TTComModeCmd:
 573              	.LFB116:
 509:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 510:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 511:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 512:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 513:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 514:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the CAN Time TriggerOperation communication mode.
 515:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   DLC must be programmed as 8 in order Time Stamp (2 bytes) to be 
 516:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         sent over the CAN bus.  
 517:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 518:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: Mode new state. This parameter can be: ENABLE or DISABLE.
 519:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When enabled, Time stamp (TIME[15:0]) value is  sent in the last two
 520:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         data bytes of the 8-byte message: TIME[7:0] in data byte 6 and TIME[15:8] 
 521:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         in data byte 7. 
 522:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 523:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 524:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_TTComModeCmd(CAN_TypeDef* CANx, FunctionalState NewState)
 525:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 574              		.loc 1 525 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 579              	.LVL24:
 526:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 527:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 528:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 529:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 530:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 531:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the TTCM mode */
 532:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= CAN_MCR_TTCM;
 580              		.loc 1 532 0
 581 0000 0368     		ldr	r3, [r0, #0]
 529:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 582              		.loc 1 529 0
 583 0002 A9B9     		cbnz	r1, .L54
 533:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 534:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set TGT bits */
 535:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR |= ((uint32_t)CAN_TDT0R_TGT);
 536:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 537:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 538:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 539:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 540:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 541:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the TTCM mode */
 542:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(uint32_t)CAN_MCR_TTCM);
 584              		.loc 1 542 0
 585 0004 23F08001 		bic	r1, r3, #128
 586              	.LVL25:
 587 0008 0160     		str	r1, [r0, #0]
 543:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 544:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Reset TGT bits */
 545:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR &= ((uint32_t)~CAN_TDT0R_TGT);
 588              		.loc 1 545 0
 589 000a D0F88431 		ldr	r3, [r0, #388]
 590 000e 23F48072 		bic	r2, r3, #256
 591 0012 C0F88421 		str	r2, [r0, #388]
 546:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR &= ((uint32_t)~CAN_TDT1R_TGT);
 592              		.loc 1 546 0
 593 0016 D0F89411 		ldr	r1, [r0, #404]
 594 001a 21F48073 		bic	r3, r1, #256
 595 001e C0F89431 		str	r3, [r0, #404]
 547:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR &= ((uint32_t)~CAN_TDT2R_TGT);
 596              		.loc 1 547 0
 597 0022 D0F8A421 		ldr	r2, [r0, #420]
 598 0026 22F48071 		bic	r1, r2, #256
 599 002a C0F8A411 		str	r1, [r0, #420]
 600 002e 7047     		bx	lr
 601              	.LVL26:
 602              	.L54:
 532:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= CAN_MCR_TTCM;
 603              		.loc 1 532 0
 604 0030 43F08003 		orr	r3, r3, #128
 605 0034 0360     		str	r3, [r0, #0]
 535:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR |= ((uint32_t)CAN_TDT0R_TGT);
 606              		.loc 1 535 0
 607 0036 D0F88421 		ldr	r2, [r0, #388]
 608 003a 42F48071 		orr	r1, r2, #256
 609              	.LVL27:
 610 003e C0F88411 		str	r1, [r0, #388]
 536:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 611              		.loc 1 536 0
 612 0042 D0F89431 		ldr	r3, [r0, #404]
 613 0046 43F48072 		orr	r2, r3, #256
 614 004a C0F89421 		str	r2, [r0, #404]
 537:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 615              		.loc 1 537 0
 616 004e D0F8A411 		ldr	r1, [r0, #420]
 617 0052 41F48073 		orr	r3, r1, #256
 618 0056 C0F8A431 		str	r3, [r0, #420]
 619 005a 7047     		bx	lr
 620              		.cfi_endproc
 621              	.LFE116:
 623              		.section	.text.CAN_Transmit,"ax",%progbits
 624              		.align	2
 625              		.global	CAN_Transmit
 626              		.thumb
 627              		.thumb_func
 629              	CAN_Transmit:
 630              	.LFB117:
 548:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 549:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 550:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 551:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 552:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 553:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 554:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 555:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group2 CAN Frames Transmission functions
 556:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Transmission functions 
 557:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 558:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 559:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 560:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Transmission functions
 561:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 562:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 563:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initiate and transmit a CAN frame message (if there is an empty mailbox).
 564:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Check the transmission status of a CAN Frame
 565:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Cancel a transmit request
 566:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 567:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 568:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 569:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 570:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 571:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 572:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 573:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 574:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TxMessage: pointer to a structure which contains CAN Id, CAN DLC and CAN data.
 575:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The number of the mailbox that is used for transmission or
 576:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_NoMailBox if there is no empty mailbox.
 577:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 578:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Transmit(CAN_TypeDef* CANx, CanTxMsg* TxMessage)
 579:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 631              		.loc 1 579 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635              		@ link register save eliminated.
 636              	.LVL28:
 637 0000 2DE9F001 		push	{r4, r5, r6, r7, r8}
 638              	.LCFI3:
 639              		.cfi_def_cfa_offset 20
 640              		.cfi_offset 8, -4
 641              		.cfi_offset 7, -8
 642              		.cfi_offset 6, -12
 643              		.cfi_offset 5, -16
 644              		.cfi_offset 4, -20
 645              	.LVL29:
 646              		.loc 1 579 0
 647 0004 0346     		mov	r3, r0
 580:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t transmit_mailbox = 0;
 581:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 582:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 583:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IDTYPE(TxMessage->IDE));
 584:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_RTR(TxMessage->RTR));
 585:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_DLC(TxMessage->DLC));
 586:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 587:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select one empty transmit mailbox */
 588:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->TSR&CAN_TSR_TME0) == CAN_TSR_TME0)
 648              		.loc 1 588 0
 649 0006 8268     		ldr	r2, [r0, #8]
 650 0008 5201     		lsls	r2, r2, #5
 651 000a 51D4     		bmi	.L60
 589:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 590:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 0;
 591:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 592:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME1) == CAN_TSR_TME1)
 652              		.loc 1 592 0
 653 000c 8268     		ldr	r2, [r0, #8]
 654 000e 1201     		lsls	r2, r2, #4
 655 0010 64D5     		bpl	.L63
 656 0012 0125     		movs	r5, #1
 593:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 594:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 1;
 657              		.loc 1 594 0
 658 0014 2846     		mov	r0, r5
 659              	.LVL30:
 595:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 596:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME2) == CAN_TSR_TME2)
 597:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 598:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 2;
 599:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 600:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 601:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 602:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = CAN_TxStatus_NoMailBox;
 603:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 604:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 605:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (transmit_mailbox != CAN_TxStatus_NoMailBox)
 606:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 607:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the Id */
 608:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR &= TMIDxR_TXRQ;
 660              		.loc 1 608 0
 661 0016 05F11804 		add	r4, r5, #24
 662 001a 2201     		lsls	r2, r4, #4
 663 001c 9F58     		ldr	r7, [r3, r2]
 664 001e 07F00106 		and	r6, r7, #1
 665 0022 9E50     		str	r6, [r3, r2]
 609:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 666              		.loc 1 609 0
 667 0024 0E7A     		ldrb	r6, [r1, #8]	@ zero_extendqisi2
 668 0026 002E     		cmp	r6, #0
 669 0028 4ED0     		beq	.L64
 670              	.LVL31:
 671              	.L58:
 610:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 611:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_STDID(TxMessage->StdId));  
 612:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 613:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 614:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 615:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 616:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 617:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_EXTID(TxMessage->ExtId));
 618:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 672              		.loc 1 618 0
 673 002a D1F80480 		ldr	r8, [r1, #4]
 674 002e 53F802C0 		ldr	ip, [r3, r2]
 619:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 675              		.loc 1 619 0
 676 0032 4F7A     		ldrb	r7, [r1, #9]	@ zero_extendqisi2
 618:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 677              		.loc 1 618 0
 678 0034 46EAC806 		orr	r6, r6, r8, lsl #3
 679              		.loc 1 619 0
 680 0038 46EA0C06 		orr	r6, r6, ip
 618:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 681              		.loc 1 618 0
 682 003c 3743     		orrs	r7, r7, r6
 683 003e 9F50     		str	r7, [r3, r2]
 684              	.L59:
 620:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 621:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 622:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 623:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the DLC */
 624:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     TxMessage->DLC &= (uint8_t)0x0000000F;
 685              		.loc 1 624 0
 686 0040 8E7A     		ldrb	r6, [r1, #10]	@ zero_extendqisi2
 625:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR &= (uint32_t)0xFFFFFFF0;
 687              		.loc 1 625 0
 688 0042 2401     		lsls	r4, r4, #4
 689 0044 03EB040C 		add	ip, r3, r4
 624:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     TxMessage->DLC &= (uint8_t)0x0000000F;
 690              		.loc 1 624 0
 691 0048 06F00F07 		and	r7, r6, #15
 692 004c 8F72     		strb	r7, [r1, #10]
 693              		.loc 1 625 0
 694 004e DCF80420 		ldr	r2, [ip, #4]
 695 0052 22F00F06 		bic	r6, r2, #15
 696 0056 CCF80460 		str	r6, [ip, #4]
 626:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR |= TxMessage->DLC;
 697              		.loc 1 626 0
 698 005a DCF80420 		ldr	r2, [ip, #4]
 699 005e 8F7A     		ldrb	r7, [r1, #10]	@ zero_extendqisi2
 700 0060 47EA0206 		orr	r6, r7, r2
 701 0064 CCF80460 		str	r6, [ip, #4]
 627:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 628:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the data field */
 629:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 630:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 702              		.loc 1 630 0
 703 0068 4A7B     		ldrb	r2, [r1, #13]	@ zero_extendqisi2
 629:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 704              		.loc 1 629 0
 705 006a 91F80EC0 		ldrb	ip, [r1, #14]	@ zero_extendqisi2
 631:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 632:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[0]));
 706              		.loc 1 632 0
 707 006e CF7A     		ldrb	r7, [r1, #11]	@ zero_extendqisi2
 631:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 708              		.loc 1 631 0
 709 0070 0E7B     		ldrb	r6, [r1, #12]	@ zero_extendqisi2
 630:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 710              		.loc 1 630 0
 711 0072 1204     		lsls	r2, r2, #16
 629:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 712              		.loc 1 629 0
 713 0074 42EA0C62 		orr	r2, r2, ip, lsl #24
 714 0078 03EB0515 		add	r5, r3, r5, lsl #4
 630:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 715              		.loc 1 630 0
 716 007c 42EA070C 		orr	ip, r2, r7
 631:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 717              		.loc 1 631 0
 718 0080 4CEA0627 		orr	r7, ip, r6, lsl #8
 629:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 719              		.loc 1 629 0
 720 0084 C5F88871 		str	r7, [r5, #392]
 633:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 634:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 721              		.loc 1 634 0
 722 0088 4A7C     		ldrb	r2, [r1, #17]	@ zero_extendqisi2
 633:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 723              		.loc 1 633 0
 724 008a 8F7C     		ldrb	r7, [r1, #18]	@ zero_extendqisi2
 635:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 636:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[4]));
 725              		.loc 1 636 0
 726 008c CE7B     		ldrb	r6, [r1, #15]	@ zero_extendqisi2
 635:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 727              		.loc 1 635 0
 728 008e 097C     		ldrb	r1, [r1, #16]	@ zero_extendqisi2
 729              	.LVL32:
 634:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 730              		.loc 1 634 0
 731 0090 1204     		lsls	r2, r2, #16
 633:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 732              		.loc 1 633 0
 733 0092 42EA0762 		orr	r2, r2, r7, lsl #24
 634:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 734              		.loc 1 634 0
 735 0096 42EA060C 		orr	ip, r2, r6
 635:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 736              		.loc 1 635 0
 737 009a 4CEA0121 		orr	r1, ip, r1, lsl #8
 633:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 738              		.loc 1 633 0
 739 009e C5F88C11 		str	r1, [r5, #396]
 637:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request transmission */
 638:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR |= TMIDxR_TXRQ;
 740              		.loc 1 638 0
 741 00a2 1A59     		ldr	r2, [r3, r4]
 742 00a4 42F00101 		orr	r1, r2, #1
 743 00a8 1951     		str	r1, [r3, r4]
 744              	.L57:
 639:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 640:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return transmit_mailbox;
 641:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 745              		.loc 1 641 0
 746 00aa BDE8F001 		pop	{r4, r5, r6, r7, r8}
 747 00ae 7047     		bx	lr
 748              	.LVL33:
 749              	.L60:
 588:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->TSR&CAN_TSR_TME0) == CAN_TSR_TME0)
 750              		.loc 1 588 0
 751 00b0 0025     		movs	r5, #0
 590:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 0;
 752              		.loc 1 590 0
 753 00b2 2846     		mov	r0, r5
 754              	.L56:
 755              	.LVL34:
 608:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR &= TMIDxR_TXRQ;
 756              		.loc 1 608 0
 757 00b4 05F11804 		add	r4, r5, #24
 758 00b8 2201     		lsls	r2, r4, #4
 759 00ba 9F58     		ldr	r7, [r3, r2]
 760 00bc 07F00106 		and	r6, r7, #1
 761 00c0 9E50     		str	r6, [r3, r2]
 609:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 762              		.loc 1 609 0
 763 00c2 0E7A     		ldrb	r6, [r1, #8]	@ zero_extendqisi2
 764 00c4 002E     		cmp	r6, #0
 765 00c6 B0D1     		bne	.L58
 766              	.LVL35:
 767              	.L64:
 612:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 768              		.loc 1 612 0
 769 00c8 D1F800C0 		ldr	ip, [r1, #0]
 770 00cc 4E7A     		ldrb	r6, [r1, #9]	@ zero_extendqisi2
 771 00ce 9F58     		ldr	r7, [r3, r2]
 772 00d0 46EA4C5C 		orr	ip, r6, ip, lsl #21
 773 00d4 4CEA0706 		orr	r6, ip, r7
 774 00d8 9E50     		str	r6, [r3, r2]
 775 00da B1E7     		b	.L59
 776              	.LVL36:
 777              	.L63:
 596:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME2) == CAN_TSR_TME2)
 778              		.loc 1 596 0
 779 00dc 8068     		ldr	r0, [r0, #8]
 780 00de C200     		lsls	r2, r0, #3
 781 00e0 02D5     		bpl	.L62
 782 00e2 0225     		movs	r5, #2
 598:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 2;
 783              		.loc 1 598 0
 784 00e4 2846     		mov	r0, r5
 785 00e6 E5E7     		b	.L56
 786              	.L62:
 602:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = CAN_TxStatus_NoMailBox;
 787              		.loc 1 602 0
 788 00e8 0420     		movs	r0, #4
 789 00ea DEE7     		b	.L57
 790              		.cfi_endproc
 791              	.LFE117:
 793              		.section	.text.CAN_TransmitStatus,"ax",%progbits
 794              		.align	2
 795              		.global	CAN_TransmitStatus
 796              		.thumb
 797              		.thumb_func
 799              	CAN_TransmitStatus:
 800              	.LFB118:
 642:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 643:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 644:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks the transmission status of a CAN Frame.
 645:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 646:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TransmitMailbox: the number of the mailbox that is used for transmission.
 647:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_TxStatus_Ok if the CAN driver transmits the message, 
 648:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_Failed in an other case.
 649:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 650:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_TransmitStatus(CAN_TypeDef* CANx, uint8_t TransmitMailbox)
 651:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 801              		.loc 1 651 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805              		@ link register save eliminated.
 806              	.LVL37:
 807              	.LVL38:
 652:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t state = 0;
 653:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 654:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 655:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 656:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(TransmitMailbox));
 657:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 658:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (TransmitMailbox)
 808              		.loc 1 658 0
 809 0000 0129     		cmp	r1, #1
 810 0002 2AD0     		beq	.L68
 811 0004 10D3     		bcc	.L67
 659:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 660:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): 
 661:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0);
 662:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 663:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): 
 664:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1);
 665:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 666:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): 
 667:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2);
 668:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 669:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 670:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state = CAN_TxStatus_Failed;
 812              		.loc 1 670 0
 813 0006 0023     		movs	r3, #0
 658:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (TransmitMailbox)
 814              		.loc 1 658 0
 815 0008 0229     		cmp	r1, #2
 816 000a 04D1     		bne	.L66
 667:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2);
 817              		.loc 1 667 0
 818 000c 8268     		ldr	r2, [r0, #8]
 819 000e 0023     		movs	r3, #0
 820 0010 C1F20303 		movt	r3, 4099
 821              	.LVL39:
 822 0014 1340     		ands	r3, r3, r2
 823              	.LVL40:
 824              	.L66:
 671:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 672:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 673:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (state)
 825              		.loc 1 673 0
 826 0016 0320     		movs	r0, #3
 827 0018 C0F20040 		movt	r0, 1024
 828 001c 8342     		cmp	r3, r0
 829 001e 0DD0     		beq	.L74
 830              	.L79:
 831 0020 0ED8     		bhi	.L75
 832 0022 C3B9     		cbnz	r3, .L77
 833 0024 0220     		movs	r0, #2
 834 0026 7047     		bx	lr
 835              	.LVL41:
 836              	.L67:
 661:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0);
 837              		.loc 1 661 0
 838 0028 8268     		ldr	r2, [r0, #8]
 839 002a 0323     		movs	r3, #3
 840 002c C0F20043 		movt	r3, 1024
 841              	.LVL42:
 842 0030 1340     		ands	r3, r3, r2
 843              	.LVL43:
 844              		.loc 1 673 0
 845 0032 0320     		movs	r0, #3
 846              	.LVL44:
 847 0034 C0F20040 		movt	r0, 1024
 848 0038 8342     		cmp	r3, r0
 849 003a F1D1     		bne	.L79
 850              	.LVL45:
 851              	.L74:
 674:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 675:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit pending  */
 676:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (0x0): state = CAN_TxStatus_Pending;
 677:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 678:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit failed  */
 679:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP0 | CAN_TSR_TME0): state = CAN_TxStatus_Failed;
 680:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 681:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP1 | CAN_TSR_TME1): state = CAN_TxStatus_Failed;
 682:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 683:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP2 | CAN_TSR_TME2): state = CAN_TxStatus_Failed;
 684:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 685:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit succeeded  */
 686:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0):state = CAN_TxStatus_Ok;
 687:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 688:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1):state = CAN_TxStatus_Ok;
 689:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 690:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2):state = CAN_TxStatus_Ok;
 691:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 852              		.loc 1 691 0
 853 003c 0120     		movs	r0, #1
 854 003e 7047     		bx	lr
 855              	.LVL46:
 856              	.L75:
 673:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (state)
 857              		.loc 1 673 0
 858 0040 4FF44071 		mov	r1, #768
 859 0044 C0F60001 		movt	r1, 2048
 860 0048 8B42     		cmp	r3, r1
 861 004a F7D0     		beq	.L74
 862 004c 0022     		movs	r2, #0
 863 004e C1F20302 		movt	r2, 4099
 864 0052 9342     		cmp	r3, r2
 865 0054 F2D0     		beq	.L74
 866              	.L77:
 867 0056 0020     		movs	r0, #0
 868              	.LVL47:
 692:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default: state = CAN_TxStatus_Failed;
 693:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 694:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 695:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t) state;
 696:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 869              		.loc 1 696 0
 870 0058 7047     		bx	lr
 871              	.LVL48:
 872              	.L68:
 664:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1);
 873              		.loc 1 664 0
 874 005a 8168     		ldr	r1, [r0, #8]
 875              	.LVL49:
 876 005c 4FF44070 		mov	r0, #768
 877              	.LVL50:
 878 0060 C0F60000 		movt	r0, 2048
 879              	.LVL51:
 880 0064 01EA0003 		and	r3, r1, r0
 881              	.LVL52:
 665:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 882              		.loc 1 665 0
 883 0068 D5E7     		b	.L66
 884              		.cfi_endproc
 885              	.LFE118:
 887 006a 00BF     		.section	.text.CAN_CancelTransmit,"ax",%progbits
 888              		.align	2
 889              		.global	CAN_CancelTransmit
 890              		.thumb
 891              		.thumb_func
 893              	CAN_CancelTransmit:
 894              	.LFB119:
 697:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 698:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 699:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Cancels a transmit request.
 700:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 701:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  Mailbox: Mailbox number.
 702:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 703:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 704:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_CancelTransmit(CAN_TypeDef* CANx, uint8_t Mailbox)
 705:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 895              		.loc 1 705 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899              		@ link register save eliminated.
 900              	.LVL53:
 706:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 707:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 708:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(Mailbox));
 709:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* abort transmission */
 710:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (Mailbox)
 901              		.loc 1 710 0
 902 0000 0129     		cmp	r1, #1
 903 0002 0CD0     		beq	.L83
 904 0004 06D3     		bcc	.L82
 905 0006 0229     		cmp	r1, #2
 906 0008 03D1     		bne	.L80
 711:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 712:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): CANx->TSR |= CAN_TSR_ABRQ0;
 713:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 714:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR |= CAN_TSR_ABRQ1;
 715:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 716:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR |= CAN_TSR_ABRQ2;
 907              		.loc 1 716 0
 908 000a 8268     		ldr	r2, [r0, #8]
 909 000c 42F40001 		orr	r1, r2, #8388608
 910              	.LVL54:
 911 0010 8160     		str	r1, [r0, #8]
 912              	.L80:
 913 0012 7047     		bx	lr
 914              	.LVL55:
 915              	.L82:
 712:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): CANx->TSR |= CAN_TSR_ABRQ0;
 916              		.loc 1 712 0
 917 0014 8168     		ldr	r1, [r0, #8]
 918              	.LVL56:
 919 0016 41F08003 		orr	r3, r1, #128
 920 001a 8360     		str	r3, [r0, #8]
 713:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 921              		.loc 1 713 0
 922 001c 7047     		bx	lr
 923              	.LVL57:
 924              	.L83:
 714:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR |= CAN_TSR_ABRQ1;
 925              		.loc 1 714 0
 926 001e 8368     		ldr	r3, [r0, #8]
 927 0020 43F40042 		orr	r2, r3, #32768
 928 0024 8260     		str	r2, [r0, #8]
 715:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 929              		.loc 1 715 0
 930 0026 7047     		bx	lr
 931              		.cfi_endproc
 932              	.LFE119:
 934              		.section	.text.CAN_Receive,"ax",%progbits
 935              		.align	2
 936              		.global	CAN_Receive
 937              		.thumb
 938              		.thumb_func
 940              	CAN_Receive:
 941              	.LFB120:
 717:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 718:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 719:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 720:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 721:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 722:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 723:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 724:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 725:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 726:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 727:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group3 CAN Frames Reception functions
 728:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Reception functions 
 729:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 730:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 731:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 732:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Reception functions
 733:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 734:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 735:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Receive a correct CAN frame
 736:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Release a specified receive FIFO (2 FIFOs are available)
 737:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the number of the pending received CAN frames
 738:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 739:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 740:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 741:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 742:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 743:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 744:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Receives a correct CAN frame.
 745:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 746:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 747:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  RxMessage: pointer to a structure receive frame which contains CAN Id,
 748:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN DLC, CAN data and FMI number.
 749:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 750:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 751:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_Receive(CAN_TypeDef* CANx, uint8_t FIFONumber, CanRxMsg* RxMessage)
 752:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 942              		.loc 1 752 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 0
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946              		@ link register save eliminated.
 947              	.LVL58:
 948 0000 30B4     		push	{r4, r5}
 949              	.LCFI4:
 950              		.cfi_def_cfa_offset 8
 951              		.cfi_offset 5, -4
 952              		.cfi_offset 4, -8
 753:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 754:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 755:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 756:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Id */
 757:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->IDE = (uint8_t)0x04 & CANx->sFIFOMailBox[FIFONumber].RIR;
 953              		.loc 1 757 0
 954 0002 01F11B03 		add	r3, r1, #27
 955 0006 1C01     		lsls	r4, r3, #4
 956 0008 0559     		ldr	r5, [r0, r4]
 957 000a 05F00405 		and	r5, r5, #4
 958 000e EDB2     		uxtb	r5, r5
 959 0010 1572     		strb	r5, [r2, #8]
 758:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 759:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 760:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->StdId = (uint32_t)0x000007FF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 21);
 960              		.loc 1 760 0
 961 0012 0459     		ldr	r4, [r0, r4]
 758:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 962              		.loc 1 758 0
 963 0014 002D     		cmp	r5, #0
 964 0016 3AD1     		bne	.L86
 965              		.loc 1 760 0
 966 0018 640D     		lsrs	r4, r4, #21
 967 001a 1460     		str	r4, [r2, #0]
 968              	.L87:
 761:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 762:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 763:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 764:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->ExtId = (uint32_t)0x1FFFFFFF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 3);
 765:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 766:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 767:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->RTR = (uint8_t)0x02 & CANx->sFIFOMailBox[FIFONumber].RIR;
 969              		.loc 1 767 0
 970 001c 1B01     		lsls	r3, r3, #4
 971 001e 00EB030C 		add	ip, r0, r3
 972 0022 C458     		ldr	r4, [r0, r3]
 973 0024 04F00203 		and	r3, r4, #2
 974 0028 5372     		strb	r3, [r2, #9]
 768:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the DLC */
 769:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->DLC = (uint8_t)0x0F & CANx->sFIFOMailBox[FIFONumber].RDTR;
 975              		.loc 1 769 0
 976 002a DCF80440 		ldr	r4, [ip, #4]
 977 002e 04F00F03 		and	r3, r4, #15
 978 0032 9372     		strb	r3, [r2, #10]
 770:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the FMI */
 771:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->FMI = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDTR >> 8);
 979              		.loc 1 771 0
 980 0034 DCF80440 		ldr	r4, [ip, #4]
 772:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the data field */
 773:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[0] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDLR;
 981              		.loc 1 773 0
 982 0038 00EB0113 		add	r3, r0, r1, lsl #4
 771:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->FMI = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDTR >> 8);
 983              		.loc 1 771 0
 984 003c 240A     		lsrs	r4, r4, #8
 985 003e D474     		strb	r4, [r2, #19]
 986              		.loc 1 773 0
 987 0040 D3F8B841 		ldr	r4, [r3, #440]
 988 0044 D472     		strb	r4, [r2, #11]
 774:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[1] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 8);
 989              		.loc 1 774 0
 990 0046 D3F8B841 		ldr	r4, [r3, #440]
 991 004a 240A     		lsrs	r4, r4, #8
 992 004c 1473     		strb	r4, [r2, #12]
 775:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[2] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 16);
 993              		.loc 1 775 0
 994 004e D3F8B841 		ldr	r4, [r3, #440]
 995 0052 240C     		lsrs	r4, r4, #16
 996 0054 5473     		strb	r4, [r2, #13]
 776:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[3] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 24);
 997              		.loc 1 776 0
 998 0056 D3F8B841 		ldr	r4, [r3, #440]
 999 005a 240E     		lsrs	r4, r4, #24
 1000 005c 9473     		strb	r4, [r2, #14]
 777:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[4] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDHR;
 1001              		.loc 1 777 0
 1002 005e D3F8BC41 		ldr	r4, [r3, #444]
 1003 0062 D473     		strb	r4, [r2, #15]
 778:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[5] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 8);
 1004              		.loc 1 778 0
 1005 0064 D3F8BC41 		ldr	r4, [r3, #444]
 1006 0068 240A     		lsrs	r4, r4, #8
 1007 006a 1474     		strb	r4, [r2, #16]
 779:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[6] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 16);
 1008              		.loc 1 779 0
 1009 006c D3F8BC41 		ldr	r4, [r3, #444]
 773:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[0] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDLR;
 1010              		.loc 1 773 0
 1011 0070 03F5DC7C 		add	ip, r3, #440
 1012              		.loc 1 779 0
 1013 0074 240C     		lsrs	r4, r4, #16
 1014 0076 5474     		strb	r4, [r2, #17]
 780:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[7] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 24);
 1015              		.loc 1 780 0
 1016 0078 DCF80430 		ldr	r3, [ip, #4]
 1017 007c 1B0E     		lsrs	r3, r3, #24
 1018 007e 9374     		strb	r3, [r2, #18]
 781:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release the FIFO */
 782:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 783:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1019              		.loc 1 783 0
 1020 0080 41B1     		cbz	r1, .L90
 784:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 785:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 786:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 787:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 788:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 789:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 790:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 1021              		.loc 1 790 0
 1022 0082 0169     		ldr	r1, [r0, #16]
 1023              	.LVL59:
 1024 0084 41F02003 		orr	r3, r1, #32
 1025 0088 0361     		str	r3, [r0, #16]
 1026              	.LVL60:
 1027              	.L85:
 791:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 792:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1028              		.loc 1 792 0
 1029 008a 30BC     		pop	{r4, r5}
 1030 008c 7047     		bx	lr
 1031              	.LVL61:
 1032              	.L86:
 764:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->ExtId = (uint32_t)0x1FFFFFFF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 3);
 1033              		.loc 1 764 0
 1034 008e E408     		lsrs	r4, r4, #3
 1035 0090 5460     		str	r4, [r2, #4]
 1036 0092 C3E7     		b	.L87
 1037              	.L90:
 785:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 1038              		.loc 1 785 0
 1039 0094 C268     		ldr	r2, [r0, #12]
 1040              	.LVL62:
 1041 0096 42F02001 		orr	r1, r2, #32
 1042              	.LVL63:
 1043 009a C160     		str	r1, [r0, #12]
 1044 009c F5E7     		b	.L85
 1045              		.cfi_endproc
 1046              	.LFE120:
 1048 009e 00BF     		.section	.text.CAN_FIFORelease,"ax",%progbits
 1049              		.align	2
 1050              		.global	CAN_FIFORelease
 1051              		.thumb
 1052              		.thumb_func
 1054              	CAN_FIFORelease:
 1055              	.LFB121:
 793:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 794:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 795:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Releases the specified receive FIFO.
 796:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 797:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: FIFO to release, CAN_FIFO0 or CAN_FIFO1.
 798:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 799:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 800:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FIFORelease(CAN_TypeDef* CANx, uint8_t FIFONumber)
 801:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1056              		.loc 1 801 0
 1057              		.cfi_startproc
 1058              		@ args = 0, pretend = 0, frame = 0
 1059              		@ frame_needed = 0, uses_anonymous_args = 0
 1060              		@ link register save eliminated.
 1061              	.LVL64:
 802:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 803:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 804:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 805:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 806:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1062              		.loc 1 806 0
 1063 0000 21B1     		cbz	r1, .L94
 807:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 808:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 809:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 810:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 811:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 812:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 813:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 1064              		.loc 1 813 0
 1065 0002 0369     		ldr	r3, [r0, #16]
 1066 0004 43F02002 		orr	r2, r3, #32
 1067 0008 0261     		str	r2, [r0, #16]
 1068 000a 7047     		bx	lr
 1069              	.L94:
 808:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 1070              		.loc 1 808 0
 1071 000c C168     		ldr	r1, [r0, #12]
 1072              	.LVL65:
 1073 000e 41F02003 		orr	r3, r1, #32
 1074 0012 C360     		str	r3, [r0, #12]
 1075 0014 7047     		bx	lr
 1076              		.cfi_endproc
 1077              	.LFE121:
 1079 0016 00BF     		.section	.text.CAN_MessagePending,"ax",%progbits
 1080              		.align	2
 1081              		.global	CAN_MessagePending
 1082              		.thumb
 1083              		.thumb_func
 1085              	CAN_MessagePending:
 1086              	.LFB122:
 814:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 815:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 816:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 817:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 818:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the number of pending received messages.
 819:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 820:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 821:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval NbMessage : which is the number of pending message.
 822:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 823:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_MessagePending(CAN_TypeDef* CANx, uint8_t FIFONumber)
 824:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1087              		.loc 1 824 0
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 0
 1090              		@ frame_needed = 0, uses_anonymous_args = 0
 1091              		@ link register save eliminated.
 1092              	.LVL66:
 1093              	.LVL67:
 825:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t message_pending=0;
 826:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 827:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 828:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 829:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1094              		.loc 1 829 0
 1095 0000 31B1     		cbz	r1, .L99
 830:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 831:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF0R&(uint32_t)0x03);
 832:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 833:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if (FIFONumber == CAN_FIFO1)
 1096              		.loc 1 833 0
 1097 0002 0129     		cmp	r1, #1
 834:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 835:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF1R&(uint32_t)0x03);
 1098              		.loc 1 835 0
 1099 0004 06BF     		itte	eq
 1100 0006 0069     		ldreq	r0, [r0, #16]
 1101              	.LVL68:
 1102 0008 00F00300 		andeq	r0, r0, #3
 1103              	.LVL69:
 836:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 837:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 838:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 839:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = 0;
 1104              		.loc 1 839 0
 1105 000c 0020     		movne	r0, #0
 1106              	.LVL70:
 840:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 841:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return message_pending;
 842:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1107              		.loc 1 842 0
 1108 000e 7047     		bx	lr
 1109              	.LVL71:
 1110              	.L99:
 831:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF0R&(uint32_t)0x03);
 1111              		.loc 1 831 0
 1112 0010 C068     		ldr	r0, [r0, #12]
 1113              	.LVL72:
 1114 0012 00F00300 		and	r0, r0, #3
 1115              	.LVL73:
 1116 0016 7047     		bx	lr
 1117              		.cfi_endproc
 1118              	.LFE122:
 1120              		.section	.text.CAN_OperatingModeRequest,"ax",%progbits
 1121              		.align	2
 1122              		.global	CAN_OperatingModeRequest
 1123              		.thumb
 1124              		.thumb_func
 1126              	CAN_OperatingModeRequest:
 1127              	.LFB123:
 843:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 844:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 845:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 846:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 847:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 848:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group4 CAN Operation modes functions
 849:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Operation modes functions 
 850:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 851:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 852:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 853:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Operation modes functions
 854:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 855:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to select the CAN Operation modes
 856:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - sleep mode
 857:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - normal mode 
 858:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - initialization mode
 859:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 860:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 861:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 862:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 863:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 864:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 865:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 866:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Selects the CAN Operation mode.
 867:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_OperatingMode: CAN Operating Mode.
 868:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         This parameter can be one of @ref CAN_OperatingMode_TypeDef enumeration.
 869:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval status of the requested mode which can be 
 870:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Failed:  CAN failed entering the specific mode 
 871:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Success: CAN Succeed entering the specific mode 
 872:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 873:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_OperatingModeRequest(CAN_TypeDef* CANx, uint8_t CAN_OperatingMode)
 874:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1128              		.loc 1 874 0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 0
 1131              		@ frame_needed = 0, uses_anonymous_args = 0
 1132              		@ link register save eliminated.
 1133              	.LVL74:
 1134              	.LVL75:
 875:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t status = CAN_ModeStatus_Failed;
 876:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 877:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Timeout for INAK or also for SLAK bits*/
 878:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t timeout = INAK_TIMEOUT; 
 879:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 880:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 881:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 882:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_OPERATING_MODE(CAN_OperatingMode));
 883:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 884:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_OperatingMode == CAN_OperatingMode_Initialization)
 1135              		.loc 1 884 0
 1136 0000 0029     		cmp	r1, #0
 1137 0002 30D1     		bne	.L101
 885:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 886:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request initialisation */
 887:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_SLEEP)) | CAN_MCR_INRQ);
 1138              		.loc 1 887 0
 1139 0004 0368     		ldr	r3, [r0, #0]
 1140 0006 23F0030C 		bic	ip, r3, #3
 1141 000a 4CF00102 		orr	r2, ip, #1
 1142 000e 0260     		str	r2, [r0, #0]
 888:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 889:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 890:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 1143              		.loc 1 890 0
 1144 0010 4168     		ldr	r1, [r0, #4]
 1145              	.LVL76:
 1146 0012 01F00303 		and	r3, r1, #3
 1147 0016 012B     		cmp	r3, #1
 1148 0018 1CD0     		beq	.L102
 1149 001a 4FF6FF73 		movw	r3, #65535
 1150              	.LVL77:
 1151              	.L103:
 1152 001e 4268     		ldr	r2, [r0, #4]
 1153 0020 02F00301 		and	r1, r2, #3
 1154 0024 0129     		cmp	r1, #1
 1155 0026 15D0     		beq	.L102
 1156              		.loc 1 890 0 is_stmt 0 discriminator 2
 1157 0028 4268     		ldr	r2, [r0, #4]
 1158 002a 02F00301 		and	r1, r2, #3
 1159 002e 0129     		cmp	r1, #1
 1160 0030 10D0     		beq	.L102
 1161              		.loc 1 890 0
 1162 0032 4268     		ldr	r2, [r0, #4]
 1163 0034 02F00301 		and	r1, r2, #3
 1164 0038 0129     		cmp	r1, #1
 1165 003a 0BD0     		beq	.L102
 1166 003c 4268     		ldr	r2, [r0, #4]
 1167 003e 02F00301 		and	r1, r2, #3
 1168 0042 0129     		cmp	r1, #1
 1169 0044 06D0     		beq	.L102
 1170 0046 4268     		ldr	r2, [r0, #4]
 1171 0048 02F00301 		and	r1, r2, #3
 1172 004c 0129     		cmp	r1, #1
 1173 004e 01D0     		beq	.L102
 1174 0050 053B     		subs	r3, r3, #5
 1175 0052 E4D1     		bne	.L103
 1176              	.L102:
 891:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 892:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 893:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 894:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK)
 1177              		.loc 1 894 0 is_stmt 1
 1178 0054 4268     		ldr	r2, [r0, #4]
 1179 0056 02F00301 		and	r1, r2, #3
 895:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 896:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 897:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 898:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 899:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 900:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1180              		.loc 1 900 0
 1181 005a A1F10103 		sub	r3, r1, #1
 1182 005e 5842     		rsbs	r0, r3, #0
 1183              	.LVL78:
 1184 0060 40EB0300 		adc	r0, r0, r3
 1185 0064 7047     		bx	lr
 1186              	.LVL79:
 1187              	.L101:
 901:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 902:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 903:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Normal)
 1188              		.loc 1 903 0
 1189 0066 0129     		cmp	r1, #1
 1190 0068 03D0     		beq	.L129
 904:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 905:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation and sleep mode  and enter Normal mode */
 906:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(CAN_MCR_SLEEP|CAN_MCR_INRQ));
 907:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 908:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 909:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 910:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 911:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 912:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 913:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != 0)
 914:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 915:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 916:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 917:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 918:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 919:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 920:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 921:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 922:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Sleep)
 1191              		.loc 1 922 0
 1192 006a 0229     		cmp	r1, #2
 1193 006c 22D0     		beq	.L130
 923:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 924:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request Sleep mode */
 925:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 926:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 927:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 928:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 929:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 930:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 931:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 932:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK)
 933:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 934:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 935:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 936:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 937:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 938:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 939:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 940:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 941:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 942:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 943:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     status = CAN_ModeStatus_Failed;
 1194              		.loc 1 943 0
 1195 006e 0020     		movs	r0, #0
 1196              	.LVL80:
 944:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 945:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 946:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  (uint8_t) status;
 947:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1197              		.loc 1 947 0
 1198 0070 7047     		bx	lr
 1199              	.LVL81:
 1200              	.L129:
 906:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(CAN_MCR_SLEEP|CAN_MCR_INRQ));
 1201              		.loc 1 906 0
 1202 0072 0268     		ldr	r2, [r0, #0]
 1203 0074 22F00301 		bic	r1, r2, #3
 1204              	.LVL82:
 1205 0078 0160     		str	r1, [r0, #0]
 909:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1206              		.loc 1 909 0
 1207 007a 4368     		ldr	r3, [r0, #4]
 1208 007c 9B07     		lsls	r3, r3, #30
 1209 007e 12D0     		beq	.L106
 1210 0080 4FF6FF73 		movw	r3, #65535
 1211              	.LVL83:
 1212              	.L107:
 1213 0084 4168     		ldr	r1, [r0, #4]
 1214 0086 8907     		lsls	r1, r1, #30
 1215 0088 0DD0     		beq	.L106
 909:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1216              		.loc 1 909 0 is_stmt 0 discriminator 2
 1217 008a 4268     		ldr	r2, [r0, #4]
 1218 008c 9207     		lsls	r2, r2, #30
 1219 008e 0AD0     		beq	.L106
 909:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1220              		.loc 1 909 0
 1221 0090 4168     		ldr	r1, [r0, #4]
 1222 0092 8907     		lsls	r1, r1, #30
 1223 0094 07D0     		beq	.L106
 1224 0096 4268     		ldr	r2, [r0, #4]
 1225 0098 9207     		lsls	r2, r2, #30
 1226 009a 04D0     		beq	.L106
 1227 009c 4168     		ldr	r1, [r0, #4]
 1228 009e 8907     		lsls	r1, r1, #30
 1229 00a0 01D0     		beq	.L106
 1230 00a2 053B     		subs	r3, r3, #5
 1231 00a4 EED1     		bne	.L107
 1232              	.L106:
 913:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != 0)
 1233              		.loc 1 913 0 is_stmt 1
 1234 00a6 4068     		ldr	r0, [r0, #4]
 1235              	.LVL84:
 900:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1236              		.loc 1 900 0
 1237 00a8 10F0030F 		tst	r0, #3
 1238 00ac 14BF     		ite	ne
 1239 00ae 0020     		movne	r0, #0
 1240 00b0 0120     		moveq	r0, #1
 1241 00b2 7047     		bx	lr
 1242              	.LVL85:
 1243              	.L130:
 925:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 1244              		.loc 1 925 0
 1245 00b4 0368     		ldr	r3, [r0, #0]
 1246 00b6 23F00302 		bic	r2, r3, #3
 1247 00ba 42F00201 		orr	r1, r2, #2
 1248              	.LVL86:
 1249 00be 0160     		str	r1, [r0, #0]
 928:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1250              		.loc 1 928 0
 1251 00c0 4368     		ldr	r3, [r0, #4]
 1252 00c2 03F0030C 		and	ip, r3, #3
 1253 00c6 BCF1020F 		cmp	ip, #2
 1254 00ca 1DD0     		beq	.L108
 1255 00cc 4FF6FF73 		movw	r3, #65535
 1256              	.LVL87:
 1257              	.L109:
 1258 00d0 4268     		ldr	r2, [r0, #4]
 1259 00d2 02F00301 		and	r1, r2, #3
 1260 00d6 0229     		cmp	r1, #2
 1261 00d8 16D0     		beq	.L108
 928:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1262              		.loc 1 928 0 is_stmt 0 discriminator 2
 1263 00da 4268     		ldr	r2, [r0, #4]
 1264 00dc 02F00301 		and	r1, r2, #3
 1265 00e0 0229     		cmp	r1, #2
 1266 00e2 11D0     		beq	.L108
 928:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1267              		.loc 1 928 0
 1268 00e4 4268     		ldr	r2, [r0, #4]
 1269 00e6 02F0030C 		and	ip, r2, #3
 1270 00ea BCF1020F 		cmp	ip, #2
 1271 00ee 0BD0     		beq	.L108
 1272 00f0 4268     		ldr	r2, [r0, #4]
 1273 00f2 02F00301 		and	r1, r2, #3
 1274 00f6 0229     		cmp	r1, #2
 1275 00f8 06D0     		beq	.L108
 1276 00fa 4268     		ldr	r2, [r0, #4]
 1277 00fc 02F00301 		and	r1, r2, #3
 1278 0100 0229     		cmp	r1, #2
 1279 0102 01D0     		beq	.L108
 1280 0104 053B     		subs	r3, r3, #5
 1281 0106 E3D1     		bne	.L109
 1282              	.L108:
 932:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK)
 1283              		.loc 1 932 0 is_stmt 1
 1284 0108 4268     		ldr	r2, [r0, #4]
 1285 010a 02F00301 		and	r1, r2, #3
 900:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1286              		.loc 1 900 0
 1287 010e A1F10203 		sub	r3, r1, #2
 1288 0112 5842     		rsbs	r0, r3, #0
 1289              	.LVL88:
 1290 0114 40EB0300 		adc	r0, r0, r3
 1291 0118 7047     		bx	lr
 1292              		.cfi_endproc
 1293              	.LFE123:
 1295 011a 00BF     		.section	.text.CAN_Sleep,"ax",%progbits
 1296              		.align	2
 1297              		.global	CAN_Sleep
 1298              		.thumb
 1299              		.thumb_func
 1301              	CAN_Sleep:
 1302              	.LFB124:
 948:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 949:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 950:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enters the Sleep (low power) mode.
 951:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 952:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_Sleep_Ok if sleep entered, CAN_Sleep_Failed otherwise.
 953:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 954:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Sleep(CAN_TypeDef* CANx)
 955:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1303              		.loc 1 955 0
 1304              		.cfi_startproc
 1305              		@ args = 0, pretend = 0, frame = 0
 1306              		@ frame_needed = 0, uses_anonymous_args = 0
 1307              		@ link register save eliminated.
 1308              	.LVL89:
 1309              	.LVL90:
 956:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t sleepstatus = CAN_Sleep_Failed;
 957:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 958:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 959:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 960:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 961:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request Sleep mode */
 962:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    CANx->MCR = (((CANx->MCR) & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 1310              		.loc 1 962 0
 1311 0000 0368     		ldr	r3, [r0, #0]
 1312 0002 23F00302 		bic	r2, r3, #3
 1313 0006 42F00201 		orr	r1, r2, #2
 1314 000a 0160     		str	r1, [r0, #0]
 963:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 964:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 965:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & (CAN_MSR_SLAK|CAN_MSR_INAK)) == CAN_MSR_SLAK)
 1315              		.loc 1 965 0
 1316 000c 4368     		ldr	r3, [r0, #4]
 1317              	.LVL91:
 1318 000e 03F00302 		and	r2, r3, #3
 966:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 967:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Sleep mode not entered */
 968:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     sleepstatus =  CAN_Sleep_Ok;
 969:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 970:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return sleep mode status */
 971:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    return (uint8_t)sleepstatus;
 972:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1319              		.loc 1 972 0
 1320 0012 A2F10201 		sub	r1, r2, #2
 1321 0016 4842     		rsbs	r0, r1, #0
 1322              	.LVL92:
 1323 0018 40EB0100 		adc	r0, r0, r1
 1324 001c 7047     		bx	lr
 1325              		.cfi_endproc
 1326              	.LFE124:
 1328 001e 00BF     		.section	.text.CAN_WakeUp,"ax",%progbits
 1329              		.align	2
 1330              		.global	CAN_WakeUp
 1331              		.thumb
 1332              		.thumb_func
 1334              	CAN_WakeUp:
 1335              	.LFB125:
 973:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 974:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 975:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Wakes up the CAN peripheral from sleep mode .
 976:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 977:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_WakeUp_Ok if sleep mode left, CAN_WakeUp_Failed otherwise.
 978:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 979:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_WakeUp(CAN_TypeDef* CANx)
 980:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1336              		.loc 1 980 0
 1337              		.cfi_startproc
 1338              		@ args = 0, pretend = 0, frame = 0
 1339              		@ frame_needed = 0, uses_anonymous_args = 0
 1340              		@ link register save eliminated.
 1341              	.LVL93:
 1342              	.LVL94:
 981:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_slak = SLAK_TIMEOUT;
 982:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t wakeupstatus = CAN_WakeUp_Failed;
 983:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 984:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 985:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 986:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 987:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wake up request */
 988:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= ~(uint32_t)CAN_MCR_SLEEP;
 1343              		.loc 1 988 0
 1344 0000 0268     		ldr	r2, [r0, #0]
 1345 0002 22F00201 		bic	r1, r2, #2
 1346 0006 0160     		str	r1, [r0, #0]
 989:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 990:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 991:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 1347              		.loc 1 991 0
 1348 0008 4368     		ldr	r3, [r0, #4]
 1349 000a 9907     		lsls	r1, r3, #30
 1350 000c 12D5     		bpl	.L133
 1351 000e 4FF6FF73 		movw	r3, #65535
 1352              	.LVL95:
 1353              	.L134:
 1354 0012 4168     		ldr	r1, [r0, #4]
 1355 0014 8A07     		lsls	r2, r1, #30
 1356 0016 0DD5     		bpl	.L133
 1357              		.loc 1 991 0 is_stmt 0 discriminator 2
 1358 0018 4268     		ldr	r2, [r0, #4]
 1359 001a 9107     		lsls	r1, r2, #30
 1360 001c 0AD5     		bpl	.L133
 1361              		.loc 1 991 0
 1362 001e 4168     		ldr	r1, [r0, #4]
 1363 0020 8A07     		lsls	r2, r1, #30
 1364 0022 07D5     		bpl	.L133
 1365 0024 4268     		ldr	r2, [r0, #4]
 1366 0026 9107     		lsls	r1, r2, #30
 1367 0028 04D5     		bpl	.L133
 1368 002a 4168     		ldr	r1, [r0, #4]
 1369 002c 8A07     		lsls	r2, r1, #30
 1370 002e 01D5     		bpl	.L133
 1371 0030 053B     		subs	r3, r3, #5
 1372 0032 EED1     		bne	.L134
 1373              	.L133:
 992:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 993:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_slak--;
 994:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 995:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CANx->MSR & CAN_MSR_SLAK) != CAN_MSR_SLAK)
 1374              		.loc 1 995 0 is_stmt 1
 1375 0034 4068     		ldr	r0, [r0, #4]
 1376              	.LVL96:
 982:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t wakeupstatus = CAN_WakeUp_Failed;
 1377              		.loc 1 982 0
 1378 0036 10F0020F 		tst	r0, #2
 996:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 997:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* wake up done : Sleep mode exited */
 998:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wakeupstatus = CAN_WakeUp_Ok;
 999:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1000:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return wakeup status */
1001:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t)wakeupstatus;
1002:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1379              		.loc 1 1002 0
 1380 003a 14BF     		ite	ne
 1381 003c 0020     		movne	r0, #0
 1382 003e 0120     		moveq	r0, #1
 1383              	.LVL97:
 1384 0040 7047     		bx	lr
 1385              		.cfi_endproc
 1386              	.LFE125:
 1388 0042 00BF     		.section	.text.CAN_GetLastErrorCode,"ax",%progbits
 1389              		.align	2
 1390              		.global	CAN_GetLastErrorCode
 1391              		.thumb
 1392              		.thumb_func
 1394              	CAN_GetLastErrorCode:
 1395              	.LFB126:
1003:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1004:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1005:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1006:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1007:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1008:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group5 CAN Bus Error management functions
1009:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Bus Error management functions 
1010:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1011:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
1012:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1013:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Bus Error management functions
1014:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1015:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
1016:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx's last error code (LEC)
1017:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx Receive Error Counter (REC)
1018:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1019:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
1020:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note If TEC is greater than 255, The CAN is in bus-off state.
1021:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 96, an Error warning flag occurs.
1022:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 127, an Error Passive Flag occurs.
1023:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                         
1024:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1025:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1026:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1027:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1028:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1029:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx's last error code (LEC).
1030:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
1031:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Error code: 
1032:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_NoErr: No Error  
1033:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_StuffErr: Stuff Error
1034:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_FormErr: Form Error
1035:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_ACKErr : Acknowledgment Error
1036:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitRecessiveErr: Bit Recessive Error
1037:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitDominantErr: Bit Dominant Error
1038:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_CRCErr: CRC Error
1039:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_SoftwareSetErr: Software Set Error  
1040:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1041:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLastErrorCode(CAN_TypeDef* CANx)
1042:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1396              		.loc 1 1042 0
 1397              		.cfi_startproc
 1398              		@ args = 0, pretend = 0, frame = 0
 1399              		@ frame_needed = 0, uses_anonymous_args = 0
 1400              		@ link register save eliminated.
 1401              	.LVL98:
 1402              	.LVL99:
1043:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t errorcode=0;
1044:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1045:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1046:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1047:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1048:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the error code*/
1049:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   errorcode = (((uint8_t)CANx->ESR) & (uint8_t)CAN_ESR_LEC);
 1403              		.loc 1 1049 0
 1404 0000 8069     		ldr	r0, [r0, #24]
 1405              	.LVL100:
1050:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1051:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the error code*/
1052:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return errorcode;
1053:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1406              		.loc 1 1053 0
 1407 0002 00F07000 		and	r0, r0, #112
 1408              	.LVL101:
 1409 0006 7047     		bx	lr
 1410              		.cfi_endproc
 1411              	.LFE126:
 1413              		.section	.text.CAN_GetReceiveErrorCounter,"ax",%progbits
 1414              		.align	2
 1415              		.global	CAN_GetReceiveErrorCounter
 1416              		.thumb
 1417              		.thumb_func
 1419              	CAN_GetReceiveErrorCounter:
 1420              	.LFB127:
1054:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1055:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1056:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx Receive Error Counter (REC).
1057:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   In case of an error during reception, this counter is incremented 
1058:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         by 1 or by 8 depending on the error condition as defined by the CAN 
1059:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         standard. After every successful reception, the counter is 
1060:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         decremented by 1 or reset to 120 if its value was higher than 128. 
1061:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When the counter value exceeds 127, the CAN controller enters the 
1062:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         error passive state.  
1063:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.  
1064:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN Receive Error Counter. 
1065:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1066:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetReceiveErrorCounter(CAN_TypeDef* CANx)
1067:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1421              		.loc 1 1067 0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 1425              		@ link register save eliminated.
 1426              	.LVL102:
 1427              	.LVL103:
1068:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
1069:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1070:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1071:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1072:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1073:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Receive Error Counter*/
1074:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_REC)>> 24);
 1428              		.loc 1 1074 0
 1429 0000 8069     		ldr	r0, [r0, #24]
 1430              	.LVL104:
1075:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1076:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the Receive Error Counter*/
1077:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
1078:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1431              		.loc 1 1078 0
 1432 0002 000E     		lsrs	r0, r0, #24
 1433              	.LVL105:
 1434 0004 7047     		bx	lr
 1435              		.cfi_endproc
 1436              	.LFE127:
 1438 0006 00BF     		.section	.text.CAN_GetLSBTransmitErrorCounter,"ax",%progbits
 1439              		.align	2
 1440              		.global	CAN_GetLSBTransmitErrorCounter
 1441              		.thumb
 1442              		.thumb_func
 1444              	CAN_GetLSBTransmitErrorCounter:
 1445              	.LFB128:
1079:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1080:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1081:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1082:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1083:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1084:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval LSB of the 9-bit CAN Transmit Error Counter. 
1085:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1086:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLSBTransmitErrorCounter(CAN_TypeDef* CANx)
1087:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1446              		.loc 1 1087 0
 1447              		.cfi_startproc
 1448              		@ args = 0, pretend = 0, frame = 0
 1449              		@ frame_needed = 0, uses_anonymous_args = 0
 1450              		@ link register save eliminated.
 1451              	.LVL106:
 1452              	.LVL107:
1088:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
1089:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1090:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1091:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1092:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1093:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1094:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_TEC)>> 16);
 1453              		.loc 1 1094 0
 1454 0000 8069     		ldr	r0, [r0, #24]
 1455              	.LVL108:
1095:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1096:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1097:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
1098:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1456              		.loc 1 1098 0
 1457 0002 C0F30740 		ubfx	r0, r0, #16, #8
 1458              	.LVL109:
 1459 0006 7047     		bx	lr
 1460              		.cfi_endproc
 1461              	.LFE128:
 1463              		.section	.text.CAN_ITConfig,"ax",%progbits
 1464              		.align	2
 1465              		.global	CAN_ITConfig
 1466              		.thumb
 1467              		.thumb_func
 1469              	CAN_ITConfig:
 1470              	.LFB129:
1099:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1100:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1101:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1102:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1103:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group6 Interrupts and flags management functions
1104:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief   Interrupts and flags management functions
1105:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1106:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim   
1107:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1108:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                    Interrupts and flags management functions
1109:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1110:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1111:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to configure the CAN Interrupts and 
1112:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   to get the status and clear flags and Interrupts pending bits.
1113:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1114:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The CAN provides 14 Interrupts sources and 15 Flags:
1115:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1116:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1117:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       Flags :
1118:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1119:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 15 flags can be divided on 4 groups: 
1120:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1121:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit Flags
1122:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1123:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP0, 
1124:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP1, 
1125:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP2  : Request completed MailBoxes 0, 1 and 2  Flags
1126:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when when the last request (transmit or abort) has 
1127:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           been performed. 
1128:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1129:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   B. Receive Flags
1130:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1131:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1132:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP0,
1133:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP1   : FIFO 0 and 1 Message Pending Flags 
1134:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that messages are pending in the receive 
1135:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.
1136:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           These Flags are cleared only by hardware. 
1137:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1138:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF0,
1139:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF1    : FIFO 0 and 1 Full Flags
1140:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when three messages are stored in the selected 
1141:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.                        
1142:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1143:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV0              
1144:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV1   : FIFO 0 and 1 Overrun Flags
1145:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when a new message has been received and passed 
1146:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the filter while the FIFO was full.         
1147:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1148:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   C. Operating Mode Flags
1149:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1150:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_WKU    : Wake up Flag
1151:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that a SOF bit has been detected while 
1152:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN hardware was in Sleep mode. 
1153:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1154:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_SLAK   : Sleep acknowledge Flag
1155:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set to signal that the CAN has entered Sleep Mode. 
1156:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
1157:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   D. Error Flags
1158:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1159:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EWG    : Error Warning Flag
1160:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the warning limit has been reached (Receive 
1161:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter greater than 96). 
1162:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1163:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                             
1164:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EPV    : Error Passive Flag
1165:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the Error Passive limit has been reached 
1166:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           (Receive Error Counter or Transmit Error Counter 
1167:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           greater than 127).
1168:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1169:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                              
1170:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_BOF    : Bus-Off Flag
1171:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when CAN enters the bus-off state. The bus-off 
1172:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           state is entered on TEC overflow, greater than 255.
1173:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1174:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                    
1175:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_LEC    : Last error code Flag
1176:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set If a message has been transferred (reception or
1177:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.              
1178:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1179:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1180:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    Interrupts :
1181:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1182:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 14 interrupts can be divided on 4 groups: 
1183:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1184:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit interrupt
1185:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------   
1186:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           CAN_IT_TME   :  Transmit mailbox empty Interrupt
1187:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1188:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           no transmit request are pending for Tx mailboxes.      
1189:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1190:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    B. Receive Interrupts
1191:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------          
1192:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP0,
1193:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP1    :  FIFO 0 and FIFO1 message pending Interrupts
1194:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when 
1195:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           messages are pending in the receive FIFO.
1196:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           The corresponding interrupt pending bits are cleared 
1197:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           only by hardware.
1198:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
1199:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF0,              
1200:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF1     :  FIFO 0 and FIFO1 full Interrupts
1201:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1202:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           three messages are stored in the selected FIFO.
1203:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1204:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV0,        
1205:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV1    :  FIFO 0 and FIFO1 overrun Interrupts        
1206:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1207:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a new message has been received and passed the filter
1208:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           while the FIFO was full.
1209:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1210:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    C. Operating Mode Interrupts
1211:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -------------------------------          
1212:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_WKU     :  Wake-up Interrupt
1213:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1214:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a SOF bit has been detected while the CAN hardware was 
1215:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           in Sleep mode.
1216:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1217:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_SLK     :  Sleep acknowledge Interrupt
1218:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1219:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN has entered Sleep Mode.       
1220:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1221:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    D. Error Interrupts 
1222:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------         
1223:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EWG     :  Error warning Interrupt 
1224:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1225:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the warning limit has been reached (Receive Error 
1226:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Counter or Transmit Error Counter=96). 
1227:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                
1228:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EPV     :  Error passive Interrupt        
1229:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1230:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the Error Passive limit has been reached (Receive 
1231:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter>127).
1232:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1233:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_BOF     :  Bus-off Interrupt
1234:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1235:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           CAN enters the bus-off state. The bus-off state is 
1236:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           entered on TEC overflow, greater than 255.
1237:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1238:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1239:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_LEC     :  Last error code Interrupt        
1240:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending  when
1241:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a message has been transferred (reception or
1242:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.
1243:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1244:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_ERR     :  Error Interrupt
1245:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1246:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           an error condition is pending.      
1247:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       
1248:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1249:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   Managing the CAN controller events :
1250:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ------------------------------------ 
1251:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The user should identify which mode will be used in his application to manage 
1252:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   the CAN controller events: Polling mode or Interrupt mode.
1253:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1254:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   1.  In the Polling Mode it is advised to use the following functions:
1255:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetFlagStatus() : to check if flags events occur. 
1256:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearFlag()     : to clear the flags events.
1257:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1258:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1259:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1260:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
1261:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ITConfig()       : to enable or disable the interrupt source.
1262:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetITStatus()    : to check if Interrupt occurs.
1263:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearITPendingBit() : to clear the Interrupt pending Bit (corresponding Flag).
1264:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       @note  This function has no impact on CAN_IT_FMP0 and CAN_IT_FMP1 Interrupts 
1265:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****              pending bits since there are cleared only by hardware. 
1266:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1267:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1268:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1269:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
1270:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1271:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the specified CANx interrupts.
1272:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1273:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt sources to be enabled or disabled.
1274:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: 
1275:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1276:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1277:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1278:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1279:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1280:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1281:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1282:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1283:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1284:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1285:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1286:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1287:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1288:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1289:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN interrupts.
1290:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE or DISABLE.
1291:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1292:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1293:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ITConfig(CAN_TypeDef* CANx, uint32_t CAN_IT, FunctionalState NewState)
1294:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1471              		.loc 1 1294 0
 1472              		.cfi_startproc
 1473              		@ args = 0, pretend = 0, frame = 0
 1474              		@ frame_needed = 0, uses_anonymous_args = 0
 1475              		@ link register save eliminated.
 1476              	.LVL110:
1295:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1296:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1297:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1298:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1299:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1300:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
1301:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1302:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the selected CANx interrupt */
1303:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER |= CAN_IT;
 1477              		.loc 1 1303 0
 1478 0000 4369     		ldr	r3, [r0, #20]
1300:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 1479              		.loc 1 1300 0
 1480 0002 1AB9     		cbnz	r2, .L147
1304:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1305:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1306:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1307:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the selected CANx interrupt */
1308:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER &= ~CAN_IT;
 1481              		.loc 1 1308 0
 1482 0004 23EA0102 		bic	r2, r3, r1
 1483              	.LVL111:
 1484 0008 4261     		str	r2, [r0, #20]
 1485 000a 7047     		bx	lr
 1486              	.LVL112:
 1487              	.L147:
1303:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER |= CAN_IT;
 1488              		.loc 1 1303 0
 1489 000c 1943     		orrs	r1, r1, r3
 1490              	.LVL113:
 1491 000e 4161     		str	r1, [r0, #20]
 1492 0010 7047     		bx	lr
 1493              		.cfi_endproc
 1494              	.LFE129:
 1496 0012 00BF     		.section	.text.CAN_GetFlagStatus,"ax",%progbits
 1497              		.align	2
 1498              		.global	CAN_GetFlagStatus
 1499              		.thumb
 1500              		.thumb_func
 1502              	CAN_GetFlagStatus:
 1503              	.LFB130:
1309:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1310:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
1311:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1312:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CAN flag is set or not.
1313:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1314:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to check.
1315:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1316:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1317:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1318:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag
1319:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP0: FIFO 0 Message Pending Flag   
1320:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1321:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag 
1322:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP1: FIFO 1 Message Pending Flag   
1323:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1324:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1325:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1326:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag 
1327:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EWG: Error Warning Flag
1328:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EPV: Error Passive Flag  
1329:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_BOF: Bus-Off Flag    
1330:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag      
1331:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of CAN_FLAG (SET or RESET).
1332:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1333:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** FlagStatus CAN_GetFlagStatus(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1334:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1504              		.loc 1 1334 0
 1505              		.cfi_startproc
 1506              		@ args = 0, pretend = 0, frame = 0
 1507              		@ frame_needed = 0, uses_anonymous_args = 0
 1508              		@ link register save eliminated.
 1509              	.LVL114:
 1510              	.LVL115:
1335:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   FlagStatus bitstatus = RESET;
1336:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1337:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1338:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1339:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_GET_FLAG(CAN_FLAG));
1340:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1341:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1342:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CAN_FLAG & CAN_FLAGS_ESR) != (uint32_t)RESET)
 1511              		.loc 1 1342 0
 1512 0000 11F4700F 		tst	r1, #15728640
 1513 0004 09D0     		beq	.L149
1343:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1344:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1345:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->ESR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 1514              		.loc 1 1345 0
 1515 0006 8269     		ldr	r2, [r0, #24]
 1516 0008 22F07F40 		bic	r0, r2, #-16777216
 1517              	.LVL116:
 1518 000c 20F47003 		bic	r3, r0, #15728640
1346:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1347:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1348:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1349:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1350:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1351:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1352:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1353:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 1519              		.loc 1 1353 0
 1520 0010 0B42     		tst	r3, r1
 1521 0012 0CBF     		ite	eq
 1522 0014 0020     		moveq	r0, #0
 1523 0016 0120     		movne	r0, #1
 1524 0018 7047     		bx	lr
 1525              	.LVL117:
 1526              	.L149:
1354:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1355:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1356:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_MSR) != (uint32_t)RESET)
 1527              		.loc 1 1356 0
 1528 001a CB01     		lsls	r3, r1, #7
 1529 001c 0AD5     		bpl	.L151
1357:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1358:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1359:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 1530              		.loc 1 1359 0
 1531 001e 4068     		ldr	r0, [r0, #4]
 1532              	.LVL118:
 1533 0020 20F07F43 		bic	r3, r0, #-16777216
 1534 0024 23F4700C 		bic	ip, r3, #15728640
1353:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 1535              		.loc 1 1353 0
 1536 0028 1CEA010F 		tst	ip, r1
 1537 002c 0CBF     		ite	eq
 1538 002e 0020     		moveq	r0, #0
 1539 0030 0120     		movne	r0, #1
 1540 0032 7047     		bx	lr
 1541              	.LVL119:
 1542              	.L151:
1360:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1361:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1362:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1363:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1364:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1365:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1366:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1367:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
1368:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1369:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1370:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_TSR) != (uint32_t)RESET)
 1543              		.loc 1 1370 0
 1544 0034 0A01     		lsls	r2, r1, #4
 1545 0036 0BD4     		bmi	.L154
1371:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1372:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1373:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->TSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
1374:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1375:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1376:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1377:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1378:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1379:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1380:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1381:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
1382:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1383:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1384:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_RF0R) != (uint32_t)RESET)
 1546              		.loc 1 1384 0
 1547 0038 8B01     		lsls	r3, r1, #6
 1548 003a 13D5     		bpl	.L153
1385:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1386:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1387:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->RF0R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 1549              		.loc 1 1387 0
 1550 003c C368     		ldr	r3, [r0, #12]
 1551 003e 23F07F42 		bic	r2, r3, #-16777216
 1552 0042 22F47000 		bic	r0, r2, #15728640
 1553              	.LVL120:
1353:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 1554              		.loc 1 1353 0
 1555 0046 0842     		tst	r0, r1
 1556 0048 0CBF     		ite	eq
 1557 004a 0020     		moveq	r0, #0
 1558 004c 0120     		movne	r0, #1
 1559 004e 7047     		bx	lr
 1560              	.LVL121:
 1561              	.L154:
1373:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->TSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 1562              		.loc 1 1373 0
 1563 0050 8368     		ldr	r3, [r0, #8]
 1564 0052 23F07F4C 		bic	ip, r3, #-16777216
 1565 0056 2CF47002 		bic	r2, ip, #15728640
1353:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 1566              		.loc 1 1353 0
 1567 005a 0A42     		tst	r2, r1
 1568 005c 0CBF     		ite	eq
 1569 005e 0020     		moveq	r0, #0
 1570 0060 0120     		movne	r0, #1
 1571              	.LVL122:
 1572 0062 7047     		bx	lr
 1573              	.LVL123:
 1574              	.L153:
1388:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1389:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1390:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1391:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1392:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1393:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1394:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1395:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
1396:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1397:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1398:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* If(CAN_FLAG & CAN_FLAGS_RF1R != (uint32_t)RESET) */
1399:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1400:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1401:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((uint32_t)(CANx->RF1R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 1575              		.loc 1 1401 0
 1576 0064 0369     		ldr	r3, [r0, #16]
 1577 0066 23F07F42 		bic	r2, r3, #-16777216
 1578 006a 22F47000 		bic	r0, r2, #15728640
 1579              	.LVL124:
1353:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 1580              		.loc 1 1353 0
 1581 006e 0842     		tst	r0, r1
 1582 0070 0CBF     		ite	eq
 1583 0072 0020     		moveq	r0, #0
 1584 0074 0120     		movne	r0, #1
 1585              	.LVL125:
1402:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1403:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1404:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1405:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1406:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1407:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1408:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1409:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
1410:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1411:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1412:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_FLAG status */
1413:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  bitstatus;
1414:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1586              		.loc 1 1414 0
 1587 0076 7047     		bx	lr
 1588              		.cfi_endproc
 1589              	.LFE130:
 1591              		.section	.text.CAN_ClearFlag,"ax",%progbits
 1592              		.align	2
 1593              		.global	CAN_ClearFlag
 1594              		.thumb
 1595              		.thumb_func
 1597              	CAN_ClearFlag:
 1598              	.LFB131:
1415:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1416:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1417:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CAN's pending flags.
1418:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1419:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to clear.
1420:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1421:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1422:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1423:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag 
1424:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1425:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag  
1426:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1427:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1428:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1429:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag    
1430:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag        
1431:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1432:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1433:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearFlag(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1434:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1599              		.loc 1 1434 0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 0
 1602              		@ frame_needed = 0, uses_anonymous_args = 0
 1603              		@ link register save eliminated.
 1604              	.LVL126:
 1605              	.LVL127:
1435:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t flagtmp=0;
1436:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1437:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1438:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_FLAG(CAN_FLAG));
1439:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1440:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FLAG == CAN_FLAG_LEC) /* ESR register */
 1606              		.loc 1 1440 0
 1607 0000 7023     		movs	r3, #112
 1608 0002 C3F2F003 		movt	r3, 12528
 1609 0006 9942     		cmp	r1, r3
 1610 0008 0ED0     		beq	.L161
1441:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1442:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Clear the selected CAN flags */
1443:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->ESR = (uint32_t)RESET;
1444:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1445:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* MSR or TSR or RF0R or RF1R */
1446:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1447:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     flagtmp = CAN_FLAG & 0x000FFFFF;
 1611              		.loc 1 1447 0
 1612 000a 21F07F42 		bic	r2, r1, #-16777216
 1613 000e 22F47003 		bic	r3, r2, #15728640
 1614              	.LVL128:
1448:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1449:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CAN_FLAG & CAN_FLAGS_RF0R)!=(uint32_t)RESET)
 1615              		.loc 1 1449 0
 1616 0012 8A01     		lsls	r2, r1, #6
 1617 0014 06D4     		bmi	.L162
1450:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1451:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1452:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = (uint32_t)(flagtmp);
1453:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1454:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_RF1R)!=(uint32_t)RESET)
 1618              		.loc 1 1454 0
 1619 0016 4A01     		lsls	r2, r1, #5
 1620 0018 09D4     		bmi	.L163
1455:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1456:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1457:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = (uint32_t)(flagtmp);
1458:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1459:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_TSR)!=(uint32_t)RESET)
 1621              		.loc 1 1459 0
 1622 001a 0A01     		lsls	r2, r1, #4
1460:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1461:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Transmit Flags */
1462:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = (uint32_t)(flagtmp);
 1623              		.loc 1 1462 0
 1624 001c 4CBF     		ite	mi
 1625 001e 8360     		strmi	r3, [r0, #8]
1463:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1464:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else /* If((CAN_FLAG & CAN_FLAGS_MSR)!=(uint32_t)RESET) */
1465:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1466:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Operating mode Flags */
1467:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = (uint32_t)(flagtmp);
 1626              		.loc 1 1467 0
 1627 0020 4360     		strpl	r3, [r0, #4]
 1628 0022 7047     		bx	lr
 1629              	.L162:
1452:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = (uint32_t)(flagtmp);
 1630              		.loc 1 1452 0
 1631 0024 C360     		str	r3, [r0, #12]
 1632 0026 7047     		bx	lr
 1633              	.LVL129:
 1634              	.L161:
1443:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->ESR = (uint32_t)RESET;
 1635              		.loc 1 1443 0
 1636 0028 0021     		movs	r1, #0
 1637              	.LVL130:
 1638 002a 8161     		str	r1, [r0, #24]
 1639 002c 7047     		bx	lr
 1640              	.LVL131:
 1641              	.L163:
1457:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = (uint32_t)(flagtmp);
 1642              		.loc 1 1457 0
 1643 002e 0361     		str	r3, [r0, #16]
 1644 0030 7047     		bx	lr
 1645              		.cfi_endproc
 1646              	.LFE131:
 1648 0032 00BF     		.section	.text.CAN_GetITStatus,"ax",%progbits
 1649              		.align	2
 1650              		.global	CAN_GetITStatus
 1651              		.thumb
 1652              		.thumb_func
 1654              	CAN_GetITStatus:
 1655              	.LFB132:
1468:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1469:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1470:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
1471:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1472:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1473:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CANx interrupt has occurred or not.
1474:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1475:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt source to check.
1476:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1477:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1478:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1479:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1480:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1481:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1482:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1483:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1484:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1485:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1486:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1487:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1488:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1489:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1490:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1491:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The current state of CAN_IT (SET or RESET).
1492:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1493:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** ITStatus CAN_GetITStatus(CAN_TypeDef* CANx, uint32_t CAN_IT)
1494:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1656              		.loc 1 1494 0
 1657              		.cfi_startproc
 1658              		@ args = 0, pretend = 0, frame = 0
 1659              		@ frame_needed = 0, uses_anonymous_args = 0
 1660              		@ link register save eliminated.
 1661              	.LVL132:
 1662              	.LVL133:
1495:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus itstatus = RESET;
1496:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1497:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1498:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1499:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1500:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* check the interrupt enable bit */
1501:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  if((CANx->IER & CAN_IT) != RESET)
 1663              		.loc 1 1501 0
 1664 0000 4369     		ldr	r3, [r0, #20]
 1665 0002 0B40     		ands	r3, r1, r3
 1666 0004 0BD0     		beq	.L183
1502:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  {
1503:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is enabled, .... */
1504:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     switch (CAN_IT)
 1667              		.loc 1 1504 0
 1668 0006 4029     		cmp	r1, #64
 1669 0008 33D0     		beq	.L172
 1670 000a 0AD8     		bhi	.L180
 1671 000c 0429     		cmp	r1, #4
 1672 000e 3BD0     		beq	.L168
 1673 0010 25D8     		bhi	.L181
 1674 0012 0129     		cmp	r1, #1
 1675 0014 4ED0     		beq	.L166
 1676 0016 0229     		cmp	r1, #2
 1677 0018 42D0     		beq	.L185
 1678              	.L184:
1505:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1506:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_TME:
1507:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_TSR_RQCPx bits */
1508:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->TSR, CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2);  
1509:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1510:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP0:
1511:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FMP0 bit */
1512:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FMP0);  
1513:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1514:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF0:
1515:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FULL0 bit */
1516:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FULL0);  
1517:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1518:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV0:
1519:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FOVR0 bit */
1520:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FOVR0);  
1521:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1522:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP1:
1523:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FMP1 bit */
1524:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FMP1);  
1525:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1526:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF1:
1527:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FULL1 bit */
1528:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FULL1);  
1529:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1530:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV1:
1531:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FOVR1 bit */
1532:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FOVR1);  
1533:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1534:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_WKU:
1535:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_WKUI bit */
1536:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_WKUI);  
1537:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1538:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_SLK:
1539:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_SLAKI bit */
1540:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_SLAKI);  
1541:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1542:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EWG:
1543:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EWGF bit */
1544:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EWGF);  
1545:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1546:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EPV:
1547:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EPVF bit */
1548:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EPVF);  
1549:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1550:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_BOF:
1551:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_BOFF bit */
1552:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_BOFF);  
1553:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1554:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_LEC:
1555:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_LEC bit */
1556:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_LEC);  
1557:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1558:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_ERR:
1559:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_ERRI bit */ 
1560:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_ERRI); 
1561:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1562:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       default:
1563:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* in case of error, return RESET */
1564:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = RESET;
 1679              		.loc 1 1564 0
 1680 001a 0020     		movs	r0, #0
 1681              	.LVL134:
1565:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1566:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1567:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1568:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1569:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1570:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is not enabled, return RESET */
1571:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     itstatus  = RESET;
1572:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1573:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1574:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_IT status */
1575:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  itstatus;
1576:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1682              		.loc 1 1576 0
 1683 001c 7047     		bx	lr
 1684              	.LVL135:
 1685              	.L183:
1571:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     itstatus  = RESET;
 1686              		.loc 1 1571 0
 1687 001e 1846     		mov	r0, r3
 1688              	.LVL136:
 1689 0020 7047     		bx	lr
 1690              	.LVL137:
 1691              	.L180:
1504:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     switch (CAN_IT)
 1692              		.loc 1 1504 0
 1693 0022 B1F5006F 		cmp	r1, #2048
 1694 0026 28D0     		beq	.L176
 1695 0028 0CD8     		bhi	.L182
 1696 002a B1F5007F 		cmp	r1, #512
 1697 002e 4FD0     		beq	.L174
 1698 0030 B1F5806F 		cmp	r1, #1024
 1699 0034 30D0     		beq	.L175
 1700 0036 B1F5807F 		cmp	r1, #256
 1701 003a EED1     		bne	.L184
1544:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EWGF);  
 1702              		.loc 1 1544 0
 1703 003c 8169     		ldr	r1, [r0, #24]
 1704              	.LVL138:
1577:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1578:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1579:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CANx's interrupt pending bits.
1580:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1581:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the interrupt pending bit to clear.
1582:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1583:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt
1584:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1585:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1586:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1587:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1588:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1589:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1590:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1591:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1592:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1593:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1594:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt 
1595:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1596:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1597:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearITPendingBit(CAN_TypeDef* CANx, uint32_t CAN_IT)
1598:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
1599:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1600:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1601:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_IT(CAN_IT));
1602:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1603:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
1604:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1605:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_TME:
1606:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_TSR_RQCPx (rc_w1)*/
1607:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
1608:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1609:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF0:
1610:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FULL0 (rc_w1)*/
1611:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
1612:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1613:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV0:
1614:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FOVR0 (rc_w1)*/
1615:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
1616:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1617:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF1:
1618:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FULL1 (rc_w1)*/
1619:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
1620:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1621:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV1:
1622:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FOVR1 (rc_w1)*/
1623:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
1624:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1625:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_WKU:
1626:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_WKUI (rc_w1)*/
1627:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
1628:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1629:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_SLK:
1630:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_SLAKI (rc_w1)*/ 
1631:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
1632:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1633:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EWG:
1634:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1635:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI;
1636:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/ 
1637:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1638:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EPV:
1639:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1640:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1641:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1642:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1643:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_BOF:
1644:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */ 
1645:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1646:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1647:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1648:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_LEC:
1649:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*  Clear LEC bits */
1650:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1651:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1652:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1653:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1654:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_ERR:
1655:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*Clear LEC bits */
1656:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1657:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1658:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1659:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
1660:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1661:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
1662:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1663:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
1664:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
1665:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  /**
1666:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1667:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1668:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1669:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1670:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the CAN interrupt has occurred or not.
1671:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_Reg: specifies the CAN interrupt register to check.
1672:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  It_Bit: specifies the interrupt source bit to check.
1673:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of the CAN Interrupt (SET or RESET).
1674:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1675:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit)
1676:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
1677:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus pendingbitstatus = RESET;
1678:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1679:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CAN_Reg & It_Bit) != (uint32_t)RESET)
1680:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1681:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is set */
1682:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = SET;
1683:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1684:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1685:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1686:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is reset */
1687:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = RESET;
 1705              		.loc 1 1687 0
 1706 003e 01F00100 		and	r0, r1, #1
 1707              	.LVL139:
 1708 0042 7047     		bx	lr
 1709              	.LVL140:
 1710              	.L182:
1504:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     switch (CAN_IT)
 1711              		.loc 1 1504 0
 1712 0044 B1F5803F 		cmp	r1, #65536
 1713 0048 3ED0     		beq	.L178
 1714 004a B1F5003F 		cmp	r1, #131072
 1715 004e 2DD0     		beq	.L179
 1716 0050 B1F5004F 		cmp	r1, #32768
 1717 0054 E1D1     		bne	.L184
1560:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_ERRI); 
 1718              		.loc 1 1560 0
 1719 0056 4168     		ldr	r1, [r0, #4]
 1720              	.LVL141:
 1721              		.loc 1 1687 0
 1722 0058 C1F38000 		ubfx	r0, r1, #2, #1
 1723              	.LVL142:
 1724 005c 7047     		bx	lr
 1725              	.LVL143:
 1726              	.L181:
1504:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     switch (CAN_IT)
 1727              		.loc 1 1504 0
 1728 005e 1029     		cmp	r1, #16
 1729 0060 3AD0     		beq	.L170
 1730 0062 2029     		cmp	r1, #32
 1731 0064 14D0     		beq	.L171
 1732 0066 0829     		cmp	r1, #8
 1733 0068 D7D1     		bne	.L184
1520:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FOVR0);  
 1734              		.loc 1 1520 0
 1735 006a C268     		ldr	r2, [r0, #12]
 1736              	.LVL144:
 1737              		.loc 1 1687 0
 1738 006c C2F30010 		ubfx	r0, r2, #4, #1
 1739              	.LVL145:
 1740 0070 7047     		bx	lr
 1741              	.LVL146:
 1742              	.L172:
1532:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FOVR1);  
 1743              		.loc 1 1532 0
 1744 0072 0369     		ldr	r3, [r0, #16]
 1745              	.LVL147:
 1746              		.loc 1 1687 0
 1747 0074 C3F30010 		ubfx	r0, r3, #4, #1
 1748              	.LVL148:
 1749 0078 7047     		bx	lr
 1750              	.LVL149:
 1751              	.L176:
1556:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_LEC);  
 1752              		.loc 1 1556 0
 1753 007a 8069     		ldr	r0, [r0, #24]
 1754              	.LVL150:
 1755              		.loc 1 1687 0
 1756 007c 10F0700F 		tst	r0, #112
 1757 0080 0CBF     		ite	eq
 1758 0082 0020     		moveq	r0, #0
 1759 0084 0120     		movne	r0, #1
 1760              	.LVL151:
 1761 0086 7047     		bx	lr
 1762              	.LVL152:
 1763              	.L168:
1516:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FULL0);  
 1764              		.loc 1 1516 0
 1765 0088 C368     		ldr	r3, [r0, #12]
 1766              	.LVL153:
 1767              		.loc 1 1687 0
 1768 008a C3F3C000 		ubfx	r0, r3, #3, #1
 1769              	.LVL154:
 1770 008e 7047     		bx	lr
 1771              	.LVL155:
 1772              	.L171:
1528:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FULL1);  
 1773              		.loc 1 1528 0
 1774 0090 0169     		ldr	r1, [r0, #16]
 1775              	.LVL156:
 1776              		.loc 1 1687 0
 1777 0092 C1F3C000 		ubfx	r0, r1, #3, #1
 1778              	.LVL157:
 1779 0096 7047     		bx	lr
 1780              	.LVL158:
 1781              	.L175:
1552:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_BOFF);  
 1782              		.loc 1 1552 0
 1783 0098 8269     		ldr	r2, [r0, #24]
 1784              	.LVL159:
 1785              		.loc 1 1687 0
 1786 009a C2F38000 		ubfx	r0, r2, #2, #1
 1787              	.LVL160:
 1788 009e 7047     		bx	lr
 1789              	.LVL161:
 1790              	.L185:
1512:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FMP0);  
 1791              		.loc 1 1512 0
 1792 00a0 C168     		ldr	r1, [r0, #12]
 1793              	.LVL162:
 1794              		.loc 1 1687 0
 1795 00a2 11F00300 		ands	r0, r1, #3
 1796              	.LVL163:
 1797 00a6 18BF     		it	ne
 1798 00a8 0120     		movne	r0, #1
 1799 00aa 7047     		bx	lr
 1800              	.LVL164:
 1801              	.L179:
1540:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_SLAKI);  
 1802              		.loc 1 1540 0
 1803 00ac 4068     		ldr	r0, [r0, #4]
 1804              	.LVL165:
 1805              		.loc 1 1687 0
 1806 00ae C0F30010 		ubfx	r0, r0, #4, #1
 1807              	.LVL166:
 1808 00b2 7047     		bx	lr
 1809              	.LVL167:
 1810              	.L166:
1508:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->TSR, CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2);  
 1811              		.loc 1 1508 0
 1812 00b4 8268     		ldr	r2, [r0, #8]
 1813              	.LVL168:
 1814              	.LBB30:
 1815              	.LBB31:
1679:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CAN_Reg & It_Bit) != (uint32_t)RESET)
 1816              		.loc 1 1679 0
 1817 00b6 40F20110 		movw	r0, #257
 1818              	.LVL169:
 1819 00ba 61F31F40 		bfi	r0, r1, #16, #16
 1820              	.LBE31:
 1821              	.LBE30:
1682:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = SET;
 1822              		.loc 1 1682 0
 1823 00be 0242     		tst	r2, r0
 1824 00c0 0CBF     		ite	eq
 1825 00c2 0020     		moveq	r0, #0
 1826 00c4 0120     		movne	r0, #1
 1827 00c6 7047     		bx	lr
 1828              	.LVL170:
 1829              	.L178:
1536:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_WKUI);  
 1830              		.loc 1 1536 0
 1831 00c8 4268     		ldr	r2, [r0, #4]
 1832              	.LVL171:
 1833              		.loc 1 1687 0
 1834 00ca C2F3C000 		ubfx	r0, r2, #3, #1
 1835              	.LVL172:
 1836 00ce 7047     		bx	lr
 1837              	.LVL173:
 1838              	.L174:
1548:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EPVF);  
 1839              		.loc 1 1548 0
 1840 00d0 8369     		ldr	r3, [r0, #24]
 1841              	.LVL174:
 1842              		.loc 1 1687 0
 1843 00d2 C3F34000 		ubfx	r0, r3, #1, #1
 1844              	.LVL175:
 1845 00d6 7047     		bx	lr
 1846              	.LVL176:
 1847              	.L170:
1524:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FMP1);  
 1848              		.loc 1 1524 0
 1849 00d8 0069     		ldr	r0, [r0, #16]
 1850              	.LVL177:
 1851              		.loc 1 1687 0
 1852 00da 10F00300 		ands	r0, r0, #3
 1853              	.LVL178:
 1854 00de 18BF     		it	ne
 1855 00e0 0120     		movne	r0, #1
 1856 00e2 7047     		bx	lr
 1857              		.cfi_endproc
 1858              	.LFE132:
 1860              		.section	.text.CAN_ClearITPendingBit,"ax",%progbits
 1861              		.align	2
 1862              		.global	CAN_ClearITPendingBit
 1863              		.thumb
 1864              		.thumb_func
 1866              	CAN_ClearITPendingBit:
 1867              	.LFB133:
1598:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1868              		.loc 1 1598 0
 1869              		.cfi_startproc
 1870              		@ args = 0, pretend = 0, frame = 0
 1871              		@ frame_needed = 0, uses_anonymous_args = 0
 1872              		@ link register save eliminated.
 1873              	.LVL179:
1603:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 1874              		.loc 1 1603 0
 1875 0000 B1F5807F 		cmp	r1, #256
 1876 0004 1ED0     		beq	.L203
 1877 0006 11D9     		bls	.L204
 1878 0008 B1F5006F 		cmp	r1, #2048
 1879 000c 18D0     		beq	.L196
 1880 000e 1CD9     		bls	.L205
 1881 0010 B1F5803F 		cmp	r1, #65536
 1882 0014 36D0     		beq	.L198
 1883 0016 B1F5003F 		cmp	r1, #131072
 1884 001a 30D0     		beq	.L199
 1885 001c B1F5004F 		cmp	r1, #32768
 1886 0020 19D1     		bne	.L186
1656:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
 1887              		.loc 1 1656 0
 1888 0022 0021     		movs	r1, #0
 1889              	.LVL180:
 1890 0024 8161     		str	r1, [r0, #24]
1658:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 1891              		.loc 1 1658 0
 1892 0026 0423     		movs	r3, #4
 1893 0028 4360     		str	r3, [r0, #4]
1660:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 1894              		.loc 1 1660 0
 1895 002a 14E0     		b	.L186
 1896              	.LVL181:
 1897              	.L204:
1603:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 1898              		.loc 1 1603 0
 1899 002c 0829     		cmp	r1, #8
 1900 002e 1DD0     		beq	.L190
 1901 0030 12D9     		bls	.L206
 1902 0032 2029     		cmp	r1, #32
 1903 0034 17D0     		beq	.L191
 1904 0036 4029     		cmp	r1, #64
 1905 0038 0DD1     		bne	.L186
1623:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
 1906              		.loc 1 1623 0
 1907 003a 1021     		movs	r1, #16
 1908              	.LVL182:
 1909 003c 0161     		str	r1, [r0, #16]
1624:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1910              		.loc 1 1624 0
 1911 003e 7047     		bx	lr
 1912              	.LVL183:
 1913              	.L196:
1650:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
 1914              		.loc 1 1650 0
 1915 0040 0021     		movs	r1, #0
 1916              	.LVL184:
 1917 0042 8161     		str	r1, [r0, #24]
 1918              	.L203:
1652:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 1919              		.loc 1 1652 0
 1920 0044 0422     		movs	r2, #4
 1921 0046 4260     		str	r2, [r0, #4]
1653:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1922              		.loc 1 1653 0
 1923 0048 7047     		bx	lr
 1924              	.LVL185:
 1925              	.L205:
1603:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 1926              		.loc 1 1603 0
 1927 004a B1F5007F 		cmp	r1, #512
 1928 004e F9D0     		beq	.L203
 1929 0050 B1F5806F 		cmp	r1, #1024
 1930 0054 F6D0     		beq	.L203
 1931              	.LVL186:
 1932              	.L186:
 1933 0056 7047     		bx	lr
 1934              	.LVL187:
 1935              	.L206:
 1936 0058 0129     		cmp	r1, #1
 1937 005a 0AD0     		beq	.L188
 1938 005c 0429     		cmp	r1, #4
 1939 005e FAD1     		bne	.L186
1611:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
 1940              		.loc 1 1611 0
 1941 0060 0821     		movs	r1, #8
 1942              	.LVL188:
 1943 0062 C160     		str	r1, [r0, #12]
1612:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1944              		.loc 1 1612 0
 1945 0064 7047     		bx	lr
 1946              	.LVL189:
 1947              	.L191:
1619:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
 1948              		.loc 1 1619 0
 1949 0066 0823     		movs	r3, #8
 1950 0068 0361     		str	r3, [r0, #16]
1620:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1951              		.loc 1 1620 0
 1952 006a 7047     		bx	lr
 1953              	.L190:
1615:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
 1954              		.loc 1 1615 0
 1955 006c 1022     		movs	r2, #16
 1956 006e C260     		str	r2, [r0, #12]
1616:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1957              		.loc 1 1616 0
 1958 0070 7047     		bx	lr
 1959              	.L188:
1607:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
 1960              		.loc 1 1607 0
 1961 0072 40F20113 		movw	r3, #257
 1962 0076 61F31F43 		bfi	r3, r1, #16, #16
 1963 007a 8360     		str	r3, [r0, #8]
1608:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1964              		.loc 1 1608 0
 1965 007c 7047     		bx	lr
 1966              	.L199:
1631:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
 1967              		.loc 1 1631 0
 1968 007e 1023     		movs	r3, #16
 1969 0080 4360     		str	r3, [r0, #4]
1632:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1970              		.loc 1 1632 0
 1971 0082 7047     		bx	lr
 1972              	.L198:
1627:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
 1973              		.loc 1 1627 0
 1974 0084 0822     		movs	r2, #8
 1975 0086 4260     		str	r2, [r0, #4]
1628:../../lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1976              		.loc 1 1628 0
 1977 0088 7047     		bx	lr
 1978              		.cfi_endproc
 1979              	.LFE133:
 1981 008a 00BF     		.text
 1982              	.Letext0:
 1983              		.file 2 "c:\\program files\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/gcc/ar
 1984              		.file 3 "../../lib/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1985              		.file 4 "../../lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
 1986              		.file 5 "../../lib/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_can.c
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:18     .text.CAN_DeInit:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:23     .text.CAN_DeInit:00000000 CAN_DeInit
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:71     .text.CAN_Init:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:76     .text.CAN_Init:00000000 CAN_Init
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:267    .text.CAN_FilterInit:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:272    .text.CAN_FilterInit:00000000 CAN_FilterInit
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:451    .text.CAN_StructInit:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:456    .text.CAN_StructInit:00000000 CAN_StructInit
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:496    .text.CAN_SlaveStartBank:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:501    .text.CAN_SlaveStartBank:00000000 CAN_SlaveStartBank
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:535    .text.CAN_DBGFreeze:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:540    .text.CAN_DBGFreeze:00000000 CAN_DBGFreeze
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:567    .text.CAN_TTComModeCmd:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:572    .text.CAN_TTComModeCmd:00000000 CAN_TTComModeCmd
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:624    .text.CAN_Transmit:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:629    .text.CAN_Transmit:00000000 CAN_Transmit
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:794    .text.CAN_TransmitStatus:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:799    .text.CAN_TransmitStatus:00000000 CAN_TransmitStatus
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:888    .text.CAN_CancelTransmit:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:893    .text.CAN_CancelTransmit:00000000 CAN_CancelTransmit
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:935    .text.CAN_Receive:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:940    .text.CAN_Receive:00000000 CAN_Receive
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1049   .text.CAN_FIFORelease:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1054   .text.CAN_FIFORelease:00000000 CAN_FIFORelease
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1080   .text.CAN_MessagePending:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1085   .text.CAN_MessagePending:00000000 CAN_MessagePending
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1121   .text.CAN_OperatingModeRequest:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1126   .text.CAN_OperatingModeRequest:00000000 CAN_OperatingModeRequest
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1296   .text.CAN_Sleep:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1301   .text.CAN_Sleep:00000000 CAN_Sleep
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1329   .text.CAN_WakeUp:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1334   .text.CAN_WakeUp:00000000 CAN_WakeUp
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1389   .text.CAN_GetLastErrorCode:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1394   .text.CAN_GetLastErrorCode:00000000 CAN_GetLastErrorCode
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1414   .text.CAN_GetReceiveErrorCounter:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1419   .text.CAN_GetReceiveErrorCounter:00000000 CAN_GetReceiveErrorCounter
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1439   .text.CAN_GetLSBTransmitErrorCounter:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1444   .text.CAN_GetLSBTransmitErrorCounter:00000000 CAN_GetLSBTransmitErrorCounter
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1464   .text.CAN_ITConfig:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1469   .text.CAN_ITConfig:00000000 CAN_ITConfig
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1497   .text.CAN_GetFlagStatus:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1502   .text.CAN_GetFlagStatus:00000000 CAN_GetFlagStatus
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1592   .text.CAN_ClearFlag:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1597   .text.CAN_ClearFlag:00000000 CAN_ClearFlag
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1649   .text.CAN_GetITStatus:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1654   .text.CAN_GetITStatus:00000000 CAN_GetITStatus
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1861   .text.CAN_ClearITPendingBit:00000000 $t
C:\DOCUME~1\ptuser\LOCALS~1\Temp\ccl0mIkU.s:1866   .text.CAN_ClearITPendingBit:00000000 CAN_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
